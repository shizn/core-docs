items:
- uid: System.Security.AccessControl.EventWaitHandleSecurity
  commentId: T:System.Security.AccessControl.EventWaitHandleSecurity
  id: EventWaitHandleSecurity
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.EventWaitHandleSecurity.#ctor
  - System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType
  - System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType
  - System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  langs:
  - csharp
  - vb
  name: EventWaitHandleSecurity
  fullName: System.Security.AccessControl.EventWaitHandleSecurity
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/EventWaitHandle.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventWaitHandleSecurity
    path: src/mscorlib/src/System/Threading/EventWaitHandle.cs
    startLine: 18
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Represents the Windows access control security applied to a named system wait handle. This class cannot be inherited.
  syntax:
    content: 'public sealed class EventWaitHandleSecurity : NativeObjectSecurity'
    content.vb: >-
      Public NotInheritable Class EventWaitHandleSecurity
          Inherits NativeObjectSecurity
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.AccessControl.EventWaitHandleSecurity.#ctor
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: EventWaitHandleSecurity()
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.EventWaitHandleSecurity()
  type: Constructor
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 26
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.EventWaitHandleSecurity" data-throw-if-not-resolved="false"></xref> class with default values.
  syntax:
    content: public EventWaitHandleSecurity()
    content.vb: Public Sub New
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This class is not supported on Windows 98 or Windows Millennium Edition.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType
  commentId: P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: AccessRightType
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType
  type: Property
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessRightType
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 27
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the enumeration type that the <xref href="System.Security.AccessControl.EventWaitHandleSecurity" data-throw-if-not-resolved="false"></xref> class uses to represent access rights.
  syntax:
    content: public override Type AccessRightType { get; }
    content.vb: Public Overrides ReadOnly Property AccessRightType As Type
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> object representing the <xref href="System.Security.AccessControl.EventWaitHandleRights" data-throw-if-not-resolved="false"></xref> enumeration.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType
  commentId: P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: AccessRuleType
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType
  type: Property
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessRuleType
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 28
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the type that the <xref href="System.Security.AccessControl.EventWaitHandleSecurity" data-throw-if-not-resolved="false"></xref> class uses to represent access rules.
  syntax:
    content: public override Type AccessRuleType { get; }
    content.vb: Public Overrides ReadOnly Property AccessRuleType As Type
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> object representing the <xref href="System.Security.AccessControl.EventWaitHandleAccessRule" data-throw-if-not-resolved="false"></xref> class.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType
  commentId: P:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: AuditRuleType
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType
  type: Property
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AuditRuleType
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 29
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the type that the <xref href="System.Security.AccessControl.EventWaitHandleSecurity" data-throw-if-not-resolved="false"></xref> class uses to represent audit rules.
  syntax:
    content: public override Type AuditRuleType { get; }
    content.vb: Public Overrides ReadOnly Property AuditRuleType As Type
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> object representing the <xref href="System.Security.AccessControl.EventWaitHandleAuditRule" data-throw-if-not-resolved="false"></xref> class.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: AccessRuleFactory(Principal.IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessRuleFactory
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 30
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.
  syntax:
    content: public override AccessRule AccessRuleFactory(Principal.IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
    content.vb: Public Overrides Function AccessRuleFactory(identityReference As Principal.IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType) As AccessRule
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: An <xref href="System.Security.Principal.IdentityReference" data-throw-if-not-resolved="false"></xref> that identifies the user or group the rule applies to.
    - id: accessMask
      type: System.Int32
      description: A bitwise combination of <xref href="System.Security.AccessControl.EventWaitHandleRights" data-throw-if-not-resolved="false"></xref> values specifying the access rights to allow or deny, cast to an integer.
    - id: isInherited
      type: System.Boolean
      description: Meaningless for named wait handles, because they have no hierarchy.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: Meaningless for named wait handles, because they have no hierarchy.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Meaningless for named wait handles, because they have no hierarchy.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values specifying whether the rights are allowed or denied.
    return:
      type: System.Security.AccessControl.AccessRule
      description: An <xref href="System.Security.AccessControl.EventWaitHandleAccessRule" data-throw-if-not-resolved="false"></xref> object representing the specified rights for the specified user.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>type</em> specifies an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>identityReference</em> is null. -or-<em>accessMask</em> is zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>identityReference</em> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>, nor of a type such as <xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: AddAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAccessRule
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 31
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Searches for a matching access control rule with which the new rule can be merged. If none are found, adds the new rule.
  syntax:
    content: public void AddAccessRule(EventWaitHandleAccessRule rule)
    content.vb: Public Sub AddAccessRule(rule As EventWaitHandleAccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: The access control rule to add.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  id: AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: AddAuditRule(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAuditRule
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 32
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Searches for an audit rule with which the new rule can be merged. If none are found, adds the new rule.
  syntax:
    content: public void AddAuditRule(EventWaitHandleAuditRule rule)
    content.vb: Public Sub AddAuditRule(rule As EventWaitHandleAuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAuditRule
      description: The audit rule to add. The user specified by this rule determines the search.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: AuditRuleFactory(Principal.IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AuditRuleFactory
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 33
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.
  syntax:
    content: public override AuditRule AuditRuleFactory(Principal.IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
    content.vb: Public Overrides Function AuditRuleFactory(identityReference As Principal.IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags) As AuditRule
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: An <xref href="System.Security.Principal.IdentityReference" data-throw-if-not-resolved="false"></xref> that identifies the user or group the rule applies to.
    - id: accessMask
      type: System.Int32
      description: A bitwise combination of <xref href="System.Security.AccessControl.EventWaitHandleRights" data-throw-if-not-resolved="false"></xref> values specifying the access rights to audit, cast to an integer.
    - id: isInherited
      type: System.Boolean
      description: Meaningless for named wait handles, because they have no hierarchy.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: Meaningless for named wait handles, because they have no hierarchy.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Meaningless for named wait handles, because they have no hierarchy.
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: A bitwise combination of <xref href="System.Security.AccessControl.AuditFlags" data-throw-if-not-resolved="false"></xref> values specifying whether to audit successful access, failed access, or both.
    return:
      type: System.Security.AccessControl.AuditRule
      description: An <xref href="System.Security.AccessControl.EventWaitHandleAuditRule" data-throw-if-not-resolved="false"></xref> object representing the specified audit rule for the specified user. The return type of the method is the base class, <xref href="System.Security.AccessControl.AuditRule" data-throw-if-not-resolved="false"></xref>, but the return value can be cast safely to the derived class.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>flags</em> specifies an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>identityReference</em> is null. -or-<em>accessMask</em> is zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>identityReference</em> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>, nor of a type such as <xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: RemoveAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRule
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 34
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Searches for an access control rule with the same user and <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.
  syntax:
    content: public bool RemoveAccessRule(EventWaitHandleAccessRule rule)
    content.vb: Public Function RemoveAccessRule(rule As EventWaitHandleAccessRule) As Boolean
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: An <xref href="System.Security.AccessControl.EventWaitHandleAccessRule" data-throw-if-not-resolved="false"></xref> that specifies the user and <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.
    return:
      type: System.Boolean
      description: true if a compatible rule is found; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: RemoveAccessRuleAll(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRuleAll
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 35
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Searches for all access control rules with the same user and <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> (allow or deny) as the specified rule and, if found, removes them.
  syntax:
    content: public void RemoveAccessRuleAll(EventWaitHandleAccessRule rule)
    content.vb: Public Sub RemoveAccessRuleAll(rule As EventWaitHandleAccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: An <xref href="System.Security.AccessControl.EventWaitHandleAccessRule" data-throw-if-not-resolved="false"></xref> that specifies the user and <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> to search for. Any rights specified by this rule are ignored.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: RemoveAccessRuleSpecific(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRuleSpecific
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 36
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Searches for an access control rule that exactly matches the specified rule and, if found, removes it.
  syntax:
    content: public void RemoveAccessRuleSpecific(EventWaitHandleAccessRule rule)
    content.vb: Public Sub RemoveAccessRuleSpecific(rule As EventWaitHandleAccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: The <xref href="System.Security.AccessControl.EventWaitHandleAccessRule" data-throw-if-not-resolved="false"></xref> to remove.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: RemoveAuditRule(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRule
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 37
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Searches for an audit rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.
  syntax:
    content: public bool RemoveAuditRule(EventWaitHandleAuditRule rule)
    content.vb: Public Function RemoveAuditRule(rule As EventWaitHandleAuditRule) As Boolean
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAuditRule
      description: An <xref href="System.Security.AccessControl.EventWaitHandleAuditRule" data-throw-if-not-resolved="false"></xref> that specifies the user to search for and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.
    return:
      type: System.Boolean
      description: true if a compatible rule is found; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: RemoveAuditRuleAll(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRuleAll
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 38
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Searches for all audit rules with the same user as the specified rule and, if found, removes them.
  syntax:
    content: public void RemoveAuditRuleAll(EventWaitHandleAuditRule rule)
    content.vb: Public Sub RemoveAuditRuleAll(rule As EventWaitHandleAuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAuditRule
      description: An <xref href="System.Security.AccessControl.EventWaitHandleAuditRule" data-throw-if-not-resolved="false"></xref> that specifies the user to search for. Any rights specified by this rule are ignored.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: RemoveAuditRuleSpecific(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRuleSpecific
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 39
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Searches for an audit rule that exactly matches the specified rule and, if found, removes it.
  syntax:
    content: public void RemoveAuditRuleSpecific(EventWaitHandleAuditRule rule)
    content.vb: Public Sub RemoveAuditRuleSpecific(rule As EventWaitHandleAuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAuditRule
      description: The <xref href="System.Security.AccessControl.EventWaitHandleAuditRule" data-throw-if-not-resolved="false"></xref> to remove.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: ResetAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResetAccessRule
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 40
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes all access control rules with the same user as the specified rule, regardless of <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref>, and then adds the specified rule.
  syntax:
    content: public void ResetAccessRule(EventWaitHandleAccessRule rule)
    content.vb: Public Sub ResetAccessRule(rule As EventWaitHandleAccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: The <xref href="System.Security.AccessControl.EventWaitHandleAccessRule" data-throw-if-not-resolved="false"></xref> to add. The user specified by this rule determines the rules to remove before this rule is added.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: SetAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAccessRule
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 41
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes all access control rules with the same user and <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> (allow or deny) as the specified rule, and then adds the specified rule.
  syntax:
    content: public void SetAccessRule(EventWaitHandleAccessRule rule)
    content.vb: Public Sub SetAccessRule(rule As EventWaitHandleAccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: The <xref href="System.Security.AccessControl.EventWaitHandleAccessRule" data-throw-if-not-resolved="false"></xref> to add. The user and <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> of this rule determine the rules to remove before this rule is added.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  commentId: M:System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  id: SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  - vb
  name: SetAuditRule(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAuditRule
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 42
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes all audit rules with the same user as the specified rule, regardless of the <xref href="System.Security.AccessControl.AuditFlags" data-throw-if-not-resolved="false"></xref> value, and then adds the specified rule.
  syntax:
    content: public void SetAuditRule(EventWaitHandleAuditRule rule)
    content.vb: Public Sub SetAuditRule(rule As EventWaitHandleAuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAuditRule
      description: The <xref href="System.Security.AccessControl.EventWaitHandleAuditRule" data-throw-if-not-resolved="false"></xref> to add. The user specified by this rule determines the rules to remove before this rule is added.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>rule</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.AccessControl.EventWaitHandleAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: EventWaitHandleAccessRule
  fullName: System.Security.AccessControl.EventWaitHandleAccessRule
- uid: System.Security.AccessControl.EventWaitHandleAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: EventWaitHandleAuditRule
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
