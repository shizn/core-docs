items:
- uid: System.Net.Sockets.NetworkStream
  commentId: T:System.Net.Sockets.NetworkStream
  id: NetworkStream
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)
  - System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)
  - System.Net.Sockets.NetworkStream.CanRead
  - System.Net.Sockets.NetworkStream.CanSeek
  - System.Net.Sockets.NetworkStream.CanTimeout
  - System.Net.Sockets.NetworkStream.CanWrite
  - System.Net.Sockets.NetworkStream.DataAvailable
  - System.Net.Sockets.NetworkStream.Dispose(System.Boolean)
  - System.Net.Sockets.NetworkStream.Finalize
  - System.Net.Sockets.NetworkStream.Flush
  - System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)
  - System.Net.Sockets.NetworkStream.Length
  - System.Net.Sockets.NetworkStream.Position
  - System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.Net.Sockets.NetworkStream.ReadTimeout
  - System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Sockets.NetworkStream.SetLength(System.Int64)
  - System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.Net.Sockets.NetworkStream.WriteTimeout
  langs:
  - csharp
  - vb
  name: NetworkStream
  fullName: System.Net.Sockets.NetworkStream
  type: Class
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NetworkStream
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 12
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Provides the underlying stream of data for network access.
  syntax:
    content: 'public class NetworkStream : IO.Stream'
    content.vb: >-
      Public Class NetworkStream
          Inherits IO.Stream
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)
  commentId: M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)
  id: '#ctor(System.Net.Sockets.Socket)'
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: NetworkStream(Socket)
  fullName: System.Net.Sockets.NetworkStream.NetworkStream(System.Net.Sockets.Socket)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 32
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Creates a new instance of the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> class for the specified <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public NetworkStream(Socket socket)
    content.vb: Public Sub New(socket As Socket)
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> that the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> will use to send and receive data. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>socket</em> parameter is null. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The <em>socket</em> parameter is not connected.-or- The <xref href="System.Net.Sockets.Socket.SocketType" data-throw-if-not-resolved="false"></xref> property of the <em>socket</em> parameter is not <xref href="System.Net.Sockets.SocketType.Stream" data-throw-if-not-resolved="false"></xref>.-or- The <em>socket</em> parameter is in a nonblocking state. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)
  commentId: M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)
  id: '#ctor(System.Net.Sockets.Socket,System.Boolean)'
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: NetworkStream(Socket, Boolean)
  fullName: System.Net.Sockets.NetworkStream.NetworkStream(System.Net.Sockets.Socket, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 48
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> class for the specified <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> with the specified <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> ownership.
  syntax:
    content: public NetworkStream(Socket socket, bool ownsSocket)
    content.vb: Public Sub New(socket As Socket, ownsSocket As Boolean)
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> that the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> will use to send and receive data. '
    - id: ownsSocket
      type: System.Boolean
      description: 'Set to true to indicate that the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> will take ownership of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>; otherwise, false. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>socket</em> parameter is null. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The <em>socket</em> parameter is not connected.-or- the value of the <xref href="System.Net.Sockets.Socket.SocketType" data-throw-if-not-resolved="false"></xref> property of the <em>socket</em> parameter is not <xref href="System.Net.Sockets.SocketType.Stream" data-throw-if-not-resolved="false"></xref>.-or- the <em>socket</em> parameter is in a nonblocking state. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.NetworkStream.CanRead
  commentId: P:System.Net.Sockets.NetworkStream.CanRead
  id: CanRead
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: CanRead
  fullName: System.Net.Sockets.NetworkStream.CanRead
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanRead
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 156
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets a value that indicates whether the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> supports reading.
  syntax:
    content: public override bool CanRead { get; }
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if data can be read from the stream; otherwise, false. The default value is true.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.Sockets.NetworkStream.CanSeek
  commentId: P:System.Net.Sockets.NetworkStream.CanSeek
  id: CanSeek
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: CanSeek
  fullName: System.Net.Sockets.NetworkStream.CanSeek
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanSeek
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 166
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets a value that indicates whether the stream supports seeking. This property is not currently supported.This property always returns false.
  syntax:
    content: public override bool CanSeek { get; }
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: false in all cases to indicate that <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> cannot seek a specific location in the stream.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.Sockets.NetworkStream.CanTimeout
  commentId: P:System.Net.Sockets.NetworkStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: CanTimeout
  fullName: System.Net.Sockets.NetworkStream.CanTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanTimeout
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 184
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Indicates whether timeout properties are usable for <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override bool CanTimeout { get; }
    content.vb: Public Overrides ReadOnly Property CanTimeout As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true in all cases.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.Sockets.NetworkStream.CanWrite
  commentId: P:System.Net.Sockets.NetworkStream.CanWrite
  id: CanWrite
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: CanWrite
  fullName: System.Net.Sockets.NetworkStream.CanWrite
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanWrite
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 175
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets a value that indicates whether the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> supports writing.
  syntax:
    content: public override bool CanWrite { get; }
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if data can be written to the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref>; otherwise, false. The default value is true.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.Sockets.NetworkStream.DataAvailable
  commentId: P:System.Net.Sockets.NetworkStream.DataAvailable
  id: DataAvailable
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: DataAvailable
  fullName: System.Net.Sockets.NetworkStream.DataAvailable
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataAvailable
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 268
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets a value that indicates whether data is available on the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> to be read.
  syntax:
    content: public virtual bool DataAvailable { get; }
    content.vb: Public Overridable ReadOnly Property DataAvailable As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if data is available on the stream to be read; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The underlying <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is closed. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Use the <xref href=\"System.Net.Sockets.SocketException.ErrorCode\" data-throw-if-not-resolved=\"false\"></xref> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. "
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.Sockets.NetworkStream.Length
  commentId: P:System.Net.Sockets.NetworkStream.Length
  id: Length
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: Length
  fullName: System.Net.Sockets.NetworkStream.Length
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 297
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the length of the data available on the stream. This property is not currently supported and always throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override long Length { get; }
    content.vb: Public Overrides ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: The length of the data available on the stream.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'Any use of this property. '
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.Sockets.NetworkStream.Position
  commentId: P:System.Net.Sockets.NetworkStream.Position
  id: Position
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: Position
  fullName: System.Net.Sockets.NetworkStream.Position
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Position
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 306
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets the current position in the stream. This property is not currently supported and always throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override long Position { get; set; }
    content.vb: Public Overrides Property Position As Long
    parameters: []
    return:
      type: System.Int64
      description: The current position in the stream.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'Any use of this property. '
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Sockets.NetworkStream.ReadTimeout
  commentId: P:System.Net.Sockets.NetworkStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: ReadTimeout
  fullName: System.Net.Sockets.NetworkStream.ReadTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadTimeout
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 194
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: 'Gets or sets the amount of time that a read operation blocks waiting for data. '
  syntax:
    content: public override int ReadTimeout { get; set; }
    content.vb: Public Overrides Property ReadTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: A <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails. The default value, <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref>, specifies that the read operation does not time out.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: 'The value specified is less than or equal to zero and is not <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Sockets.NetworkStream.WriteTimeout
  commentId: P:System.Net.Sockets.NetworkStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: WriteTimeout
  fullName: System.Net.Sockets.NetworkStream.WriteTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteTimeout
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 231
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: 'Gets or sets the amount of time that a write operation blocks waiting for data. '
  syntax:
    content: public override int WriteTimeout { get; set; }
    content.vb: Public Overrides Property WriteTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: A <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails. The default value, <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref>, specifies that the write operation does not time out.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: 'The value specified is less than or equal to zero and is not <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Sockets.NetworkStream.Dispose(System.Boolean)
  commentId: M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.Sockets.NetworkStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 523
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> and optionally releases the managed resources.
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: 'true to release both managed and unmanaged resources; false to release only unmanaged resources. '
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Net.Sockets.NetworkStream.Finalize
  commentId: M:System.Net.Sockets.NetworkStream.Finalize
  id: Finalize
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: Finalize()
  fullName: System.Net.Sockets.NetworkStream.Finalize()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Finalize
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 563
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Releases all resources used by the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.Sockets.NetworkStream.Flush
  commentId: M:System.Net.Sockets.NetworkStream.Flush
  id: Flush
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: System.Net.Sockets.NetworkStream.Flush()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 1002
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Flushes data from the stream. This method is reserved for future use.
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)
  commentId: M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: FlushAsync(Threading.CancellationToken)
  fullName: System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FlushAsync
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 102
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Flushes data from the stream as an asynchronous operation.
  syntax:
    content: public override Threading.Tasks.Task FlushAsync(Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function FlushAsync(cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token used to propagate notification that this  operation should be canceled.
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  fullName: System.Net.Sockets.NetworkStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 391
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Reads data from the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override int Read(byte[] buffer, int offset, int size)
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, size As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the location in memory to store data read from the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref>. '
    - id: offset
      type: System.Int32
      description: 'The location in <em>buffer</em> to begin storing the data to. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to read from the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref>. '
    return:
      type: System.Int32
      description: The number of bytes read from the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>buffer</em> parameter is null. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <em>offset</em> parameter is less than 0.-or- The <em>offset</em> parameter is greater than the length of <em>buffer</em>.-or- The <em>size</em> parameter is less than 0.-or- The <em>size</em> parameter is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. -or-An error occurred when accessing the socket. See the Remarks section for more information.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The underlying <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is closed. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> is closed.-or- There is a failure reading from the network. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Net.Sockets.NetworkStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: ReadAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  fullName: System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadAsync
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 104
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public override Threading.Tasks.Task<int> ReadAsync(byte[] buffer, int offset, int size, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, size As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Net.Sockets.NetworkStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, Threading.CancellationToken)
- uid: System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, IO.SeekOrigin)
  fullName: System.Net.Sockets.NetworkStream.Seek(System.Int64, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Seek
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 105
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets the current position of the stream to the given value. This method is not currently supported and always throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override long Seek(long offset, IO.SeekOrigin origin)
    content.vb: Public Overrides Function Seek(offset As Long, origin As IO.SeekOrigin) As Long
    parameters:
    - id: offset
      type: System.Int64
      description: 'This parameter is not used. '
    - id: origin
      type: System.IO.SeekOrigin
      description: 'This parameter is not used. '
    return:
      type: System.Int64
      description: The position in the stream.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'Any use of this property. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Sockets.NetworkStream.SetLength(System.Int64)
  commentId: M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  fullName: System.Net.Sockets.NetworkStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetLength
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 1012
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets the length of the stream. This method always throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override void SetLength(long value)
    content.vb: Public Overrides Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: 'This parameter is not used. '
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'Any use of this property. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  fullName: System.Net.Sockets.NetworkStream.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Net.Sockets/src/System/Net/Sockets/NetworkStream.cs
    startLine: 464
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Writes data to the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override void Write(byte[] buffer, int offset, int size)
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, size As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to write to the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref>. '
    - id: offset
      type: System.Int32
      description: 'The location in <em>buffer</em> from which to start writing data. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to write to the <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>buffer</em> parameter is null. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: 'The <em>offset</em> parameter is less than 0.-or- The <em>offset</em> parameter is greater than the length of <em>buffer</em>.-or- The <em>size</em> parameter is less than 0.-or- The <em>size</em> parameter is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: There was a failure while writing to the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.NetworkStream" data-throw-if-not-resolved="false"></xref> is closed.-or- There was a failure reading from the network. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Net.Sockets.NetworkStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
- uid: System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.Net.Sockets.NetworkStream
  langs:
  - csharp
  - vb
  name: WriteAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  fullName: System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteAsync
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 108
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public override Threading.Tasks.Task WriteAsync(byte[] buffer, int offset, int size, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, size As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Net.Sockets.NetworkStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, Threading.CancellationToken)
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: false
  name: Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Int32}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Threading.Tasks.Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.Net.Sockets.SocketException
  isExternal: false
  name: SocketException
  fullName: System.Net.Sockets.SocketException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
