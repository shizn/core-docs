items:
- uid: System.Collections.Specialized.NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
  id: NameValueCollection
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.NameValueCollection.#ctor
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  - System.Collections.Specialized.NameValueCollection.AllKeys
  - System.Collections.Specialized.NameValueCollection.Clear
  - System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.String)
  - System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  - System.Collections.Specialized.NameValueCollection.HasKeys
  - System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  - System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Item(System.String)
  - System.Collections.Specialized.NameValueCollection.Remove(System.String)
  - System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  langs:
  - csharp
  - vb
  name: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
  type: Class
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NameValueCollection
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 18
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Represents a collection of associated <xref href="System.String" data-throw-if-not-resolved="false"></xref> keys and <xref href="System.String" data-throw-if-not-resolved="false"></xref> values that can be accessed either with the key or with the index.
  syntax:
    content: 'public class NameValueCollection : NameObjectCollectionBase, IEnumerable'
    content.vb: >-
      Public Class NameValueCollection
          Inherits NameObjectCollectionBase
          Implements IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Specialized.NameObjectCollectionBase
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Collections.Specialized.NameValueCollection.#ctor
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: NameValueCollection()
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 32
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> class that is empty, has the default initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.
  syntax:
    content: public NameValueCollection()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: NameValueCollection(IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 130
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> class that is empty, has the default initial capacity, and uses the specified <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public NameValueCollection(IEqualityComparer equalityComparer)
    content.vb: Public Sub New(equalityComparer As IEqualityComparer)
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: The <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: NameValueCollection(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.Specialized.NameValueCollection)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 41
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Copies the entries from the specified <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> to a new <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> with the same initial capacity as the number of entries copied and using the same hash code provider and the same comparer as the source collection.
  syntax:
    content: public NameValueCollection(NameValueCollection col)
    content.vb: Public Sub New(col As NameValueCollection)
    parameters:
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: The <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> to copy to the new <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> instance.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>col</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: NameValueCollection(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 52
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> class that is empty, has the specified initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.
  syntax:
    content: public NameValueCollection(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of entries that the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> can contain.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: NameValueCollection(Int32, IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 133
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public NameValueCollection(int capacity, IEqualityComparer equalityComparer)
    content.vb: Public Sub New(capacity As Integer, equalityComparer As IEqualityComparer)
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of entries that the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> object can contain.
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: The <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: NameValueCollection(Int32, NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32, System.Collections.Specialized.NameValueCollection)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 71
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Copies the entries from the specified <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> to a new <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> with the specified initial capacity or the same initial capacity as the number of entries copied, whichever is greater, and using the default case-insensitive hash code provider and the default case-insensitive comparer.
  syntax:
    content: public NameValueCollection(int capacity, NameValueCollection col)
    content.vb: Public Sub New(capacity As Integer, col As NameValueCollection)
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of entries that the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> can contain.
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: The <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> to copy to the new <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> instance.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>col</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.NameValueCollection.AllKeys
  commentId: P:System.Collections.Specialized.NameValueCollection.AllKeys
  id: AllKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: AllKeys
  fullName: System.Collections.Specialized.NameValueCollection.AllKeys
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AllKeys
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 381
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets all the keys in the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual string[] AllKeys { get; }
    content.vb: Public Overridable ReadOnly Property AllKeys As String()
    parameters: []
    return:
      type: System.String[]
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> array that contains all the keys of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  commentId: P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Collections.Specialized.NameValueCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 366
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets the entry at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public string this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the entry to locate in the collection.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that contains the comma-separated list of values at the specified index of the collection.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the valid range of indexes for the collection."
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)
  commentId: P:System.Collections.Specialized.NameValueCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Collections.Specialized.NameValueCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 137
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets or sets the entry with the specified key in the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public string this[string name] { get; set; }
    content.vb: Public Property Item(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> key of the entry to locate. The key can be null.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that contains the comma-separated list of values associated with the specified key, if found; otherwise, null.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The collection is read-only and the operation attempts to modify the collection. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Specialized.NameValueCollection.Item(System.String)
  name.vb: Item(String)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  id: Add(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: Add(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 140
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Copies the entries in the specified <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> to the current <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Add(NameValueCollection c)
    content.vb: Public Sub Add(c As NameValueCollection)
    parameters:
    - id: c
      type: System.Collections.Specialized.NameValueCollection
      description: The <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> to copy to the current <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>c</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: Add(String, String)
  fullName: System.Collections.Specialized.NameValueCollection.Add(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 139
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Adds an entry with the specified name and value to the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Add(string name, string value)
    content.vb: Public Overridable Sub Add(name As String, value As String)
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> key of the entry to add. The key can be null.
    - id: value
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> value of the entry to add. The value can be null.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The collection is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Specialized.NameValueCollection.Clear
  commentId: M:System.Collections.Specialized.NameValueCollection.Clear
  id: Clear
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Collections.Specialized.NameValueCollection.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 172
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Invalidates the cached arrays and removes all entries from the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 141
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Copies the entire <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> to a compatible one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at the specified index of the target array.
  syntax:
    content: public void CopyTo(Array dest, int index)
    content.vb: Public Sub CopyTo(dest As Array, index As Integer)
    parameters:
    - id: dest
      type: System.Array
      description: The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in <em>dest</em> at which copying begins.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>dest</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>dest</em> is multidimensional.-or- The number of elements in the source <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> is greater than the available space from <em>index</em> to the end of the destination <em>dest</em>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The type of the source <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the type of the destination <em>dest</em>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  id: Get(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: Get(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Get
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 340
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets the values at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> combined into one comma-separated list.
  syntax:
    content: public virtual string Get(int index)
    content.vb: Public Overridable Function Get(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the entry that contains the values to get from the collection.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that contains a comma-separated list of the values at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>, if found; otherwise, null.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the valid range of indexes for the collection."
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.String)
  id: Get(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: Get(String)
  fullName: System.Collections.Specialized.NameValueCollection.Get(System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Get
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 143
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets the values associated with the specified key from the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> combined into one comma-separated list.
  syntax:
    content: public virtual string Get(string name)
    content.vb: Public Overridable Function Get(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> key of the entry that contains the values to get. The key can be null.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that contains a comma-separated list of the values associated with the specified key from the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>, if found; otherwise, null.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  id: GetKey(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: GetKey(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetKey
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 358
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets the key at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual string GetKey(int index)
    content.vb: Public Overridable Function GetKey(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the key to get from the collection.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that contains the key at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>, if found; otherwise, null.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the valid range of indexes for the collection. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  id: GetValues(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: GetValues(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValues
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 349
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets the values at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual string[] GetValues(int index)
    content.vb: Public Overridable Function GetValues(index As Integer) As String()
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the entry that contains the values to get from the collection.
    return:
      type: System.String[]
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> array that contains the values at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>, if found; otherwise, null.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the valid range of indexes for the collection. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  id: GetValues(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: GetValues(String)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValues
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 146
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets the values associated with the specified key from the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual string[] GetValues(string name)
    content.vb: Public Overridable Function GetValues(name As String) As String()
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> key of the entry that contains the values to get. The key can be null.
    return:
      type: System.String[]
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> array that contains the values associated with the specified key from the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>, if found; otherwise, null.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Specialized.NameValueCollection.HasKeys
  commentId: M:System.Collections.Specialized.NameValueCollection.HasKeys
  id: HasKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: HasKeys()
  fullName: System.Collections.Specialized.NameValueCollection.HasKeys()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasKeys
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 226
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets a value indicating whether the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> contains keys that are not null.
  syntax:
    content: public bool HasKeys()
    content.vb: Public Function HasKeys As Boolean
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> contains keys that are not null; otherwise, false.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  commentId: M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  id: InvalidateCachedArrays
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: InvalidateCachedArrays()
  fullName: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InvalidateCachedArrays
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 90
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Resets the cached arrays of the collection to null.
  syntax:
    content: protected void InvalidateCachedArrays()
    content.vb: Protected Sub InvalidateCachedArrays
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: Remove(String)
  fullName: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 149
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Removes the entries with the specified key from the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public virtual void Remove(string name)
    content.vb: Public Overridable Sub Remove(name As String)
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> key of the entry to remove. The key can be null.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  id: Set(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: Set(String, String)
  fullName: System.Collections.Specialized.NameValueCollection.Set(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Set
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 150
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Sets the value of an entry in the <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Set(string name, string value)
    content.vb: Public Overridable Sub Set(name As String, value As String)
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> key of the entry to add the new value to. The key can be null.
    - id: value
      type: System.String
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the new value to add to the specified entry. The value can be null.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.Specialized.NameObjectCollectionBase
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase
  fullName: System.Collections.Specialized.NameObjectCollectionBase
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: BaseAdd(String, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String, System.Object)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
    name: BaseAdd
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
    name: BaseAdd
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
    name: BaseClear
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
    name: BaseClear
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: BaseGet(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
    name: BaseGet
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
    name: BaseGet
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: BaseGet(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
    name: BaseGet
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
    name: BaseGet
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
    name: BaseGetAllKeys
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
    name: BaseGetAllKeys
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
    name: BaseGetAllValues
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
    name: BaseGetAllValues
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
    name: BaseGetAllValues
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
    name: BaseGetAllValues
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: BaseGetKey(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
    name: BaseGetKey
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
    name: BaseGetKey
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
    name: BaseHasKeys
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
    name: BaseHasKeys
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: BaseRemove(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
    name: BaseRemove
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
    name: BaseRemove
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: BaseRemoveAt(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
    name: BaseRemoveAt
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
    name: BaseRemoveAt
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: BaseSet(Int32, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
    name: BaseSet
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
    name: BaseSet
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: BaseSet(String, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String, System.Object)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
    name: BaseSet
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
    name: BaseSet
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
