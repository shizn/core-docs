items:
- uid: System.ComponentModel.PropertyDescriptor
  commentId: T:System.ComponentModel.PropertyDescriptor
  id: PropertyDescriptor
  parent: System.ComponentModel
  children:
  - System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.ComponentType
  - System.ComponentModel.PropertyDescriptor.Converter
  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  - System.ComponentModel.PropertyDescriptor.Equals(System.Object)
  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)
  - System.ComponentModel.PropertyDescriptor.GetHashCode
  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  - System.ComponentModel.PropertyDescriptor.GetValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  - System.ComponentModel.PropertyDescriptor.IsLocalizable
  - System.ComponentModel.PropertyDescriptor.IsReadOnly
  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  - System.ComponentModel.PropertyDescriptor.PropertyType
  - System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.SerializationVisibility
  - System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)
  - System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  langs:
  - csharp
  - vb
  name: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PropertyDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 15
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Provides an abstraction of a property on a class.
  syntax:
    content: 'public abstract class PropertyDescriptor : MemberDescriptor'
    content.vb: >-
      Public MustInherit Class PropertyDescriptor
          Inherits MemberDescriptor
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  commentId: M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: PropertyDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(System.ComponentModel.MemberDescriptor)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 42
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> class with the name and attributes in the specified <xref href="System.ComponentModel.MemberDescriptor" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected PropertyDescriptor(MemberDescriptor descr)
    content.vb: Protected Sub New(descr As MemberDescriptor)
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: 'A <xref href="System.ComponentModel.MemberDescriptor" data-throw-if-not-resolved="false"></xref> that contains the name of the property and its attributes. '
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  commentId: M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: PropertyDescriptor(MemberDescriptor, Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(System.ComponentModel.MemberDescriptor, System.Attribute[])
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 346
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> class with the name in the specified <xref href="System.ComponentModel.MemberDescriptor" data-throw-if-not-resolved="false"></xref> and the attributes in both the <xref href="System.ComponentModel.MemberDescriptor" data-throw-if-not-resolved="false"></xref> and the <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> array.
  syntax:
    content: protected PropertyDescriptor(MemberDescriptor descr, Attribute[] attrs)
    content.vb: Protected Sub New(descr As MemberDescriptor, attrs As Attribute())
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: 'A <xref href="System.ComponentModel.MemberDescriptor" data-throw-if-not-resolved="false"></xref> containing the name of the member and its attributes. '
    - id: attrs
      type: System.Attribute[]
      description: 'An <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> array containing the attributes you want to associate with the property. '
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(System.ComponentModel.MemberDescriptor, System.Attribute())
  name.vb: PropertyDescriptor(MemberDescriptor, Attribute())
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])
  commentId: M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: PropertyDescriptor(String, Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(System.String, System.Attribute[])
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 347
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> class with the specified name and attributes.
  syntax:
    content: protected PropertyDescriptor(string name, Attribute[] attrs)
    content.vb: Protected Sub New(name As String, attrs As Attribute())
    parameters:
    - id: name
      type: System.String
      description: 'The name of the property. '
    - id: attrs
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> that contains the property attributes. '
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(System.String, System.Attribute())
  name.vb: PropertyDescriptor(String, Attribute())
- uid: System.ComponentModel.PropertyDescriptor.ComponentType
  commentId: P:System.ComponentModel.PropertyDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: ComponentType
  fullName: System.ComponentModel.PropertyDescriptor.ComponentType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ComponentType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 67
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: When overridden in a derived class, gets the type of the component this property is bound to.
  syntax:
    content: public abstract Type ComponentType { get; }
    content.vb: Public MustOverride ReadOnly Property ComponentType As Type
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the type of component this property is bound to. When the <xref href="System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" data-throw-if-not-resolved="false"></xref> or <xref href="System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" data-throw-if-not-resolved="false"></xref> methods are invoked, the object specified might be an instance of this type.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ComponentModel.PropertyDescriptor.Converter
  commentId: P:System.ComponentModel.PropertyDescriptor.Converter
  id: Converter
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: Converter
  fullName: System.ComponentModel.PropertyDescriptor.Converter
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Converter
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 74
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets the type converter for this property.
  syntax:
    content: public virtual TypeConverter Converter { get; }
    content.vb: Public Overridable ReadOnly Property Converter As TypeConverter
    parameters: []
    return:
      type: System.ComponentModel.TypeConverter
      description: A <xref href="System.ComponentModel.TypeConverter" data-throw-if-not-resolved="false"></xref> that is used to convert the <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of this property.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable
  commentId: P:System.ComponentModel.PropertyDescriptor.IsLocalizable
  id: IsLocalizable
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: IsLocalizable
  fullName: System.ComponentModel.PropertyDescriptor.IsLocalizable
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLocalizable
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 110
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets a value indicating whether this property should be localized, as specified in the <xref href="System.ComponentModel.LocalizableAttribute" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual bool IsLocalizable { get; }
    content.vb: Public Overridable ReadOnly Property IsLocalizable As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the member is marked with the <xref href="System.ComponentModel.LocalizableAttribute" data-throw-if-not-resolved="false"></xref> set to true; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly
  commentId: P:System.ComponentModel.PropertyDescriptor.IsReadOnly
  id: IsReadOnly
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptor.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 125
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: When overridden in a derived class, gets a value indicating whether this property is read-only.
  syntax:
    content: public abstract bool IsReadOnly { get; }
    content.vb: Public MustOverride ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the property is read-only; otherwise, false.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ComponentModel.PropertyDescriptor.PropertyType
  commentId: P:System.ComponentModel.PropertyDescriptor.PropertyType
  id: PropertyType
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: PropertyType
  fullName: System.ComponentModel.PropertyDescriptor.PropertyType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PropertyType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 148
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: When overridden in a derived class, gets the type of the property.
  syntax:
    content: public abstract Type PropertyType { get; }
    content.vb: Public MustOverride ReadOnly Property PropertyType As Type
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the type of the property.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  commentId: P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  id: SupportsChangeEvents
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: SupportsChangeEvents
  fullName: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SupportsChangeEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 527
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.
  syntax:
    content: public virtual bool SupportsChangeEvents { get; }
    content.vb: Public Overridable ReadOnly Property SupportsChangeEvents As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if value change notifications may originate from outside the property descriptor; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  commentId: M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  id: AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: AddValueChanged(Object, EventHandler)
  fullName: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object, System.EventHandler)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValueChanged
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 354
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Enables other objects to be notified when this property changes.
  syntax:
    content: public virtual void AddValueChanged(object component, EventHandler handler)
    content.vb: Public Overridable Sub AddValueChanged(component As Object, handler As EventHandler)
    parameters:
    - id: component
      type: System.Object
      description: 'The component to add the handler for. '
    - id: handler
      type: System.EventHandler
      description: 'The delegate to add as a listener. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> or <em>handler</em> is null."
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)
  commentId: M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)
  id: CanResetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: CanResetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanResetValue
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 174
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: When overridden in a derived class, returns whether resetting an object changes its value.
  syntax:
    content: public abstract bool CanResetValue(object component)
    content.vb: Public MustOverride Function CanResetValue(component As Object) As Boolean
    parameters:
    - id: component
      type: System.Object
      description: 'The component to test for reset capability. '
    return:
      type: System.Boolean
      description: true if resetting the component changes its value; otherwise, false.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  commentId: M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  id: CreateInstance(System.Type)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: CreateInstance(Type)
  fullName: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateInstance
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 356
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Creates an instance of the specified type.
  syntax:
    content: protected object CreateInstance(Type type)
    content.vb: Protected Function CreateInstance(type As Type) As Object
    parameters:
    - id: type
      type: System.Type
      description: 'A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the type to create. '
    return:
      type: System.Object
      description: A new instance of the type.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)
  commentId: M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.ComponentModel.PropertyDescriptor.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 183
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Compares this to another object to see if they are equivalent.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: 'The object to compare to this <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref>. '
    return:
      type: System.Boolean
      description: true if the values are equivalent; otherwise, false.
  overridden: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  commentId: M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  id: FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: FillAttributes(Collections.IList)
  fullName: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FillAttributes
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 358
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Adds the attributes of the <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> to the specified list of attributes in the parent class.
  syntax:
    content: protected override void FillAttributes(Collections.IList attributeList)
    content.vb: Protected Overrides Sub FillAttributes(attributeList As Collections.IList)
    parameters:
    - id: attributeList
      type: System.Collections.IList
      description: An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> that lists the attributes in the parent class. Initially, this is empty.
  overridden: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties
  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties
  id: GetChildProperties
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: GetChildProperties()
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChildProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 253
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the default <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public PropertyDescriptorCollection GetChildProperties()
    content.vb: Public Function GetChildProperties As PropertyDescriptorCollection
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A collection of property descriptor.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  id: GetChildProperties(System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: GetChildProperties(Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChildProperties
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 360
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> using a specified array of attributes as a filter.
  syntax:
    content: public PropertyDescriptorCollection GetChildProperties(Attribute[] filter)
    content.vb: Public Function GetChildProperties(filter As Attribute()) As PropertyDescriptorCollection
    parameters:
    - id: filter
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> to use as a filter. '
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the properties that match the specified attributes.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute())
  name.vb: GetChildProperties(Attribute())
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  id: GetChildProperties(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: GetChildProperties(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChildProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 269
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> for a given object.
  syntax:
    content: public PropertyDescriptorCollection GetChildProperties(object instance)
    content.vb: Public Function GetChildProperties(instance As Object) As PropertyDescriptorCollection
    parameters:
    - id: instance
      type: System.Object
      description: 'A component to get the properties for. '
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the properties for the specified component.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  id: GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: GetChildProperties(Object, Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChildProperties
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 362
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> for a given object using a specified array of attributes as a filter.
  syntax:
    content: public virtual PropertyDescriptorCollection GetChildProperties(object instance, Attribute[] filter)
    content.vb: Public Overridable Function GetChildProperties(instance As Object, filter As Attribute()) As PropertyDescriptorCollection
    parameters:
    - id: instance
      type: System.Object
      description: 'A component to get the properties for. '
    - id: filter
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> to use as a filter. '
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the properties that match the specified attributes for the specified component.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object, System.Attribute())
  name.vb: GetChildProperties(Object, Attribute())
- uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)
  commentId: M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: GetEditor(Type)
  fullName: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEditor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 363
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets an editor of the specified type.
  syntax:
    content: public virtual object GetEditor(Type editorBaseType)
    content.vb: Public Overridable Function GetEditor(editorBaseType As Type) As Object
    parameters:
    - id: editorBaseType
      type: System.Type
      description: 'The base type of editor, which is used to differentiate between multiple editors that a property supports. '
    return:
      type: System.Object
      description: An instance of the requested editor type, or null if an editor cannot be found.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.PropertyDescriptor.GetHashCode
  commentId: M:System.ComponentModel.PropertyDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.ComponentModel.PropertyDescriptor.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 380
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the hash code for this object.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: The hash code for this object.
  overridden: System.ComponentModel.MemberDescriptor.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  commentId: M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  id: GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: GetInvocationTarget(Type, Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInvocationTarget
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 365
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: This method returns the object that should be used during invocation of members.
  syntax:
    content: protected override object GetInvocationTarget(Type type, object instance)
    content.vb: Protected Overrides Function GetInvocationTarget(type As Type, instance As Object) As Object
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the invocation target.
    - id: instance
      type: System.Object
      description: The potential invocation target.
    return:
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that should be used during invocation of members.
  overridden: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  commentId: M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  id: GetTypeFromName(System.String)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: GetTypeFromName(String)
  fullName: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTypeFromName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 406
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a type using its name.
  syntax:
    content: protected Type GetTypeFromName(string typeName)
    content.vb: Protected Function GetTypeFromName(typeName As String) As Type
    parameters:
    - id: typeName
      type: System.String
      description: 'The assembly-qualified name of the type to retrieve. '
    return:
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that matches the given type name, or null if a match cannot be found.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)
  commentId: M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: GetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValue
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 443
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: When overridden in a derived class, gets the current value of the property on a component.
  syntax:
    content: public abstract object GetValue(object component)
    content.vb: Public MustOverride Function GetValue(component As Object) As Object
    parameters:
    - id: component
      type: System.Object
      description: 'The component with the property for which to retrieve the value. '
    return:
      type: System.Object
      description: The value of a property for a given component.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  commentId: M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  id: GetValueChangedHandler(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: GetValueChangedHandler(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValueChangedHandler
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 486
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Retrieves the current set of ValueChanged event handlers for a specific component
  syntax:
    content: protected EventHandler GetValueChangedHandler(object component)
    content.vb: Protected Function GetValueChangedHandler(component As Object) As EventHandler
    parameters:
    - id: component
      type: System.Object
      description: The component for which to retrieve event handlers.
    return:
      type: System.EventHandler
      description: A combined multicast event handler, or null if no event handlers are currently assigned to <em>component</em>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  commentId: M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  id: OnValueChanged(System.Object,System.EventArgs)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: OnValueChanged(Object, EventArgs)
  fullName: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object, System.EventArgs)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnValueChanged
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 369
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Raises the ValueChanged event that you implemented.
  syntax:
    content: protected virtual void OnValueChanged(object component, EventArgs e)
    content.vb: Protected Overridable Sub OnValueChanged(component As Object, e As EventArgs)
    parameters:
    - id: component
      type: System.Object
      description: 'The object that raises the event. '
    - id: e
      type: System.EventArgs
      description: 'An <xref href="System.EventArgs" data-throw-if-not-resolved="false"></xref> that contains the event data. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  commentId: M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  id: RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: RemoveValueChanged(Object, EventHandler)
  fullName: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object, System.EventHandler)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveValueChanged
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 370
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Enables other objects to be notified when this property changes.
  syntax:
    content: public virtual void RemoveValueChanged(object component, EventHandler handler)
    content.vb: Public Overridable Sub RemoveValueChanged(component As Object, handler As EventHandler)
    parameters:
    - id: component
      type: System.Object
      description: 'The component to remove the handler for. '
    - id: handler
      type: System.EventHandler
      description: 'The delegate to remove as a listener. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> or <em>handler</em> is null."
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)
  commentId: M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)
  id: ResetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: ResetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResetValue
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 503
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: When overridden in a derived class, resets the value for this property of the component to the default value.
  syntax:
    content: public abstract void ResetValue(object component)
    content.vb: Public MustOverride Sub ResetValue(component As Object)
    parameters:
    - id: component
      type: System.Object
      description: 'The component with the property value that is to be reset to the default value. '
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility
  commentId: P:System.ComponentModel.PropertyDescriptor.SerializationVisibility
  id: SerializationVisibility
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: SerializationVisibility
  fullName: System.ComponentModel.PropertyDescriptor.SerializationVisibility
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SerializationVisibility
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 133
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets a value indicating whether this property should be serialized, as specified in the <xref href="System.ComponentModel.DesignerSerializationVisibilityAttribute" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public DesignerSerializationVisibility SerializationVisibility { get; }
    content.vb: Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility
    parameters: []
    return:
      type: System.ComponentModel.DesignerSerializationVisibility
      description: One of the <xref href="System.ComponentModel.DesignerSerializationVisibility" data-throw-if-not-resolved="false"></xref> enumeration values that specifies whether this property should be serialized.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)
  commentId: M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: SetValue(Object, Object)
  fullName: System.ComponentModel.PropertyDescriptor.SetValue(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetValue
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 511
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: When overridden in a derived class, sets the value of the component to a different value.
  syntax:
    content: public abstract void SetValue(object component, object value)
    content.vb: Public MustOverride Sub SetValue(component As Object, value As Object)
    parameters:
    - id: component
      type: System.Object
      description: 'The component with the property value that is to be set. '
    - id: value
      type: System.Object
      description: 'The new value. '
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)
  commentId: M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  - vb
  name: ShouldSerializeValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ShouldSerializeValue
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/PropertyDescriptor.cs
    startLine: 519
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
  syntax:
    content: public abstract bool ShouldSerializeValue(object component)
    content.vb: Public MustOverride Function ShouldSerializeValue(component As Object) As Boolean
    parameters:
    - id: component
      type: System.Object
      description: 'The component with the property to be examined for persistence. '
    return:
      type: System.Boolean
      description: true if the property should be persisted; otherwise, false.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
- uid: System.ComponentModel.MemberDescriptor.Category
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Category
  fullName: System.ComponentModel.MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.Description
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Description
  fullName: System.ComponentModel.MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Name
  fullName: System.ComponentModel.MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
    name: CreateAttributeCollection
    fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
    name: CreateAttributeCollection
    fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: FindMethod(Type, String, Type[], Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type[], System.Type)
  fullname.vb: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type(), System.Type)
  name.vb: FindMethod(Type, String, Type(), Type)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
    name: FindMethod
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
    name: FindMethod
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: FindMethod(Type, String, Type[], Type, Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type[], System.Type, System.Boolean)
  fullname.vb: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type(), System.Type, System.Boolean)
  name.vb: FindMethod(Type, String, Type(), Type, Boolean)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
    name: FindMethod
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
    name: FindMethod
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
    name: GetSite
    fullName: System.ComponentModel.MemberDescriptor.GetSite
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
    name: GetSite
    fullName: System.ComponentModel.MemberDescriptor.GetSite
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Attribute[]
  isExternal: true
  name: Attribute[]
  fullName: System.Attribute[]
  fullname.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.EventHandler
  isExternal: false
  name: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
    name: Equals
    fullName: System.ComponentModel.MemberDescriptor.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
    name: Equals
    fullName: System.ComponentModel.MemberDescriptor.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: FillAttributes(Collections.IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
    name: FillAttributes
    fullName: System.ComponentModel.MemberDescriptor.FillAttributes
  - name: (
    fullName: (
  - uid: System.Collections.IList
    name: Collections.IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
    name: FillAttributes
    fullName: System.ComponentModel.MemberDescriptor.FillAttributes
  - name: (
    fullName: (
  - uid: System.Collections.IList
    name: Collections.IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.GetHashCode
    name: GetHashCode
    fullName: System.ComponentModel.MemberDescriptor.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.GetHashCode
    name: GetHashCode
    fullName: System.ComponentModel.MemberDescriptor.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: GetInvocationTarget(Type, Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
    name: GetInvocationTarget
    fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
    name: GetInvocationTarget
    fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.DesignerSerializationVisibility
  parent: System.ComponentModel
  isExternal: false
  name: DesignerSerializationVisibility
  fullName: System.ComponentModel.DesignerSerializationVisibility
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
