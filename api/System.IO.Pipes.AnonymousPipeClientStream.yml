items:
- uid: System.IO.Pipes.AnonymousPipeClientStream
  commentId: T:System.IO.Pipes.AnonymousPipeClientStream
  id: AnonymousPipeClientStream
  parent: System.IO.Pipes
  children:
  - System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)
  - System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)
  - System.IO.Pipes.AnonymousPipeClientStream.Finalize
  - System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  - System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  langs:
  - csharp
  - vb
  name: AnonymousPipeClientStream
  fullName: System.IO.Pipes.AnonymousPipeClientStream
  type: Class
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeClientStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AnonymousPipeClientStream
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeClientStream.cs
    startLine: 14
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations.
  syntax:
    content: 'public sealed class AnonymousPipeClientStream : PipeStream'
    content.vb: >-
      Public NotInheritable Class AnonymousPipeClientStream
          Inherits PipeStream
  inheritance:
  - System.Object
  - System.IO.Pipes.PipeStream
  inheritedMembers:
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  - System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)
  commentId: M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  - vb
  name: AnonymousPipeClientStream(PipeDirection, SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(System.IO.Pipes.PipeDirection, Microsoft.Win32.SafeHandles.SafePipeHandle)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeClientStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeClientStream.cs
    startLine: 55
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> class from the specified handle.
  syntax:
    content: public AnonymousPipeClientStream(PipeDirection direction, SafePipeHandle safePipeHandle)
    content.vb: Public Sub New(direction As PipeDirection, safePipeHandle As SafePipeHandle)
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.Anonymous pipes can only be in one direction, so <em>direction</em> cannot be set to <xref href="System.IO.Pipes.PipeDirection.InOut" data-throw-if-not-resolved="false"></xref>.
    - id: safePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: A safe handle for the pipe that this <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> object will encapsulate.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>safePipeHandle </em>is not a valid handle."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>safePipeHandle</em> is null."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>direction</em> is set to <xref href=\"System.IO.Pipes.PipeDirection.InOut\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error, such as a disk error, has occurred.-or-The stream has been closed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)
  commentId: M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.String)'
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  - vb
  name: AnonymousPipeClientStream(PipeDirection, String)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(System.IO.Pipes.PipeDirection, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
    startLine: 21
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> class with the specified pipe direction and a string representation of the pipe handle.
  syntax:
    content: public AnonymousPipeClientStream(PipeDirection direction, string pipeHandleAsString)
    content.vb: Public Sub New(direction As PipeDirection, pipeHandleAsString As String)
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.Anonymous pipes can only be in one direction, so <em>direction</em> cannot be set to <xref href="System.IO.Pipes.PipeDirection.InOut" data-throw-if-not-resolved="false"></xref>.
    - id: pipeHandleAsString
      type: System.String
      description: A string that represents the pipe handle.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>pipeHandleAsString</em> is an invalid handle."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>pipeHandleAsString</em> is null."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>direction</em> is set to <xref href=\"System.IO.Pipes.PipeDirection.InOut\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)
  commentId: M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  - vb
  name: AnonymousPipeClientStream(String)
  fullName: System.IO.Pipes.AnonymousPipeClientStream.AnonymousPipeClientStream(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
    startLine: 22
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> class with the specified string representation of the pipe handle.
  syntax:
    content: public AnonymousPipeClientStream(string pipeHandleAsString)
    content.vb: Public Sub New(pipeHandleAsString As String)
    parameters:
    - id: pipeHandleAsString
      type: System.String
      description: A string that represents the pipe handle.
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<em>pipeHandleAsString</em> is not a valid pipe handle."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  commentId: P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  - vb
  name: ReadMode
  fullName: System.IO.Pipes.AnonymousPipeClientStream.ReadMode
  type: Property
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeClientStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadMode
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeClientStream.cs
    startLine: 99
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Sets the reading mode for the <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override PipeTransmissionMode ReadMode { set; }
    content.vb: Public Overrides WriteOnly Property ReadMode As PipeTransmissionMode
    parameters: []
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: The <xref href="System.IO.Pipes.PipeTransmissionMode" data-throw-if-not-resolved="false"></xref> for the <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> object.
  overridden: System.IO.Pipes.PipeStream.ReadMode
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The transmission mode is not valid. For anonymous pipes, only <xref href="System.IO.Pipes.PipeTransmissionMode.Byte" data-throw-if-not-resolved="false"></xref> is supported.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The transmission mode is <xref href="System.IO.Pipes.PipeTransmissionMode.Message" data-throw-if-not-resolved="false"></xref>.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The connection is broken or another I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  modifiers.csharp:
  - public
  - override
  - set
  modifiers.vb:
  - Public
  - Overrides
  - WriteOnly
- uid: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  commentId: P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  - vb
  name: TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode
  type: Property
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeClientStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TransmissionMode
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeClientStream.cs
    startLine: 93
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets the pipe transmission mode supported by the current pipe.
  syntax:
    content: public override PipeTransmissionMode TransmissionMode { get; }
    content.vb: Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode
    parameters: []
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: The <xref href="System.IO.Pipes.PipeTransmissionMode" data-throw-if-not-resolved="false"></xref> supported by the current pipe.
  overridden: System.IO.Pipes.PipeStream.TransmissionMode
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.Pipes.AnonymousPipeClientStream.Finalize
  commentId: M:System.IO.Pipes.AnonymousPipeClientStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.AnonymousPipeClientStream
  langs:
  - csharp
  - vb
  name: Finalize()
  fullName: System.IO.Pipes.AnonymousPipeClientStream.Finalize()
  type: Method
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeClientStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Finalize
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeClientStream.cs
    startLine: 86
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Releases unmanaged resources and performs other cleanup operations before the <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> instance is reclaimed by garbage collection.
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.IO.Pipes
  isExternal: false
  name: System.IO.Pipes
  fullName: System.IO.Pipes
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IO.Pipes.PipeStream
  parent: System.IO.Pipes
  isExternal: false
  name: PipeStream
  fullName: System.IO.Pipes.PipeStream
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  fullName: System.IO.Pipes.PipeStream.Length
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  fullName: System.IO.Pipes.PipeStream.Position
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.Pipes.PipeStream.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.Pipes.PipeStream.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.Flush
    name: Flush
    fullName: System.IO.Pipes.PipeStream.Flush
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.Flush
    name: Flush
    fullName: System.IO.Pipes.PipeStream.Flush
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  fullName: System.IO.Pipes.PipeStream.Read(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Pipes.PipeStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.Pipes.PipeStream.Read
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.Pipes.PipeStream.Read
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.ReadByte
    name: ReadByte
    fullName: System.IO.Pipes.PipeStream.ReadByte
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.ReadByte
    name: ReadByte
    fullName: System.IO.Pipes.PipeStream.ReadByte
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.Pipes.PipeStream.Seek
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.Pipes.PipeStream.Seek
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.Pipes.PipeStream.SetLength
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.Pipes.PipeStream.SetLength
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
    name: WaitForPipeDrain
    fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
    name: WaitForPipeDrain
    fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  fullName: System.IO.Pipes.PipeStream.Write(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Pipes.PipeStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.Pipes.PipeStream.Write
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.Pipes.PipeStream.Write
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.Pipes.PipeStream.WriteByte
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.Pipes.PipeStream.WriteByte
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullname.vb: System.IO.Pipes.PipeStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.Pipes.PipeStream.ReadAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.Pipes.PipeStream.ReadAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullname.vb: System.IO.Pipes.PipeStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.Pipes.PipeStream.WriteAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.Pipes.PipeStream.WriteAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
