items:
- uid: System.ComponentModel.TypeDescriptor
  commentId: T:System.ComponentModel.TypeDescriptor
  id: TypeDescriptor
  parent: System.ComponentModel
  children:
  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  - System.ComponentModel.TypeDescriptor.InterfaceType
  - System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  - System.ComponentModel.TypeDescriptor.Refreshed
  - System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  langs:
  - csharp
  - vb
  name: TypeDescriptor
  fullName: System.ComponentModel.TypeDescriptor
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 20
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Provides information about the characteristics for a component, such as its attributes, properties, and events. This class cannot be inherited.
  syntax:
    content: 'public sealed class TypeDescriptor : object'
    content.vb: >-
      Public NotInheritable Class TypeDescriptor
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ComponentModel.TypeDescriptor.InterfaceType
  commentId: P:System.ComponentModel.TypeDescriptor.InterfaceType
  id: InterfaceType
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: InterfaceType
  fullName: System.ComponentModel.TypeDescriptor.InterfaceType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InterfaceType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 85
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: 'Gets a type that represents a type description provider for all interface types. '
  syntax:
    content: public static Type InterfaceType { get; }
    content.vb: Public Shared ReadOnly Property InterfaceType As Type
    parameters: []
    return:
      type: System.Type
      description: 'A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents a custom type description provider for all interface types. '
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.TypeDescriptor.Refreshed
  commentId: E:System.ComponentModel.TypeDescriptor.Refreshed
  id: Refreshed
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: Refreshed
  fullName: System.ComponentModel.TypeDescriptor.Refreshed
  type: Event
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refreshed
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 109
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Occurs when the cache for a component is cleared.
  syntax:
    content: public static event RefreshEventHandler Refreshed
    content.vb: Public Shared Event Refreshed As RefreshEventHandler
    return:
      type: System.ComponentModel.RefreshEventHandler
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  id: AddAttributes(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: AddAttributes(Object, Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAttributes
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 562
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Adds class-level attributes to the target component instance.
  syntax:
    content: public static TypeDescriptionProvider AddAttributes(object instance, params Attribute[] attributes)
    content.vb: Public Shared Function AddAttributes(instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider
    parameters:
    - id: instance
      type: System.Object
      description: An instance of the target component.
    - id: attributes
      type: System.Attribute[]
      description: An array of <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> objects to add to the component's class.
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: The newly created <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> that was used to add the specified attributes.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object, System.Attribute())
  name.vb: AddAttributes(Object, Attribute())
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  id: AddAttributes(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: AddAttributes(Type, Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAttributes
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 563
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Adds class-level attributes to the target component type.
  syntax:
    content: public static TypeDescriptionProvider AddAttributes(Type type, params Attribute[] attributes)
    content.vb: Public Shared Function AddAttributes(type As Type, ParamArray attributes As Attribute()) As TypeDescriptionProvider
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
    - id: attributes
      type: System.Attribute[]
      description: An array of <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> objects to add to the component's class.
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: The newly created <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> that was used to add the specified attributes.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type, System.Attribute())
  name.vb: AddAttributes(Type, Attribute())
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  commentId: M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  id: AddEditorTable(System.Type,System.Collections.Hashtable)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: AddEditorTable(Type, Collections.Hashtable)
  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type, System.Collections.Hashtable)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddEditorTable
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 564
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: 'Adds an editor table for the given editor base type. '
  syntax:
    content: public static void AddEditorTable(Type editorBaseType, Collections.Hashtable table)
    content.vb: Public Shared Sub AddEditorTable(editorBaseType As Type, table As Collections.Hashtable)
    parameters:
    - id: editorBaseType
      type: System.Type
      description: 'The editor base type to add the editor table for. If a table already exists for this type, this method will do nothing. '
    - id: table
      type: System.Collections.Hashtable
      description: 'The <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> to add. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: AddProvider(TypeDescriptionProvider, Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 225
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Adds a type description provider for a single instance of a component.
  syntax:
    content: public static void AddProvider(TypeDescriptionProvider provider, object instance)
    content.vb: Public Shared Sub AddProvider(provider As TypeDescriptionProvider, instance As Object)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: The <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> to add.
    - id: instance
      type: System.Object
      description: An instance of the target component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: AddProvider(TypeDescriptionProvider, Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddProvider
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 566
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Adds a type description provider for a component class.
  syntax:
    content: public static void AddProvider(TypeDescriptionProvider provider, Type type)
    content.vb: Public Shared Sub AddProvider(provider As TypeDescriptionProvider, type As Type)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: The <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> to add.
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: AddProviderTransparent(TypeDescriptionProvider, Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddProviderTransparent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 299
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Adds a type description provider for a single instance of a component.
  syntax:
    content: public static void AddProviderTransparent(TypeDescriptionProvider provider, object instance)
    content.vb: Public Shared Sub AddProviderTransparent(provider As TypeDescriptionProvider, instance As Object)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: The <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> to add.
    - id: instance
      type: System.Object
      description: An instance of the target component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: AddProviderTransparent(TypeDescriptionProvider, Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddProviderTransparent
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 568
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Adds a type description provider for a component class.
  syntax:
    content: public static void AddProviderTransparent(TypeDescriptionProvider provider, Type type)
    content.vb: Public Shared Sub AddProviderTransparent(provider As TypeDescriptionProvider, type As Type)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: The <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> to add.
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  id: CreateAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: CreateAssociation(Object, Object)
  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateAssociation
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 394
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Creates a primary-secondary association between two objects.
  syntax:
    content: public static void CreateAssociation(object primary, object secondary)
    content.vb: Public Shared Sub CreateAssociation(primary As Object, secondary As Object)
    parameters:
    - id: primary
      type: System.Object
      description: The primary <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
    - id: secondary
      type: System.Object
      description: The secondary <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>primary</em> is equal to <em>secondary</em>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  id: CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: CreateEvent(Type, EventDescriptor, Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.ComponentModel.EventDescriptor, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateEvent
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 570
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <xref href="System.ComponentModel.EventDescriptor" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static EventDescriptor CreateEvent(Type componentType, EventDescriptor oldEventDescriptor, params Attribute[] attributes)
    content.vb: Public Shared Function CreateEvent(componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: 'The type of the component for which to create the new event. '
    - id: oldEventDescriptor
      type: System.ComponentModel.EventDescriptor
      description: 'The existing event information. '
    - id: attributes
      type: System.Attribute[]
      description: 'The new attributes. '
    return:
      type: System.ComponentModel.EventDescriptor
      description: A new <xref href="System.ComponentModel.EventDescriptor" data-throw-if-not-resolved="false"></xref> that has merged the specified metadata attributes with the existing metadata attributes.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.ComponentModel.EventDescriptor, System.Attribute())
  name.vb: CreateEvent(Type, EventDescriptor, Attribute())
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  id: CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: CreateEvent(Type, String, Type, Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.String, System.Type, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateEvent
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 571
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.
  syntax:
    content: public static EventDescriptor CreateEvent(Type componentType, string name, Type type, params Attribute[] attributes)
    content.vb: Public Shared Function CreateEvent(componentType As Type, name As String, type As Type, ParamArray attributes As Attribute()) As EventDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: 'The type of the component the event lives on. '
    - id: name
      type: System.String
      description: 'The name of the event. '
    - id: type
      type: System.Type
      description: 'The type of the delegate that handles the event. '
    - id: attributes
      type: System.Attribute[]
      description: 'The attributes for this event. '
    return:
      type: System.ComponentModel.EventDescriptor
      description: An <xref href="System.ComponentModel.EventDescriptor" data-throw-if-not-resolved="false"></xref> that is bound to a type.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.String, System.Type, System.Attribute())
  name.vb: CreateEvent(Type, String, Type, Attribute())
- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: CreateInstance(IServiceProvider, Type, Type[], Object[])
  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider, System.Type, System.Type[], System.Object[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateInstance
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 572
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: 'Creates an object that can substitute for another data type. '
  syntax:
    content: public static object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, object[] args)
    content.vb: Public Shared Function CreateInstance(provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: The service provider that provides a <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> service. This parameter can be null.
    - id: objectType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of object to create.
    - id: argTypes
      type: System.Type[]
      description: An optional array of parameter types to be passed to the object's constructor. This parameter can be null or an array of zero length.
    - id: args
      type: System.Object[]
      description: 'An optional array of parameter values to pass to the object''s constructor. If not null, the number of elements must be the same as <em>argTypes</em>. '
    return:
      type: System.Object
      description: An instance of the substitute data type if an associated <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> is found; otherwise, null.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>objectType</em> is null, or <em>args</em> is null when <em>argTypes</em> is not null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>argTypes</em> and <em>args</em> have different number of elements."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider, System.Type, System.Type(), System.Object())
  name.vb: CreateInstance(IServiceProvider, Type, Type(), Object())
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  id: CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: CreateProperty(Type, PropertyDescriptor, Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.ComponentModel.PropertyDescriptor, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateProperty
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 573
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Creates a new property descriptor from an existing property descriptor, using the specified existing <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> and attribute array.
  syntax:
    content: public static PropertyDescriptor CreateProperty(Type componentType, PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes)
    content.vb: Public Shared Function CreateProperty(componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: 'The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the component that the property is a member of. '
    - id: oldPropertyDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: 'The existing property descriptor. '
    - id: attributes
      type: System.Attribute[]
      description: 'The new attributes for this property. '
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: A new <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> that has the specified metadata attributes merged with the existing metadata attributes.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.ComponentModel.PropertyDescriptor, System.Attribute())
  name.vb: CreateProperty(Type, PropertyDescriptor, Attribute())
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  id: CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: CreateProperty(Type, String, Type, Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.String, System.Type, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateProperty
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 574
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.
  syntax:
    content: public static PropertyDescriptor CreateProperty(Type componentType, string name, Type type, params Attribute[] attributes)
    content.vb: Public Shared Function CreateProperty(componentType As Type, name As String, type As Type, ParamArray attributes As Attribute()) As PropertyDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: 'The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the component that the property is a member of. '
    - id: name
      type: System.String
      description: 'The name of the property. '
    - id: type
      type: System.Type
      description: 'The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the property. '
    - id: attributes
      type: System.Attribute[]
      description: 'The new attributes for this property. '
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: A <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.String, System.Type, System.Attribute())
  name.vb: CreateProperty(Type, String, Type, Attribute())
- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  id: GetAssociation(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetAssociation(Type, Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAssociation
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 575
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns an instance of the type associated with the specified primary object.
  syntax:
    content: public static object GetAssociation(Type type, object primary)
    content.vb: Public Shared Function GetAssociation(type As Type, primary As Object) As Object
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
    - id: primary
      type: System.Object
      description: The primary object of the association.
    return:
      type: System.Object
      description: An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <em>primary</em> if no specified association exists.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  id: GetAttributes(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetAttributes(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 710
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of attributes for the specified component.
  syntax:
    content: public static AttributeCollection GetAttributes(object component)
    content.vb: Public Shared Function GetAttributes(component As Object) As AttributeCollection
    parameters:
    - id: component
      type: System.Object
      description: 'The component for which you want to get attributes. '
    return:
      type: System.ComponentModel.AttributeCollection
      description: An <xref href="System.ComponentModel.AttributeCollection" data-throw-if-not-resolved="false"></xref> containing the attributes for the component. If <em>component</em> is null, this method returns an empty collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  id: GetAttributes(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetAttributes(Object, Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 718
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.
  syntax:
    content: public static AttributeCollection GetAttributes(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetAttributes(component As Object, noCustomTypeDesc As Boolean) As AttributeCollection
    parameters:
    - id: component
      type: System.Object
      description: 'The component for which you want to get attributes. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: true to use a baseline set of attributes from the custom type descriptor if <em>component</em> is of type <xref href="System.ComponentModel.ICustomTypeDescriptor" data-throw-if-not-resolved="false"></xref>; otherwise, false.
    return:
      type: System.ComponentModel.AttributeCollection
      description: An <xref href="System.ComponentModel.AttributeCollection" data-throw-if-not-resolved="false"></xref> with the attributes for the component. If the component is null, this method returns an empty collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  id: GetAttributes(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetAttributes(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAttributes
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 578
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a collection of attributes for the specified type of component.
  syntax:
    content: public static AttributeCollection GetAttributes(Type componentType)
    content.vb: Public Shared Function GetAttributes(componentType As Type) As AttributeCollection
    parameters:
    - id: componentType
      type: System.Type
      description: 'The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component. '
    return:
      type: System.ComponentModel.AttributeCollection
      description: An <xref href="System.ComponentModel.AttributeCollection" data-throw-if-not-resolved="false"></xref> with the attributes for the type of the component. If the component is null, this method returns an empty collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  id: GetClassName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetClassName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetClassName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 812
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the name of the class for the specified component using the default type descriptor.
  syntax:
    content: public static string GetClassName(object component)
    content.vb: Public Shared Function GetClassName(component As Object) As String
    parameters:
    - id: component
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> for which you want the class name. '
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the name of the class for the specified component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  id: GetClassName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetClassName(Object, Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetClassName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 820
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the name of the class for the specified component using a custom type descriptor.
  syntax:
    content: public static string GetClassName(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetClassName(component As Object, noCustomTypeDesc As Boolean) As String
    parameters:
    - id: component
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> for which you want the class name. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: true to consider custom type description information; otherwise, false.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the name of the class for the specified component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  id: GetClassName(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetClassName(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetClassName
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 581
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the name of the class for the specified type.
  syntax:
    content: public static string GetClassName(Type componentType)
    content.vb: Public Shared Function GetClassName(componentType As Type) As String
    parameters:
    - id: componentType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the name of the class for the specified component type.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>componentType</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  id: GetComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetComponentName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 837
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the name of the specified component using the default type descriptor.
  syntax:
    content: public static string GetComponentName(object component)
    content.vb: Public Shared Function GetComponentName(component As Object) As String
    parameters:
    - id: component
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> for which you want the class name. '
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the name of the specified component, or null if there is no component name.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  id: GetComponentName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetComponentName(Object, Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetComponentName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 845
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the name of the specified component using a custom type descriptor.
  syntax:
    content: public static string GetComponentName(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetComponentName(component As Object, noCustomTypeDesc As Boolean) As String
    parameters:
    - id: component
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> for which you want the class name. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: true to consider custom type description information; otherwise, false.
    return:
      type: System.String
      description: The name of the class for the specified component, or null if there is no component name.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  id: GetConverter(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetConverter(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetConverter
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 854
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a type converter for the type of the specified component.
  syntax:
    content: public static TypeConverter GetConverter(object component)
    content.vb: Public Shared Function GetConverter(component As Object) As TypeConverter
    parameters:
    - id: component
      type: System.Object
      description: 'A component to get the converter for. '
    return:
      type: System.ComponentModel.TypeConverter
      description: A <xref href="System.ComponentModel.TypeConverter" data-throw-if-not-resolved="false"></xref> for the specified component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  id: GetConverter(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetConverter(Object, Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetConverter
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 861
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a type converter for the type of the specified component with a custom type descriptor.
  syntax:
    content: public static TypeConverter GetConverter(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetConverter(component As Object, noCustomTypeDesc As Boolean) As TypeConverter
    parameters:
    - id: component
      type: System.Object
      description: 'A component to get the converter for. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: true to consider custom type description information; otherwise, false.
    return:
      type: System.ComponentModel.TypeConverter
      description: A <xref href="System.ComponentModel.TypeConverter" data-throw-if-not-resolved="false"></xref> for the specified component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  id: GetConverter(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetConverter(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetConverter
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 586
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a type converter for the specified type.
  syntax:
    content: public static TypeConverter GetConverter(Type type)
    content.vb: Public Shared Function GetConverter(type As Type) As TypeConverter
    parameters:
    - id: type
      type: System.Type
      description: 'The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component. '
    return:
      type: System.ComponentModel.TypeConverter
      description: A <xref href="System.ComponentModel.TypeConverter" data-throw-if-not-resolved="false"></xref> for the specified type.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  id: GetDefaultEvent(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetDefaultEvent(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultEvent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 894
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the default event for the specified component.
  syntax:
    content: public static EventDescriptor GetDefaultEvent(object component)
    content.vb: Public Shared Function GetDefaultEvent(component As Object) As EventDescriptor
    parameters:
    - id: component
      type: System.Object
      description: 'The component to get the event for. '
    return:
      type: System.ComponentModel.EventDescriptor
      description: An <xref href="System.ComponentModel.EventDescriptor" data-throw-if-not-resolved="false"></xref> with the default event, or null if there are no events.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  id: GetDefaultEvent(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetDefaultEvent(Object, Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultEvent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 902
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the default event for a component with a custom type descriptor.
  syntax:
    content: public static EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetDefaultEvent(component As Object, noCustomTypeDesc As Boolean) As EventDescriptor
    parameters:
    - id: component
      type: System.Object
      description: 'The component to get the event for. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: true to consider custom type description information; otherwise, false.
    return:
      type: System.ComponentModel.EventDescriptor
      description: An <xref href="System.ComponentModel.EventDescriptor" data-throw-if-not-resolved="false"></xref> with the default event, or null if there are no events.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  id: GetDefaultEvent(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetDefaultEvent(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultEvent
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 589
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the default event for the specified type of component.
  syntax:
    content: public static EventDescriptor GetDefaultEvent(Type componentType)
    content.vb: Public Shared Function GetDefaultEvent(componentType As Type) As EventDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
    return:
      type: System.ComponentModel.EventDescriptor
      description: An <xref href="System.ComponentModel.EventDescriptor" data-throw-if-not-resolved="false"></xref> with the default event, or null if there are no events.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  id: GetDefaultProperty(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetDefaultProperty(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultProperty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 931
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the default property for the specified component.
  syntax:
    content: public static PropertyDescriptor GetDefaultProperty(object component)
    content.vb: Public Shared Function GetDefaultProperty(component As Object) As PropertyDescriptor
    parameters:
    - id: component
      type: System.Object
      description: 'The component to get the default property for. '
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: A <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> with the default property, or null if there are no properties.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  id: GetDefaultProperty(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetDefaultProperty(Object, Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultProperty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 939
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the default property for the specified component with a custom type descriptor.
  syntax:
    content: public static PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetDefaultProperty(component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor
    parameters:
    - id: component
      type: System.Object
      description: 'The component to get the default property for. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: true to consider custom type description information; otherwise, false.
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: A <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> with the default property, or null if there are no properties.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  id: GetDefaultProperty(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetDefaultProperty(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultProperty
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 592
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the default property for the specified type of component.
  syntax:
    content: public static PropertyDescriptor GetDefaultProperty(Type componentType)
    content.vb: Public Shared Function GetDefaultProperty(componentType As Type) As PropertyDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: 'A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the class to get the property for. '
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: A <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> with the default property, or null if there are no properties.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  id: GetEditor(System.Object,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEditor(Object, Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEditor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 593
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets an editor with the specified base type for the specified component.
  syntax:
    content: public static object GetEditor(object component, Type editorBaseType)
    content.vb: Public Shared Function GetEditor(component As Object, editorBaseType As Type) As Object
    parameters:
    - id: component
      type: System.Object
      description: 'The component to get the editor for. '
    - id: editorBaseType
      type: System.Type
      description: 'A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the base type of the editor you want to find. '
    return:
      type: System.Object
      description: An instance of the editor that can be cast to the specified editor type, or null if no editor of the requested type can be found.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> or <em>editorBaseType</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  id: GetEditor(System.Object,System.Type,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEditor(Object, Type, Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(System.Object, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEditor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 594
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns an editor with the specified base type and with a custom type descriptor for the specified component.
  syntax:
    content: public static object GetEditor(object component, Type editorBaseType, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetEditor(component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object
    parameters:
    - id: component
      type: System.Object
      description: 'The component to get the editor for. '
    - id: editorBaseType
      type: System.Type
      description: 'A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the base type of the editor you want to find. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: A flag indicating whether custom type description information should be considered.
    return:
      type: System.Object
      description: An instance of the editor that can be cast to the specified editor type, or null if no editor of the requested type can be found.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> or <em>editorBaseType</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  id: GetEditor(System.Type,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEditor(Type, Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEditor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 595
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns an editor with the specified base type for the specified type.
  syntax:
    content: public static object GetEditor(Type type, Type editorBaseType)
    content.vb: Public Shared Function GetEditor(type As Type, editorBaseType As Type) As Object
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
    - id: editorBaseType
      type: System.Type
      description: 'A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the base type of the editor you are trying to find. '
    return:
      type: System.Object
      description: An instance of the editor object that can be cast to the given base type, or null if no editor of the requested type can be found.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>type</em> or <em>editorBaseType</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  id: GetEvents(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEvents(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1087
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of events for the specified component.
  syntax:
    content: public static EventDescriptorCollection GetEvents(object component)
    content.vb: Public Shared Function GetEvents(component As Object) As EventDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: 'A component to get the events for. '
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: An <xref href="System.ComponentModel.EventDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the events for this component.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  id: GetEvents(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEvents(Object, Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 597
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of events for a specified component using a specified array of attributes as a filter.
  syntax:
    content: public static EventDescriptorCollection GetEvents(object component, Attribute[] attributes)
    content.vb: Public Shared Function GetEvents(component As Object, attributes As Attribute()) As EventDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: 'A component to get the events for. '
    - id: attributes
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> that you can use as a filter. '
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: An <xref href="System.ComponentModel.EventDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the events that match the specified attributes for this component.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute())
  name.vb: GetEvents(Object, Attribute())
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  id: GetEvents(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEvents(Object, Attribute[], Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute[], System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 598
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.
  syntax:
    content: public static EventDescriptorCollection GetEvents(object component, Attribute[] attributes, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetEvents(component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: 'A component to get the events for. '
    - id: attributes
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> to use as a filter. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: true to consider custom type description information; otherwise, false.
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: An <xref href="System.ComponentModel.EventDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the events that match the specified attributes for this component.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute(), System.Boolean)
  name.vb: GetEvents(Object, Attribute(), Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  id: GetEvents(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEvents(Object, Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1095
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of events for a specified component with a custom type descriptor.
  syntax:
    content: public static EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetEvents(component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: 'A component to get the events for. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: true to consider custom type description information; otherwise, false.
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: An <xref href="System.ComponentModel.EventDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the events for this component.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  id: GetEvents(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEvents(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 600
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of events for a specified type of component.
  syntax:
    content: public static EventDescriptorCollection GetEvents(Type componentType)
    content.vb: Public Shared Function GetEvents(componentType As Type) As EventDescriptorCollection
    parameters:
    - id: componentType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: An <xref href="System.ComponentModel.EventDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the events for this component.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  id: GetEvents(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEvents(Type, Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Type, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 601
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of events for a specified type of component using a specified array of attributes as a filter.
  syntax:
    content: public static EventDescriptorCollection GetEvents(Type componentType, Attribute[] attributes)
    content.vb: Public Shared Function GetEvents(componentType As Type, attributes As Attribute()) As EventDescriptorCollection
    parameters:
    - id: componentType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
    - id: attributes
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> that you can use as a filter. '
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: An <xref href="System.ComponentModel.EventDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the events that match the specified attributes for this component.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetEvents(System.Type, System.Attribute())
  name.vb: GetEvents(Type, Attribute())
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  id: GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFullComponentName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1245
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the fully qualified name of the component.
  syntax:
    content: public static string GetFullComponentName(object component)
    content.vb: Public Shared Function GetFullComponentName(component As Object) As String
    parameters:
    - id: component
      type: System.Object
      description: The <xref href="System.ComponentModel.Component" data-throw-if-not-resolved="false"></xref> to find the name for.
    return:
      type: System.String
      description: The fully qualified name of the specified component, or null if the component has no name.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  id: GetProperties(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProperties(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1308
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of properties for a specified component.
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(object component)
    content.vb: Public Shared Function GetProperties(component As Object) As PropertyDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: 'A component to get the properties for. '
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the properties for the specified component.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  id: GetProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProperties(Object, Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 604
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of properties for a specified component using a specified array of attributes as a filter.
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes)
    content.vb: Public Shared Function GetProperties(component As Object, attributes As Attribute()) As PropertyDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: 'A component to get the properties for. '
    - id: attributes
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> to use as a filter. '
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the properties that match the specified attributes for the specified component.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute())
  name.vb: GetProperties(Object, Attribute())
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  id: GetProperties(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProperties(Object, Attribute[], Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute[], System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 605
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetProperties(component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: 'A component to get the properties for. '
    - id: attributes
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> to use as a filter. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: true to consider custom type description information; otherwise, false.
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the events that match the specified attributes for the specified component.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute(), System.Boolean)
  name.vb: GetProperties(Object, Attribute(), Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  id: GetProperties(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProperties(Object, Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1316
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of properties for a specified component using the default type descriptor.
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetProperties(component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: 'A component to get the properties for. '
    - id: noCustomTypeDesc
      type: System.Boolean
      description: true to not consider custom type description information; otherwise, false.
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the properties for a specified component.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>component</em> is a cross-process remoted object."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  id: GetProperties(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProperties(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 607
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of properties for a specified type of component.
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(Type componentType)
    content.vb: Public Shared Function GetProperties(componentType As Type) As PropertyDescriptorCollection
    parameters:
    - id: componentType
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the component to get properties for.
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the properties for a specified type of component.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  id: GetProperties(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProperties(Type, Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Type, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 608
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(Type componentType, Attribute[] attributes)
    content.vb: Public Shared Function GetProperties(componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection
    parameters:
    - id: componentType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
    - id: attributes
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> to use as a filter. '
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection" data-throw-if-not-resolved="false"></xref> with the properties that match the specified attributes for this type of component.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetProperties(System.Type, System.Attribute())
  name.vb: GetProperties(Type, Attribute())
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  id: GetProvider(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProvider(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1456
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the type description provider for the specified component.
  syntax:
    content: public static TypeDescriptionProvider GetProvider(object instance)
    content.vb: Public Shared Function GetProvider(instance As Object) As TypeDescriptionProvider
    parameters:
    - id: instance
      type: System.Object
      description: An instance of the target component.
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: A <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> associated with the specified component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>instance</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  id: GetProvider(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProvider(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProvider
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 610
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the type description provider for the specified type.
  syntax:
    content: public static TypeDescriptionProvider GetProvider(Type type)
    content.vb: Public Shared Function GetProvider(type As Type) As TypeDescriptionProvider
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: A <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> associated with the specified type.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>type</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  id: GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetReflectionType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1497
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that can be used to perform reflection, given an object.
  syntax:
    content: public static Type GetReflectionType(object instance)
    content.vb: Public Shared Function GetReflectionType(instance As Object) As Type
    parameters:
    - id: instance
      type: System.Object
      description: An instance of the target component.
    return:
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for the specified object.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>instance</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetReflectionType
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 612
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns a <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that can be used to perform reflection, given a class type.
  syntax:
    content: public static Type GetReflectionType(Type type)
    content.vb: Public Shared Function GetReflectionType(type As Type) As Type
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
    return:
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the specified class.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>type</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  id: Refresh(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: Refresh(Object)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refresh
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2193
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Clears the properties and events for the specified component from the cache.
  syntax:
    content: public static void Refresh(object component)
    content.vb: Public Shared Sub Refresh(component As Object)
    parameters:
    - id: component
      type: System.Object
      description: 'A component for which the properties or events have changed. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  id: Refresh(System.Reflection.Assembly)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: Refresh(Reflection.Assembly)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refresh
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 614
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Clears the properties and events for the specified assembly from the cache.
  syntax:
    content: public static void Refresh(Reflection.Assembly assembly)
    content.vb: Public Shared Sub Refresh(assembly As Reflection.Assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: 'The <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref> that represents the assembly to refresh. Each <xref href="System.Type" data-throw-if-not-resolved="false"></xref> in this assembly will be refreshed. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  id: Refresh(System.Reflection.Module)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: Refresh(Reflection.Module)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refresh
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 615
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Clears the properties and events for the specified module from the cache.
  syntax:
    content: public static void Refresh(Reflection.Module module)
    content.vb: Public Shared Sub Refresh(module As Reflection.Module)
    parameters:
    - id: module
      type: System.Reflection.Module
      description: 'The <xref href="System.Reflection.Module" data-throw-if-not-resolved="false"></xref> that represents the module to refresh. Each <xref href="System.Type" data-throw-if-not-resolved="false"></xref> in this module will be refreshed. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  id: Refresh(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: Refresh(Type)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refresh
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 616
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Clears the properties and events for the specified type of component from the cache.
  syntax:
    content: public static void Refresh(Type type)
    content.vb: Public Shared Sub Refresh(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  id: RemoveAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: RemoveAssociation(Object, Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAssociation
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2441
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Removes an association between two objects.
  syntax:
    content: public static void RemoveAssociation(object primary, object secondary)
    content.vb: Public Shared Sub RemoveAssociation(primary As Object, secondary As Object)
    parameters:
    - id: primary
      type: System.Object
      description: The primary <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
    - id: secondary
      type: System.Object
      description: The secondary <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  id: RemoveAssociations(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: RemoveAssociations(Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAssociations
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2482
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Removes all associations for a primary object.
  syntax:
    content: public static void RemoveAssociations(object primary)
    content.vb: Public Shared Sub RemoveAssociations(primary As Object)
    parameters:
    - id: primary
      type: System.Object
      description: The primary <xref href="System.Object" data-throw-if-not-resolved="false"></xref> in an association.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>primary</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: RemoveProvider(TypeDescriptionProvider, Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2527
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Removes a previously added type description provider that is associated with the specified object.
  syntax:
    content: public static void RemoveProvider(TypeDescriptionProvider provider, object instance)
    content.vb: Public Shared Sub RemoveProvider(provider As TypeDescriptionProvider, instance As Object)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: The <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> to remove.
    - id: instance
      type: System.Object
      description: An instance of the target component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: RemoveProvider(TypeDescriptionProvider, Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveProvider
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 620
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Removes a previously added type description provider that is associated with the specified type.
  syntax:
    content: public static void RemoveProvider(TypeDescriptionProvider provider, Type type)
    content.vb: Public Shared Sub RemoveProvider(provider As TypeDescriptionProvider, type As Type)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: The <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> to remove.
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: RemoveProviderTransparent(TypeDescriptionProvider, Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveProviderTransparent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2584
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Removes a previously added type description provider that is associated with the specified object.
  syntax:
    content: public static void RemoveProviderTransparent(TypeDescriptionProvider provider, object instance)
    content.vb: Public Shared Sub RemoveProviderTransparent(provider As TypeDescriptionProvider, instance As Object)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: The <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> to remove.
    - id: instance
      type: System.Object
      description: An instance of the target component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: RemoveProviderTransparent(TypeDescriptionProvider, Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveProviderTransparent
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 622
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Removes a previously added type description provider that is associated with the specified type.
  syntax:
    content: public static void RemoveProviderTransparent(TypeDescriptionProvider provider, Type type)
    content.vb: Public Shared Sub RemoveProviderTransparent(provider As TypeDescriptionProvider, type As Type)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: The <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> to remove.
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One or both of the parameters are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  commentId: M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  id: SortDescriptorArray(System.Collections.IList)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: SortDescriptorArray(Collections.IList)
  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SortDescriptorArray
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 623
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Sorts descriptors using the name of the descriptor.
  syntax:
    content: public static void SortDescriptorArray(Collections.IList infos)
    content.vb: Public Shared Sub SortDescriptorArray(infos As Collections.IList)
    parameters:
    - id: infos
      type: System.Collections.IList
      description: 'An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> that contains the descriptors to sort. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>infos</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.ComponentModel.RefreshEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: RefreshEventHandler
  fullName: System.ComponentModel.RefreshEventHandler
- uid: System.Attribute[]
  isExternal: true
  name: Attribute[]
  fullName: System.Attribute[]
  fullname.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Collections.Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IServiceProvider
  isExternal: false
  name: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Type[]
  isExternal: false
  name: Type[]
  fullName: System.Type[]
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ()
    fullName: ()
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  fullName: System.Reflection.Module
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
