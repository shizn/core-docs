items:
- uid: System.Linq.ParallelExecutionMode
  commentId: T:System.Linq.ParallelExecutionMode
  id: ParallelExecutionMode
  parent: System.Linq
  children:
  - System.Linq.ParallelExecutionMode.Default
  - System.Linq.ParallelExecutionMode.ForceParallelism
  langs:
  - csharp
  - vb
  name: ParallelExecutionMode
  fullName: System.Linq.ParallelExecutionMode
  type: Enum
  source:
    remote:
      path: src/System.Linq.Parallel/src/System/Linq/ParallelExecutionMode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParallelExecutionMode
    path: src/System.Linq.Parallel/src/System/Linq/ParallelExecutionMode.cs
    startLine: 20
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: The query execution mode is a hint that specifies how the system should handle performance trade-offs when parallelizing queries.
  syntax:
    content: 'public enum ParallelExecutionMode : int'
    content.vb: Public Enum ParallelExecutionMode As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Linq.ParallelExecutionMode.Default
  commentId: F:System.Linq.ParallelExecutionMode.Default
  id: Default
  parent: System.Linq.ParallelExecutionMode
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.Linq.ParallelExecutionMode.Default
  type: Field
  source:
    remote:
      path: src/System.Linq.Parallel/src/System/Linq/ParallelExecutionMode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.Linq.Parallel/src/System/Linq/ParallelExecutionMode.cs
    startLine: 27
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: This is the default setting. PLINQ will examine the query's structure and will only parallelize the query if will likely result in speedup. If the query structure indicates that speedup is not likely to be obtained, then PLINQ will execute the query as an ordinary LINQ to Objects query.
  syntax:
    content: Default = null
    content.vb: Default = Nothing
    return:
      type: System.Linq.ParallelExecutionMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Linq.ParallelExecutionMode.ForceParallelism
  commentId: F:System.Linq.ParallelExecutionMode.ForceParallelism
  id: ForceParallelism
  parent: System.Linq.ParallelExecutionMode
  langs:
  - csharp
  - vb
  name: ForceParallelism
  fullName: System.Linq.ParallelExecutionMode.ForceParallelism
  type: Field
  source:
    remote:
      path: src/System.Linq.Parallel/src/System/Linq/ParallelExecutionMode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ForceParallelism
    path: src/System.Linq.Parallel/src/System/Linq/ParallelExecutionMode.cs
    startLine: 32
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: Parallelize the entire query, even if that means using high-overhead algorithms. Use this flag in cases where you know that parallel execution of the query will result in speedup, but PLINQ in the Default mode would execute it as sequential.
  syntax:
    content: ForceParallelism = null
    content.vb: ForceParallelism = Nothing
    return:
      type: System.Linq.ParallelExecutionMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
- uid: System.Linq.ParallelExecutionMode
  parent: System.Linq
  isExternal: false
  name: ParallelExecutionMode
  fullName: System.Linq.ParallelExecutionMode
