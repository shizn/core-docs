items:
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute
  commentId: T:System.ComponentModel.DataAnnotations.UIHintAttribute
  id: UIHintAttribute
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)
  - System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])
  - System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters
  - System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)
  - System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode
  - System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer
  - System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint
  langs:
  - csharp
  - vb
  name: UIHintAttribute
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UIHintAttribute
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 14
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: 'Specifies the template or user control that Dynamic Data uses to display a data field. '
  syntax:
    content: 'public class UIHintAttribute : Attribute'
    content.vb: >-
      Public Class UIHintAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)
  commentId: M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DataAnnotations.UIHintAttribute
  langs:
  - csharp
  - vb
  name: UIHintAttribute(String)
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 23
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: 'Initializes a new instance of the <xref href="System.ComponentModel.DataAnnotations.UIHintAttribute" data-throw-if-not-resolved="false"></xref> class by using a specified user control. '
  syntax:
    content: public UIHintAttribute(string uiHint)
    content.vb: Public Sub New(uiHint As String)
    parameters:
    - id: uiHint
      type: System.String
      description: 'The user control to use to display the data field. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)
  commentId: M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.DataAnnotations.UIHintAttribute
  langs:
  - csharp
  - vb
  name: UIHintAttribute(String, String)
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintAttribute(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 33
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: 'Initializes a new instance of the <xref href="System.ComponentModel.DataAnnotations.UIHintAttribute" data-throw-if-not-resolved="false"></xref> class using the specified user control and specified presentation layer. '
  syntax:
    content: public UIHintAttribute(string uiHint, string presentationLayer)
    content.vb: Public Sub New(uiHint As String, presentationLayer As String)
    parameters:
    - id: uiHint
      type: System.String
      description: The user control (field template) to use to display the data field.
    - id: presentationLayer
      type: System.String
      description: The presentation layer that uses the class. Can be set to "HTML", "Silverlight", "WPF", or "WinForms".
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])
  commentId: M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])
  id: '#ctor(System.String,System.String,System.Object[])'
  parent: System.ComponentModel.DataAnnotations.UIHintAttribute
  langs:
  - csharp
  - vb
  name: UIHintAttribute(String, String, Object[])
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintAttribute(System.String, System.String, System.Object[])
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 45
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Initializes a new instance of the <xref href="System.ComponentModel.DataAnnotations.UIHintAttribute" data-throw-if-not-resolved="false"></xref> class by using the specified user control, presentation layer, and control parameters.
  syntax:
    content: public UIHintAttribute(string uiHint, string presentationLayer, params object[] controlParameters)
    content.vb: Public Sub New(uiHint As String, presentationLayer As String, ParamArray controlParameters As Object())
    parameters:
    - id: uiHint
      type: System.String
      description: The user control (field template) to use to display the data field.
    - id: presentationLayer
      type: System.String
      description: The presentation layer that uses the class. Can be set to "HTML", "Silverlight", "WPF", or "WinForms".
    - id: controlParameters
      type: System.Object[]
      description: 'The object to use to retrieve values from any data sources. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\" data-throw-if-not-resolved=\"false\"></xref> is null or it is a constraint key.-or-The value of <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\" data-throw-if-not-resolved=\"false\"></xref> is not a string. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintAttribute(System.String, System.String, System.Object())
  name.vb: UIHintAttribute(String, String, Object())
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters
  commentId: P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters
  id: ControlParameters
  parent: System.ComponentModel.DataAnnotations.UIHintAttribute
  langs:
  - csharp
  - vb
  name: ControlParameters
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ControlParameters
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 70
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets or sets the <xref href="System.Web.DynamicData.DynamicControlParameter" data-throw-if-not-resolved="false"></xref> object to use to retrieve values from any data source.
  syntax:
    content: public Collections.Generic.IDictionary<string, object> ControlParameters { get; }
    content.vb: Public ReadOnly Property ControlParameters As Collections.Generic.IDictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: 'A collection of key/value pairs. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer
  commentId: P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer
  id: PresentationLayer
  parent: System.ComponentModel.DataAnnotations.UIHintAttribute
  langs:
  - csharp
  - vb
  name: PresentationLayer
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PresentationLayer
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 61
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: 'Gets or sets the presentation layer that uses the <xref href="System.ComponentModel.DataAnnotations.UIHintAttribute" data-throw-if-not-resolved="false"></xref> class. '
  syntax:
    content: public string PresentationLayer { get; }
    content.vb: Public ReadOnly Property PresentationLayer As String
    parameters: []
    return:
      type: System.String
      description: The presentation layer that is used by this class.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint
  commentId: P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint
  id: UIHint
  parent: System.ComponentModel.DataAnnotations.UIHintAttribute
  langs:
  - csharp
  - vb
  name: UIHint
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UIHint
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 53
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets or sets the name of the field template to use to display the data field.
  syntax:
    content: public string UIHint { get; }
    content.vb: Public ReadOnly Property UIHint As String
    parameters: []
    return:
      type: System.String
      description: The name of the field template that displays the data field.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)
  commentId: M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DataAnnotations.UIHintAttribute
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 80
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets a value that indicates whether this instance is equal to the specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with this instance, or a null reference.
    return:
      type: System.Boolean
      description: true if the specified object is equal to this instance; otherwise, false.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode
  commentId: M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DataAnnotations.UIHintAttribute
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 75
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets the hash code for the current instance of the attribute.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: The attribute instance hash code.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2
  name: Collections.Generic.IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: Collections.Generic.IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  name: Generic.IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  fullname.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
