items:
- uid: System.Threading.CancellationTokenSource
  commentId: T:System.Threading.CancellationTokenSource
  id: CancellationTokenSource
  parent: System.Threading
  children:
  - System.Threading.CancellationTokenSource.#ctor
  - System.Threading.CancellationTokenSource.#ctor(System.Int32)
  - System.Threading.CancellationTokenSource.#ctor(System.TimeSpan)
  - System.Threading.CancellationTokenSource.Cancel
  - System.Threading.CancellationTokenSource.Cancel(System.Boolean)
  - System.Threading.CancellationTokenSource.CancelAfter(System.Int32)
  - System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)
  - System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)
  - System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])
  - System.Threading.CancellationTokenSource.Dispose
  - System.Threading.CancellationTokenSource.Dispose(System.Boolean)
  - System.Threading.CancellationTokenSource.IsCancellationRequested
  - System.Threading.CancellationTokenSource.Token
  langs:
  - csharp
  - vb
  name: CancellationTokenSource
  fullName: System.Threading.CancellationTokenSource
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CancellationTokenSource
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 36
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Signals to a <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> that it should be canceled.
  syntax:
    content: 'public class CancellationTokenSource : IDisposable'
    content.vb: >-
      Public Class CancellationTokenSource
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Threading.CancellationTokenSource.#ctor
  commentId: M:System.Threading.CancellationTokenSource.#ctor
  id: '#ctor'
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: CancellationTokenSource()
  fullName: System.Threading.CancellationTokenSource.CancellationTokenSource()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 240
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public CancellationTokenSource()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.CancellationTokenSource.#ctor(System.Int32)
  commentId: M:System.Threading.CancellationTokenSource.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: CancellationTokenSource(Int32)
  fullName: System.Threading.CancellationTokenSource.CancellationTokenSource(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 302
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> class that will be canceled after the specified delay in milliseconds.
  syntax:
    content: public CancellationTokenSource(int millisecondsDelay)
    content.vb: Public Sub New(millisecondsDelay As Integer)
    parameters:
    - id: millisecondsDelay
      type: System.Int32
      description: 'The time interval in milliseconds to wait before canceling this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>millisecondsDelay</em> is less than -1. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.CancellationTokenSource.#ctor(System.TimeSpan)
  commentId: M:System.Threading.CancellationTokenSource.#ctor(System.TimeSpan)
  id: '#ctor(System.TimeSpan)'
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: CancellationTokenSource(TimeSpan)
  fullName: System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 272
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> class that will be canceled after the specified time span.
  syntax:
    content: public CancellationTokenSource(TimeSpan delay)
    content.vb: Public Sub New(delay As TimeSpan)
    parameters:
    - id: delay
      type: System.TimeSpan
      description: The time interval to wait before canceling this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>delay</em>.<xref href=\"System.TimeSpan.TotalMilliseconds\" data-throw-if-not-resolved=\"false\"></xref> is less than -1 or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.CancellationTokenSource.IsCancellationRequested
  commentId: P:System.Threading.CancellationTokenSource.IsCancellationRequested
  id: IsCancellationRequested
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: IsCancellationRequested
  fullName: System.Threading.CancellationTokenSource.IsCancellationRequested
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsCancellationRequested
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 102
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Gets whether cancellation has been requested for this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool IsCancellationRequested { get; }
    content.vb: Public ReadOnly Property IsCancellationRequested As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if cancellation has been requested for this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref>; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Threading.CancellationTokenSource.Token
  commentId: P:System.Threading.CancellationTokenSource.Token
  id: Token
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: Token
  fullName: System.Threading.CancellationTokenSource.Token
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Token
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 140
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Gets the <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> associated with this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public CancellationToken Token { get; }
    content.vb: Public ReadOnly Property Token As CancellationToken
    parameters: []
    return:
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> associated with this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The token source has been disposed.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Threading.CancellationTokenSource.Cancel
  commentId: M:System.Threading.CancellationTokenSource.Cancel
  id: Cancel
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: Cancel()
  fullName: System.Threading.CancellationTokenSource.Cancel()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Cancel
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 346
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Communicates a request for cancellation.
  syntax:
    content: public void Cancel()
    content.vb: Public Sub Cancel
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: This <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> has been disposed.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: An aggregate exception containing all the exceptions thrown by the registered callbacks on the associated <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.CancellationTokenSource.Cancel(System.Boolean)
  commentId: M:System.Threading.CancellationTokenSource.Cancel(System.Boolean)
  id: Cancel(System.Boolean)
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: Cancel(Boolean)
  fullName: System.Threading.CancellationTokenSource.Cancel(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Cancel
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 380
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Communicates a request for cancellation, and specifies whether remaining callbacks and cancelable operations should be processed.
  syntax:
    content: public void Cancel(bool throwOnFirstException)
    content.vb: Public Sub Cancel(throwOnFirstException As Boolean)
    parameters:
    - id: throwOnFirstException
      type: System.Boolean
      description: true if exceptions should immediately propagate; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: This <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> has been disposed.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: An aggregate exception containing all the exceptions thrown by the registered callbacks on the associated <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.CancellationTokenSource.CancelAfter(System.Int32)
  commentId: M:System.Threading.CancellationTokenSource.CancelAfter(System.Int32)
  id: CancelAfter(System.Int32)
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: CancelAfter(Int32)
  fullName: System.Threading.CancellationTokenSource.CancelAfter(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CancelAfter
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 446
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Schedules a cancel operation on this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> after the specified number of milliseconds.
  syntax:
    content: public void CancelAfter(int millisecondsDelay)
    content.vb: Public Sub CancelAfter(millisecondsDelay As Integer)
    parameters:
    - id: millisecondsDelay
      type: System.Int32
      description: The time span to wait before canceling this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The exception thrown when this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> has been disposed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The exception thrown when <em>millisecondsDelay</em> is less than -1.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)
  commentId: M:System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)
  id: CancelAfter(System.TimeSpan)
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: CancelAfter(TimeSpan)
  fullName: System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CancelAfter
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 411
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Schedules a cancel operation on this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> after the specified time span.
  syntax:
    content: public void CancelAfter(TimeSpan delay)
    content.vb: Public Sub CancelAfter(delay As TimeSpan)
    parameters:
    - id: delay
      type: System.TimeSpan
      description: The time span to wait before canceling this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The exception thrown when this <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> has been disposed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The exception that is thrown when <em>delay</em> is less than -1 or greater than Int32.MaxValue.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)
  commentId: M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)
  id: CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: CreateLinkedTokenSource(CancellationToken, CancellationToken)
  fullName: System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CreateLinkedTokenSource
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 866
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Creates a <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> that will be in the canceled state when any of the source tokens are in the canceled state.
  syntax:
    content: public static CancellationTokenSource CreateLinkedTokenSource(CancellationToken token1, CancellationToken token2)
    content.vb: Public Shared Function CreateLinkedTokenSource(token1 As CancellationToken, token2 As CancellationToken) As CancellationTokenSource
    parameters:
    - id: token1
      type: System.Threading.CancellationToken
      description: The first cancellation token to observe.
    - id: token2
      type: System.Threading.CancellationToken
      description: The second cancellation token to observe.
    return:
      type: System.Threading.CancellationTokenSource
      description: A <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> that is linked to the source tokens.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: A <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> associated with one of the source tokens has been disposed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])
  commentId: M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])
  id: CreateLinkedTokenSource(System.Threading.CancellationToken[])
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: CreateLinkedTokenSource(CancellationToken[])
  fullName: System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CreateLinkedTokenSource
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 881
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Creates a <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> that will be in the canceled state when any of the source tokens in the specified array are in the canceled state.
  syntax:
    content: public static CancellationTokenSource CreateLinkedTokenSource(params CancellationToken[] tokens)
    content.vb: Public Shared Function CreateLinkedTokenSource(ParamArray tokens As CancellationToken()) As CancellationTokenSource
    parameters:
    - id: tokens
      type: System.Threading.CancellationToken[]
      description: An array that contains the cancellation token instances to observe.
    return:
      type: System.Threading.CancellationTokenSource
      description: A <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> that is linked to the source tokens.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: A <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> associated with one of the source tokens has been disposed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>tokens</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>tokens</em> is empty."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken())
  name.vb: CreateLinkedTokenSource(CancellationToken())
- uid: System.Threading.CancellationTokenSource.Dispose
  commentId: M:System.Threading.CancellationTokenSource.Dispose
  id: Dispose
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Threading.CancellationTokenSource.Dispose()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 528
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Releases all resources used by the current instance of the <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.CancellationTokenSource.Dispose(System.Boolean)
  commentId: M:System.Threading.CancellationTokenSource.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Threading.CancellationTokenSource
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Threading.CancellationTokenSource.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/Threading/CancellationTokenSource.cs
    startLine: 538
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: Releases the unmanaged resources used by the <xref href="System.Threading.CancellationTokenSource" data-throw-if-not-resolved="false"></xref> class and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.CancellationTokenSource
  parent: System.Threading
  isExternal: false
  name: CancellationTokenSource
  fullName: System.Threading.CancellationTokenSource
- uid: System.Threading.CancellationToken[]
  isExternal: false
  name: CancellationToken[]
  fullName: System.Threading.CancellationToken[]
  fullname.vb: System.Threading.CancellationToken()
  name.vb: CancellationToken()
  spec.csharp:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
  - name: ()
    fullName: ()
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.AggregateException
  parent: System
  isExternal: false
  name: AggregateException
  fullName: System.AggregateException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
