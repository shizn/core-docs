items:
- uid: System.IO.Packaging.Package
  commentId: T:System.IO.Packaging.Package
  id: Package
  parent: System.IO.Packaging
  children:
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  - System.IO.Packaging.Package.Close
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  - System.IO.Packaging.Package.DeletePart(System.Uri)
  - System.IO.Packaging.Package.DeletePartCore(System.Uri)
  - System.IO.Packaging.Package.DeleteRelationship(System.String)
  - System.IO.Packaging.Package.Dispose(System.Boolean)
  - System.IO.Packaging.Package.FileOpenAccess
  - System.IO.Packaging.Package.Flush
  - System.IO.Packaging.Package.FlushCore
  - System.IO.Packaging.Package.GetPart(System.Uri)
  - System.IO.Packaging.Package.GetPartCore(System.Uri)
  - System.IO.Packaging.Package.GetParts
  - System.IO.Packaging.Package.GetPartsCore
  - System.IO.Packaging.Package.GetRelationship(System.String)
  - System.IO.Packaging.Package.GetRelationships
  - System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Packaging.Package.PackageProperties
  - System.IO.Packaging.Package.PartExists(System.Uri)
  - System.IO.Packaging.Package.RelationshipExists(System.String)
  langs:
  - csharp
  - vb
  name: Package
  fullName: System.IO.Packaging.Package
  type: Class
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Package
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 17
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Represents a container that can store multiple data objects.
  syntax:
    content: 'public abstract class Package : IDisposable'
    content.vb: >-
      Public MustInherit Class Package
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  commentId: M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  id: '#ctor(System.IO.FileAccess)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(System.IO.FileAccess)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 39
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Initializes a new instance of the <xref href="System.IO.Packaging.Package" data-throw-if-not-resolved="false"></xref> class that uses a given <xref href="System.IO.FileAccess" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected Package(FileAccess openFileAccess)
    content.vb: Protected Sub New(openFileAccess As FileAccess)
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: The file IO permissions for the package.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value for <em>openFileAccess</em> is not valid.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.IO.Packaging.Package.FileOpenAccess
  commentId: P:System.IO.Packaging.Package.FileOpenAccess
  id: FileOpenAccess
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileOpenAccess
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 50
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Gets the file access setting for the package.
  syntax:
    content: public FileAccess FileOpenAccess { get; }
    content.vb: Public ReadOnly Property FileOpenAccess As FileAccess
    parameters: []
    return:
      type: System.IO.FileAccess
      description: 'One of the <xref href="System.IO.FileAccess" data-throw-if-not-resolved="false"></xref> values: <xref href="System.IO.FileAccess.Read" data-throw-if-not-resolved="false"></xref>, <xref href="System.IO.FileAccess.Write" data-throw-if-not-resolved="false"></xref>, or <xref href="System.IO.FileAccess.ReadWrite" data-throw-if-not-resolved="false"></xref>.'
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.Package.PackageProperties
  commentId: P:System.IO.Packaging.Package.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PackageProperties
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 65
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Gets the core properties of the package.
  syntax:
    content: public PackageProperties PackageProperties { get; }
    content.vb: Public ReadOnly Property PackageProperties As PackageProperties
    parameters: []
    return:
      type: System.IO.Packaging.PackageProperties
      description: The core properties of the package.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.Package.Close
  commentId: M:System.IO.Packaging.Package.Close
  id: Close
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Close()
  fullName: System.IO.Packaging.Package.Close()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Close
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 484
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Saves and closes the package plus all underlying part streams.
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  commentId: M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  id: CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: CreatePart(Uri, String)
  fullName: System.IO.Packaging.Package.CreatePart(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreatePart
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 43
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Creates a new uncompressed part with a given URI and content type.
  syntax:
    content: public PackagePart CreatePart(Uri partUri, string contentType)
    content.vb: Public Function CreatePart(partUri As Uri, contentType As String) As PackagePart
    parameters:
    - id: partUri
      type: System.Uri
      description: "The uniform resource identifier (URI)Â of the new part."
    - id: contentType
      type: System.String
      description: The content type of the data stream.
    return:
      type: System.IO.Packaging.PackagePart
      description: The new created part.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>partUri</em> or <em>contentType</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>partUri</em> is not a valid <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>Â URI."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A part with the specified <em>partUri</em> is already present in the package.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is read-only (a new part cannot be added).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  commentId: M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: CreatePart(Uri, String, CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(System.Uri, System.String, System.IO.Packaging.CompressionOption)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreatePart
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 44
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Creates a new part with a given URI, content type, and compression option.
  syntax:
    content: public PackagePart CreatePart(Uri partUri, string contentType, CompressionOption compressionOption)
    content.vb: Public Function CreatePart(partUri As Uri, contentType As String, compressionOption As CompressionOption) As PackagePart
    parameters:
    - id: partUri
      type: System.Uri
      description: "The URIÂ of the new part."
    - id: contentType
      type: System.String
      description: The content type of the data stream.
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: The compression option for the data stream, <xref href="System.IO.Packaging.CompressionOption.NotCompressed" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.CompressionOption.Normal" data-throw-if-not-resolved="false"></xref> compression.
    return:
      type: System.IO.Packaging.PackagePart
      description: The new created part.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>partUri</em> or <em>contentType</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>partUri</em> is not a valid <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>Â uniform resource identifier (URI)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A part with the specified <em>partUri</em> is already present in the package.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <em>compressionOption</em> value is not valid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is read-only (a new part cannot be added).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  commentId: M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: CreatePartCore(Uri, String, CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(System.Uri, System.String, System.IO.Packaging.CompressionOption)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreatePartCore
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 45
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: When overridden in a derived class, creates a new part in the package.
  syntax:
    content: protected abstract PackagePart CreatePartCore(Uri partUri, string contentType, CompressionOption compressionOption)
    content.vb: Protected MustOverride Function CreatePartCore(partUri As Uri, contentType As String, compressionOption As CompressionOption) As PackagePart
    parameters:
    - id: partUri
      type: System.Uri
      description: The uniform resource identifier (URI) for the part being created.
    - id: contentType
      type: System.String
      description: The content type of the data stream.
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: The compression option for the data stream.
    return:
      type: System.IO.Packaging.PackagePart
      description: The created part.
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: CreateRelationship(Uri, TargetMode, String)
  fullName: System.IO.Packaging.Package.CreateRelationship(System.Uri, System.IO.Packaging.TargetMode, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateRelationship
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 46
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: 'Creates a package-level relationship to a part with a given URI, target mode, and relationship type. '
  syntax:
    content: public PackageRelationship CreateRelationship(Uri targetUri, TargetMode targetMode, string relationshipType)
    content.vb: Public Function CreateRelationship(targetUri As Uri, targetMode As TargetMode, relationshipType As String) As PackageRelationship
    parameters:
    - id: targetUri
      type: System.Uri
      description: The uniform resource identifier (URI) of the target part.
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: Indicates if the target part is <xref href="System.IO.Packaging.TargetMode.Internal" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.TargetMode.External" data-throw-if-not-resolved="false"></xref> to the package.
    - id: relationshipType
      type: System.String
      description: A URI that uniquely defines the role of the relationship.
    return:
      type: System.IO.Packaging.PackageRelationship
      description: The package-level relationship to the specified part.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>targetUri</em> or <em>relationshipType</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <em>targetUri</em> part is a <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref>, or <em>targetMode</em> is <xref href="System.IO.Packaging.TargetMode.Internal" data-throw-if-not-resolved="false"></xref> and <em>targetUri</em> is an absolute URI.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value for <em>targetMode</em> is not valid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is read-only.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: CreateRelationship(Uri, TargetMode, String, String)
  fullName: System.IO.Packaging.Package.CreateRelationship(System.Uri, System.IO.Packaging.TargetMode, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateRelationship
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 47
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Creates a package-level relationship to a part with a given URI, target mode, relationship type, and identifier (ID).
  syntax:
    content: public PackageRelationship CreateRelationship(Uri targetUri, TargetMode targetMode, string relationshipType, string id)
    content.vb: Public Function CreateRelationship(targetUri As Uri, targetMode As TargetMode, relationshipType As String, id As String) As PackageRelationship
    parameters:
    - id: targetUri
      type: System.Uri
      description: The uniform resource identifier (URI) of the target part.
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: Indicates if the target part is <xref href="System.IO.Packaging.TargetMode.Internal" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.TargetMode.External" data-throw-if-not-resolved="false"></xref> to the package.
    - id: relationshipType
      type: System.String
      description: A URI that uniquely defines the role of the relationship.
    - id: id
      type: System.String
      description: A unique XML identifier.
    return:
      type: System.IO.Packaging.PackageRelationship
      description: The package-level relationship to the specified part.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>targetUri</em> or <em>relationshipType</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <em>targetUri</em> part is a <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref>, or <em>targetMode</em> is <xref href="System.IO.Packaging.TargetMode.Internal" data-throw-if-not-resolved="false"></xref> and <em>targetUri</em> is an absolute URI.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value for <em>targetMode</em> is not valid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is read-only.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<em>id</em> is not a valid XML identifier; or a part with the specified <em>id</em> already occurs in the package."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  commentId: M:System.IO.Packaging.Package.DeletePart(System.Uri)
  id: DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeletePart
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 48
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Deletes a part with a given URI from the package.
  syntax:
    content: public void DeletePart(Uri partUri)
    content.vb: Public Sub DeletePart(partUri As Uri)
    parameters:
    - id: partUri
      type: System.Uri
      description: The URI of the part to delete.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>partUri</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>partUri</em> is not a valid <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>Â URI."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is read-only.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  commentId: M:System.IO.Packaging.Package.DeletePartCore(System.Uri)
  id: DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeletePartCore
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 49
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: 'When overridden in a derived class, deletes a part with a given URI. '
  syntax:
    content: protected abstract void DeletePartCore(Uri partUri)
    content.vb: Protected MustOverride Sub DeletePartCore(partUri As Uri)
    parameters:
    - id: partUri
      type: System.Uri
      description: The <xref href="System.IO.Packaging.PackagePart.Uri" data-throw-if-not-resolved="false"></xref> of the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> to delete.
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  commentId: M:System.IO.Packaging.Package.DeleteRelationship(System.String)
  id: DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeleteRelationship
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 50
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Deletes a package-level relationship.
  syntax:
    content: public void DeleteRelationship(string id)
    content.vb: Public Sub DeleteRelationship(id As String)
    parameters:
    - id: id
      type: System.String
      description: The <xref href="System.IO.Packaging.PackageRelationship.Id" data-throw-if-not-resolved="false"></xref> of the <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> to delete.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>id</em> is null."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is read-only.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<em>id</em> is not a valid XML identifier."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  commentId: M:System.IO.Packaging.Package.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 730
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.IO.Packaging.Package.Flush
  commentId: M:System.IO.Packaging.Package.Flush
  id: Flush
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: System.IO.Packaging.Package.Flush()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 495
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Saves the contents of all parts and relationships that are contained in the package.
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is read-only and cannot be modified.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.FlushCore
  commentId: M:System.IO.Packaging.Package.FlushCore
  id: FlushCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FlushCore
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 758
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: When overridden in a derived class, saves the content of all parts and relationships to the derived class store.
  syntax:
    content: protected abstract void FlushCore()
    content.vb: Protected MustOverride Sub FlushCore
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  commentId: M:System.IO.Packaging.Package.GetPart(System.Uri)
  id: GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPart
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 54
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns the part with a given URI.
  syntax:
    content: public PackagePart GetPart(Uri partUri)
    content.vb: Public Function GetPart(partUri As Uri) As PackagePart
    parameters:
    - id: partUri
      type: System.Uri
      description: The uniform resource identifier (URI) of the part to return.
    return:
      type: System.IO.Packaging.PackagePart
      description: The part with the specified <em>partUri</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>partUri</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>partUri</em> is not a valid <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>Â uniform resource identifier (URI)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A part with the specified <em>partUri</em> is not in the package.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is write-only.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  commentId: M:System.IO.Packaging.Package.GetPartCore(System.Uri)
  id: GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPartCore
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 55
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: When overridden in a derived class, returns the part addressed by a given URI.
  syntax:
    content: protected abstract PackagePart GetPartCore(Uri partUri)
    content.vb: Protected MustOverride Function GetPartCore(partUri As Uri) As PackagePart
    parameters:
    - id: partUri
      type: System.Uri
      description: The uniform resource identifier (URI) of the part to retrieve.
    return:
      type: System.IO.Packaging.PackagePart
      description: The requested part; or null, if a part with the specified <em>partUri</em> is not in the package.
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.Package.GetParts
  commentId: M:System.IO.Packaging.Package.GetParts
  id: GetParts
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetParts
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 377
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns a collection of all the parts in the package.
  syntax:
    content: public PackagePartCollection GetParts()
    content.vb: Public Function GetParts As PackagePartCollection
    return:
      type: System.IO.Packaging.PackagePartCollection
      description: A collection of all the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> elements that are contained in the package.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is write-only.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.GetPartsCore
  commentId: M:System.IO.Packaging.Package.GetPartsCore
  id: GetPartsCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPartsCore
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 721
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: 'When overridden in a derived class, returns an array of all the parts in the package. '
  syntax:
    content: protected abstract PackagePart[] GetPartsCore()
    content.vb: Protected MustOverride Function GetPartsCore As PackagePart()
    return:
      type: System.IO.Packaging.PackagePart[]
      description: An array of all the parts that are contained in the package.
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  commentId: M:System.IO.Packaging.Package.GetRelationship(System.String)
  id: GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelationship
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 648
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns the package-level relationship with a given identifier.
  syntax:
    content: public PackageRelationship GetRelationship(string id)
    content.vb: Public Function GetRelationship(id As String) As PackageRelationship
    parameters:
    - id: id
      type: System.String
      description: The <xref href="System.IO.Packaging.PackageRelationship.Id" data-throw-if-not-resolved="false"></xref> of the relationship to return.
    return:
      type: System.IO.Packaging.PackageRelationship
      description: The package-level relationship with the specified <em>id</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>id</em> is null."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<em>id</em> is not a valid XML identifier."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A relationship with the specified <em>id</em> is not in the package.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is write-only.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.GetRelationships
  commentId: M:System.IO.Packaging.Package.GetRelationships
  id: GetRelationships
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelationships
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 605
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns a collection of all the package-level relationships.
  syntax:
    content: public PackageRelationshipCollection GetRelationships()
    content.vb: Public Function GetRelationships As PackageRelationshipCollection
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: A collection of all the package-level relationships that are contained in the package.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is write-only.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  commentId: M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  id: GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelationshipsByType
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 623
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: 'Returns a collection of all the package-level relationships that match a given <xref href="System.IO.Packaging.PackageRelationship.RelationshipType" data-throw-if-not-resolved="false"></xref>. '
  syntax:
    content: public PackageRelationshipCollection GetRelationshipsByType(string relationshipType)
    content.vb: Public Function GetRelationshipsByType(relationshipType As String) As PackageRelationshipCollection
    parameters:
    - id: relationshipType
      type: System.String
      description: The <xref href="System.IO.Packaging.PackageRelationship.RelationshipType" data-throw-if-not-resolved="false"></xref>  to match and return in the collection.
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: A collection of package-level relationships that match the specified <em>relationshipType</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>relationshipType</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>relationshipType</em> is an empty string."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is write-only.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  commentId: M:System.IO.Packaging.Package.Open(System.IO.Stream)
  id: Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(Stream)
  fullName: System.IO.Packaging.Package.Open(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 61
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Opens a package on a given IO stream.
  syntax:
    content: public static Package Open(Stream stream)
    content.vb: Public Shared Function Open(stream As Stream) As Package
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The IO stream on which to open the package.
    return:
      type: System.IO.Packaging.Package
      description: The opened package.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>stream</em> is null."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package to open requires read or read/write permission and the specified <em>stream</em> is write-only; or, the package to open requires write or read/write permission and the specified <em>stream</em> is read-only.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  commentId: M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  id: Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(Stream, FileMode)
  fullName: System.IO.Packaging.Package.Open(System.IO.Stream, System.IO.FileMode)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 62
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Opens a package with a given IO stream and file mode.
  syntax:
    content: public static Package Open(Stream stream, FileMode packageMode)
    content.vb: Public Shared Function Open(stream As Stream, packageMode As FileMode) As Package
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The IO stream on which to open the package.
    - id: packageMode
      type: System.IO.FileMode
      description: The file mode in which to open the package.
    return:
      type: System.IO.Packaging.Package
      description: The opened package.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>stream</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>packageMode</em> value is not valid."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package to open requires read or read/write permission and the specified <em>stream</em> is write-only; or, the package to open requires write or read/write permission and the specified <em>stream</em> is read-only.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  commentId: M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(Stream, FileMode, FileAccess)
  fullName: System.IO.Packaging.Package.Open(System.IO.Stream, System.IO.FileMode, System.IO.FileAccess)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 63
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Opens a package with a given IO stream, file mode, and file access setting.
  syntax:
    content: public static Package Open(Stream stream, FileMode packageMode, FileAccess packageAccess)
    content.vb: Public Shared Function Open(stream As Stream, packageMode As FileMode, packageAccess As FileAccess) As Package
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The IO stream on which to open the package.
    - id: packageMode
      type: System.IO.FileMode
      description: The file mode in which to open the package.
    - id: packageAccess
      type: System.IO.FileAccess
      description: The file access in which to open the package.
    return:
      type: System.IO.Packaging.Package
      description: The opened package.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>stream</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value for <em>packageMode</em> or <em>packageAccess</em> is not valid.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package to open requires read or read/write permission and the specified <em>stream</em> is write-only; or the package to open requires write or read/write permission and the specified <em>stream</em> is read-only.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.String)
  commentId: M:System.IO.Packaging.Package.Open(System.String)
  id: Open(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(String)
  fullName: System.IO.Packaging.Package.Open(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 93
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Opens a package at a given path and file name.
  syntax:
    content: public static Package Open(string path)
    content.vb: Public Shared Function Open(path As String) As Package
    parameters:
    - id: path
      type: System.String
      description: The path and file name of the package.
    return:
      type: System.IO.Packaging.Package
      description: The opened package.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>path</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  commentId: M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(String, FileMode)
  fullName: System.IO.Packaging.Package.Open(System.String, System.IO.FileMode)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 65
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: 'Opens a package at a given path using a given file mode. '
  syntax:
    content: public static Package Open(string path, FileMode packageMode)
    content.vb: Public Shared Function Open(path As String, packageMode As FileMode) As Package
    parameters:
    - id: path
      type: System.String
      description: The path and file name of the package.
    - id: packageMode
      type: System.IO.FileMode
      description: The file mode in which to open the package.
    return:
      type: System.IO.Packaging.Package
      description: The opened package.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>path</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Value for <em>packageMode</em> is not valid.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  commentId: M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(String, FileMode, FileAccess)
  fullName: System.IO.Packaging.Package.Open(System.String, System.IO.FileMode, System.IO.FileAccess)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 66
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Opens a package at a given path using a given file mode and file access setting.
  syntax:
    content: public static Package Open(string path, FileMode packageMode, FileAccess packageAccess)
    content.vb: Public Shared Function Open(path As String, packageMode As FileMode, packageAccess As FileAccess) As Package
    parameters:
    - id: path
      type: System.String
      description: The path and file name of the package.
    - id: packageMode
      type: System.IO.FileMode
      description: The file mode in which to open the package.
    - id: packageAccess
      type: System.IO.FileAccess
      description: The file access in which to open the package.
    return:
      type: System.IO.Packaging.Package
      description: The opened package.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>path</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Value for <em>packageMode</em> or <em>packageAccess</em> is not valid.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  commentId: M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(String, FileMode, FileAccess, FileShare)
  fullName: System.IO.Packaging.Package.Open(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 67
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Opens a package at a given path using a given file mode, file access, and file share setting.
  syntax:
    content: public static Package Open(string path, FileMode packageMode, FileAccess packageAccess, FileShare packageShare)
    content.vb: Public Shared Function Open(path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package
    parameters:
    - id: path
      type: System.String
      description: The path and file name of the package.
    - id: packageMode
      type: System.IO.FileMode
      description: The file mode in which to open the package.
    - id: packageAccess
      type: System.IO.FileAccess
      description: The file access in which to open the package.
    - id: packageShare
      type: System.IO.FileShare
      description: The file sharing mode in which to open the package.
    return:
      type: System.IO.Packaging.Package
      description: The opened package.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>path</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value for <em>packageMode</em>, <em>packageAccess</em>, or <em>packageShare</em> is not valid.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  commentId: M:System.IO.Packaging.Package.PartExists(System.Uri)
  id: PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PartExists
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 68
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Indicates whether a part with a given URI is in the package.
  syntax:
    content: public virtual bool PartExists(Uri partUri)
    content.vb: Public Overridable Function PartExists(partUri As Uri) As Boolean
    parameters:
    - id: partUri
      type: System.Uri
      description: The <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> of the part to check for.
    return:
      type: System.Boolean
      description: true if a part with the specified <em>partUri</em> is in the package; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>partUri</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>partUri</em> is not a valid <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>Â uniform resource identifier (URI)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is write-only (information cannot be read).
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  commentId: M:System.IO.Packaging.Package.RelationshipExists(System.String)
  id: RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RelationshipExists
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 669
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Indicates whether a package-level relationship with a given ID is contained in the package.
  syntax:
    content: public bool RelationshipExists(string id)
    content.vb: Public Function RelationshipExists(id As String) As Boolean
    parameters:
    - id: id
      type: System.String
      description: The <xref href="System.IO.Packaging.PackageRelationship.Id" data-throw-if-not-resolved="false"></xref> of the relationship to check for.
    return:
      type: System.Boolean
      description: true if a package-level relationship with the specified <em>id</em> is in the package; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>id</em> is null."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<em>id</em> is not a valid XML identifier."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The package is not open (<xref href="System.IO.Packaging.Package.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.Packaging.Package.Close" data-throw-if-not-resolved="false"></xref> has been called).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The package is write-only.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.IO.Packaging
  isExternal: false
  name: System.IO.Packaging
  fullName: System.IO.Packaging
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.IO.Packaging.PackageProperties
  parent: System.IO.Packaging
  isExternal: false
  name: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.PackagePartCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePartCollection
  fullName: System.IO.Packaging.PackagePartCollection
- uid: System.IO.Packaging.PackagePart[]
  isExternal: false
  name: PackagePart[]
  fullName: System.IO.Packaging.PackagePart[]
  fullname.vb: System.IO.Packaging.PackagePart()
  name.vb: PackagePart()
  spec.csharp:
  - uid: System.IO.Packaging.PackagePart
    name: PackagePart
    fullName: System.IO.Packaging.PackagePart
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.IO.Packaging.PackagePart
    name: PackagePart
    fullName: System.IO.Packaging.PackagePart
  - name: ()
    fullName: ()
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  fullName: System.IO.FileShare
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.Xml.XmlException
  isExternal: false
  name: XmlException
  fullName: System.Xml.XmlException
