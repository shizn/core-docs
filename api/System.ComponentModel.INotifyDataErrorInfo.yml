items:
- uid: System.ComponentModel.INotifyDataErrorInfo
  commentId: T:System.ComponentModel.INotifyDataErrorInfo
  id: INotifyDataErrorInfo
  parent: System.ComponentModel
  children:
  - System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged
  - System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)
  - System.ComponentModel.INotifyDataErrorInfo.HasErrors
  langs:
  - csharp
  - vb
  name: INotifyDataErrorInfo
  fullName: System.ComponentModel.INotifyDataErrorInfo
  type: Interface
  source:
    remote:
      path: src/System.ObjectModel/src/System/ComponentModel/INotifyDataErrorInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: INotifyDataErrorInfo
    path: src/System.ObjectModel/src/System/ComponentModel/INotifyDataErrorInfo.cs
    startLine: 9
  assemblies:
  - System.ObjectModel
  namespace: System.ComponentModel
  summary: Defines members that data entity classes can implement to provide custom synchronous and asynchronous validation support.
  syntax:
    content: public interface INotifyDataErrorInfo
    content.vb: Public Interface INotifyDataErrorInfo
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.ComponentModel.INotifyDataErrorInfo.HasErrors
  commentId: P:System.ComponentModel.INotifyDataErrorInfo.HasErrors
  id: HasErrors
  parent: System.ComponentModel.INotifyDataErrorInfo
  langs:
  - csharp
  - vb
  name: HasErrors
  fullName: System.ComponentModel.INotifyDataErrorInfo.HasErrors
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/ComponentModel/INotifyDataErrorInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasErrors
    path: src/System.ObjectModel/src/System/ComponentModel/INotifyDataErrorInfo.cs
    startLine: 11
  assemblies:
  - System.ObjectModel
  namespace: System.ComponentModel
  summary: 'Gets a value that indicates whether the entity has validation errors. '
  syntax:
    content: bool HasErrors { get; }
    content.vb: ReadOnly Property HasErrors As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the entity currently has validation errors; otherwise, false.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged
  commentId: E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged
  id: ErrorsChanged
  parent: System.ComponentModel.INotifyDataErrorInfo
  langs:
  - csharp
  - vb
  name: ErrorsChanged
  fullName: System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged
  type: Event
  source:
    remote:
      path: src/System.ObjectModel/src/System/ComponentModel/INotifyDataErrorInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ErrorsChanged
    path: src/System.ObjectModel/src/System/ComponentModel/INotifyDataErrorInfo.cs
    startLine: 15
  assemblies:
  - System.ObjectModel
  namespace: System.ComponentModel
  summary: 'Occurs when the validation errors have changed for a property or for the entire entity. '
  syntax:
    content: event EventHandler<DataErrorsChangedEventArgs> ErrorsChanged
    content.vb: Event ErrorsChanged As EventHandler(Of DataErrorsChangedEventArgs)
    return:
      type: System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs}
- uid: System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)
  commentId: M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)
  id: GetErrors(System.String)
  parent: System.ComponentModel.INotifyDataErrorInfo
  langs:
  - csharp
  - vb
  name: GetErrors(String)
  fullName: System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/ComponentModel/INotifyDataErrorInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetErrors
    path: src/System.ObjectModel/src/System/ComponentModel/INotifyDataErrorInfo.cs
    startLine: 13
  assemblies:
  - System.ObjectModel
  namespace: System.ComponentModel
  summary: Gets the validation errors for a specified property or for the entire entity.
  syntax:
    content: IEnumerable GetErrors(string propertyName)
    content.vb: Function GetErrors(propertyName As String) As IEnumerable
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property to retrieve validation errors for; or null or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>, to retrieve entity-level errors.
    return:
      type: System.Collections.IEnumerable
      description: The validation errors for the property or entity.
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs}
  definition: System.EventHandler`1
  name: EventHandler<DataErrorsChangedEventArgs>
  fullName: System.EventHandler<System.ComponentModel.DataErrorsChangedEventArgs>
  fullname.vb: System.EventHandler(Of System.ComponentModel.DataErrorsChangedEventArgs)
  name.vb: EventHandler(Of DataErrorsChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ComponentModel.DataErrorsChangedEventArgs
    name: DataErrorsChangedEventArgs
    fullName: System.ComponentModel.DataErrorsChangedEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.DataErrorsChangedEventArgs
    name: DataErrorsChangedEventArgs
    fullName: System.ComponentModel.DataErrorsChangedEventArgs
  - name: )
    fullName: )
- uid: System.EventHandler`1
  isExternal: false
  name: EventHandler<>
  fullName: System.EventHandler<>
  fullname.vb: System.EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
