items:
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  id: FileNotFoundException
  parent: System.IO
  children:
  - System.IO.FileNotFoundException.#ctor
  - System.IO.FileNotFoundException.#ctor(System.String)
  - System.IO.FileNotFoundException.#ctor(System.String,System.Exception)
  - System.IO.FileNotFoundException.#ctor(System.String,System.String)
  - System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)
  - System.IO.FileNotFoundException.FileName
  - System.IO.FileNotFoundException.Message
  - System.IO.FileNotFoundException.ToString
  langs:
  - csharp
  - vb
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FileNotFoundException
    path: src/mscorlib/src/System/IO/FileNotFoundException.cs
    startLine: 24
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: The exception that is thrown when an attempt to access a file that does not exist on disk fails.
  syntax:
    content: 'public class FileNotFoundException : IOException'
    content.vb: >-
      Public Class FileNotFoundException
          Inherits IOException
  inheritance:
  - System.Object
  - System.Exception
  - System.IO.IOException
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.GetBaseException
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.FileNotFoundException.#ctor
  commentId: M:System.IO.FileNotFoundException.#ctor
  id: '#ctor'
  parent: System.IO.FileNotFoundException
  langs:
  - csharp
  - vb
  name: FileNotFoundException()
  fullName: System.IO.FileNotFoundException.FileNotFoundException()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/FileNotFoundException.cs
    startLine: 31
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileNotFoundException" data-throw-if-not-resolved="false"></xref> class with its message string set to a system-supplied message and its HRESULT set to COR_E_FILENOTFOUND.
  syntax:
    content: public FileNotFoundException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileNotFoundException.#ctor(System.String)
  commentId: M:System.IO.FileNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.FileNotFoundException
  langs:
  - csharp
  - vb
  name: FileNotFoundException(String)
  fullName: System.IO.FileNotFoundException.FileNotFoundException(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/FileNotFoundException.cs
    startLine: 36
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileNotFoundException" data-throw-if-not-resolved="false"></xref> class with its message string set to <em>message</em> and its HRESULT set to COR_E_FILENOTFOUND.
  syntax:
    content: public FileNotFoundException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: 'A description of the error. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileNotFoundException.#ctor(System.String,System.Exception)
  commentId: M:System.IO.FileNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.IO.FileNotFoundException
  langs:
  - csharp
  - vb
  name: FileNotFoundException(String, Exception)
  fullName: System.IO.FileNotFoundException.FileNotFoundException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/FileNotFoundException.cs
    startLine: 41
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileNotFoundException" data-throw-if-not-resolved="false"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  syntax:
    content: public FileNotFoundException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: 'A description of the error. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. '
    - id: innerException
      type: System.Exception
      description: 'The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not null, the current exception is raised in a catch block that handles the inner exception. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileNotFoundException.#ctor(System.String,System.String)
  commentId: M:System.IO.FileNotFoundException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.IO.FileNotFoundException
  langs:
  - csharp
  - vb
  name: FileNotFoundException(String, String)
  fullName: System.IO.FileNotFoundException.FileNotFoundException(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/FileNotFoundException.cs
    startLine: 46
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileNotFoundException" data-throw-if-not-resolved="false"></xref> class with its message string set to <em>message</em>, specifying the file name that cannot be found, and its HRESULT set to COR_E_FILENOTFOUND.
  syntax:
    content: public FileNotFoundException(string message, string fileName)
    content.vb: Public Sub New(message As String, fileName As String)
    parameters:
    - id: message
      type: System.String
      description: 'A description of the error. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. '
    - id: fileName
      type: System.String
      description: 'The full name of the file with the invalid image. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)
  commentId: M:System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)
  id: '#ctor(System.String,System.String,System.Exception)'
  parent: System.IO.FileNotFoundException
  langs:
  - csharp
  - vb
  name: FileNotFoundException(String, String, Exception)
  fullName: System.IO.FileNotFoundException.FileNotFoundException(System.String, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/FileNotFoundException.cs
    startLine: 52
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileNotFoundException" data-throw-if-not-resolved="false"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  syntax:
    content: public FileNotFoundException(string message, string fileName, Exception innerException)
    content.vb: Public Sub New(message As String, fileName As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: 'The error message that explains the reason for the exception. '
    - id: fileName
      type: System.String
      description: 'The full name of the file with the invalid image. '
    - id: innerException
      type: System.Exception
      description: 'The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not null, the current exception is raised in a catch block that handles the inner exception. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileNotFoundException.FileName
  commentId: P:System.IO.FileNotFoundException.FileName
  id: FileName
  parent: System.IO.FileNotFoundException
  langs:
  - csharp
  - vb
  name: FileName
  fullName: System.IO.FileNotFoundException.FileName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FileName
    path: src/mscorlib/src/System/IO/FileNotFoundException.cs
    startLine: 78
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: Gets the name of the file that cannot be found.
  syntax:
    content: public string FileName { get; }
    content.vb: Public ReadOnly Property FileName As String
    parameters: []
    return:
      type: System.String
      description: The name of the file, or null if no file name was passed to the constructor for this instance.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.FileNotFoundException.Message
  commentId: P:System.IO.FileNotFoundException.Message
  id: Message
  parent: System.IO.FileNotFoundException
  langs:
  - csharp
  - vb
  name: Message
  fullName: System.IO.FileNotFoundException.Message
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Message
    path: src/mscorlib/src/System/IO/FileNotFoundException.cs
    startLine: 58
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: Gets the error message that explains the reason for the exception.
  syntax:
    content: public override string Message { get; }
    content.vb: Public Overrides ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
      description: The error message.
  overridden: System.Exception.Message
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.FileNotFoundException.ToString
  commentId: M:System.IO.FileNotFoundException.ToString
  id: ToString
  parent: System.IO.FileNotFoundException
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.IO.FileNotFoundException.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/IO/FileNotFoundException.cs
    startLine: 82
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: Returns the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.
  overridden: System.Exception.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  fullName: System.Exception.Message
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
