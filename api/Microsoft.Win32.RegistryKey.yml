items:
- uid: Microsoft.Win32.RegistryKey
  commentId: T:Microsoft.Win32.RegistryKey
  id: RegistryKey
  parent: Microsoft.Win32
  children:
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.Dispose
  - Microsoft.Win32.RegistryKey.Flush
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.GetSubKeyNames
  - Microsoft.Win32.RegistryKey.GetValue(System.String)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  - Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  - Microsoft.Win32.RegistryKey.GetValueNames
  - Microsoft.Win32.RegistryKey.Handle
  - Microsoft.Win32.RegistryKey.Name
  - Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  - Microsoft.Win32.RegistryKey.SubKeyCount
  - Microsoft.Win32.RegistryKey.ToString
  - Microsoft.Win32.RegistryKey.ValueCount
  - Microsoft.Win32.RegistryKey.View
  langs:
  - csharp
  - vb
  name: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
  type: Class
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RegistryKey
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 100
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Represents a key-level node in the Windows registry. This class is a registry encapsulation.
  syntax:
    content: 'public sealed class RegistryKey : IDisposable'
    content.vb: >-
      Public NotInheritable Class RegistryKey
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Win32.RegistryKey.Handle
  commentId: P:Microsoft.Win32.RegistryKey.Handle
  id: Handle
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: Handle
  fullName: Microsoft.Win32.RegistryKey.Handle
  type: Property
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Handle
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 34
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Gets a <xref href="Microsoft.Win32.SafeHandles.SafeRegistryHandle" data-throw-if-not-resolved="false"></xref> object that represents the registry key that the current <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> object encapsulates.
  syntax:
    content: public SafeRegistryHandle Handle { get; }
    content.vb: Public ReadOnly Property Handle As SafeRegistryHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: The handle to the registry key.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The registry key is closed. Closed keys cannot be accessed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A system error occurred, such as deletion of the current key.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to read the key.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Win32.RegistryKey.Name
  commentId: P:Microsoft.Win32.RegistryKey.Name
  id: Name
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Win32.RegistryKey.Name
  type: Property
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Name
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1377
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the name of the key.
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The absolute (qualified) name of the key.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> is closed (closed keys cannot be accessed). '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Win32.RegistryKey.SubKeyCount
  commentId: P:Microsoft.Win32.RegistryKey.SubKeyCount
  id: SubKeyCount
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: SubKeyCount
  fullName: Microsoft.Win32.RegistryKey.SubKeyCount
  type: Property
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SubKeyCount
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 813
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the count of subkeys of the current key.
  syntax:
    content: public int SubKeyCount { get; }
    content.vb: Public ReadOnly Property SubKeyCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of subkeys of the current key.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have read permission for the key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being manipulated is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A system error occurred, for example the current key has been deleted.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Win32.RegistryKey.ValueCount
  commentId: P:Microsoft.Win32.RegistryKey.ValueCount
  id: ValueCount
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: ValueCount
  fullName: Microsoft.Win32.RegistryKey.ValueCount
  type: Property
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ValueCount
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 983
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the count of values in the key.
  syntax:
    content: public int ValueCount { get; }
    content.vb: Public ReadOnly Property ValueCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of name/value pairs in the key.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have read permission for the key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being manipulated is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A system error occurred, for example the current key has been deleted.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Win32.RegistryKey.View
  commentId: P:Microsoft.Win32.RegistryKey.View
  id: View
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: View
  fullName: Microsoft.Win32.RegistryKey.View
  type: Property
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: View
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 821
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: 'Gets the view that was used to create the registry key. '
  syntax:
    content: public RegistryView View { get; }
    content.vb: Public ReadOnly Property View As RegistryView
    parameters: []
    return:
      type: Microsoft.Win32.RegistryView
      description: The view that was used to create the registry key.-or-<xref href="Microsoft.Win32.RegistryView.Default" data-throw-if-not-resolved="false"></xref>, if no view was used.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  id: CreateSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: CreateSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CreateSubKey
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 281
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: 'Creates a new subkey or opens an existing subkey for write access.  '
  syntax:
    content: public RegistryKey CreateSubKey(string subkey)
    content.vb: Public Function CreateSubKey(subkey As String) As RegistryKey
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or null if the operation failed. If a zero-length string is specified for <em>subkey</em>, the current <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> object is returned.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>subkey</em> is null. "
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to create or open the registry key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> on which this method is being invoked is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> cannot be written to; for example, it was not opened as a writable key , or the user does not have the necessary access rights. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href="Microsoft.Win32.Registry.LocalMachine" data-throw-if-not-resolved="false"></xref> root.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  id: CreateSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: CreateSubKey(String, Boolean)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CreateSubKey
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 298
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a new subkey or opens an existing subkey with the specified access. Available starting in .NET Framework 2015
  syntax:
    content: public RegistryKey CreateSubKey(string subkey, bool writable)
    content.vb: Public Function CreateSubKey(subkey As String, writable As Boolean) As RegistryKey
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    - id: writable
      type: System.Boolean
      description: true to indicate the new subkey is writable; otherwise, false.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or null if the operation failed. If a zero-length string is specified for <em>subkey</em>, the current <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> object is returned.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>subkey</em> is null. "
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to create or open the registry key. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The current <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href="Microsoft.Win32.Registry.LocalMachine" data-throw-if-not-resolved="false"></xref> root.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  id: CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: CreateSubKey(String, Boolean, RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(System.String, System.Boolean, Microsoft.Win32.RegistryOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CreateSubKey
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 304
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a new subkey or opens an existing subkey with the specified access. Available starting in .NET Framework 2015
  syntax:
    content: public RegistryKey CreateSubKey(string subkey, bool writable, RegistryOptions options)
    content.vb: Public Function CreateSubKey(subkey As String, writable As Boolean, options As RegistryOptions) As RegistryKey
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    - id: writable
      type: System.Boolean
      description: true to indicate the new subkey is writable; otherwise, false.
    - id: options
      type: Microsoft.Win32.RegistryOptions
      description: The registry option to use.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or null if the operation failed. If a zero-length string is specified for <em>subkey</em>, the current <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> object is returned.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>subkey</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> does not specify a valid Option"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to create or open the registry key. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The current <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href="Microsoft.Win32.Registry.LocalMachine" data-throw-if-not-resolved="false"></xref> root.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  id: DeleteSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: DeleteSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DeleteSubKey
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 404
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: 'Deletes the specified subkey. '
  syntax:
    content: public void DeleteSubKey(string subkey)
    content.vb: Public Sub DeleteSubKey(subkey As String)
    parameters:
    - id: subkey
      type: System.String
      description: The name of the subkey to delete. This string is not case-sensitive.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The <em>subkey</em> has child subkeys '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>subkey</em> parameter does not specify a valid registry key '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>subkey</em> is null"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to delete the key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being manipulated is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  id: DeleteSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: DeleteSubKey(String, Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DeleteSubKey
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 408
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: 'Deletes the specified subkey, and specifies whether an exception is raised if the subkey is not found. '
  syntax:
    content: public void DeleteSubKey(string subkey, bool throwOnMissingSubKey)
    content.vb: Public Sub DeleteSubKey(subkey As String, throwOnMissingSubKey As Boolean)
    parameters:
    - id: subkey
      type: System.String
      description: The name of the subkey to delete. This string is not case-sensitive.
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: 'Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is true and the specified subkey does not exist, an exception is raised. If this argument is false and the specified subkey does not exist, no action is taken. '
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<em>subkey</em> has child subkeys. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>subkey</em> does not specify a valid registry key, and <em>throwOnMissingSubKey</em> is true. "
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>subkey</em> is null."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to delete the key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being manipulated is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  id: DeleteSubKeyTree(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: DeleteSubKeyTree(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DeleteSubKeyTree
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 458
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: 'Deletes a subkey and any child subkeys recursively. '
  syntax:
    content: public void DeleteSubKeyTree(string subkey)
    content.vb: Public Sub DeleteSubKeyTree(subkey As String)
    parameters:
    - id: subkey
      type: System.String
      description: The subkey to delete. This string is not case-sensitive.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>subkey</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Deletion of a root hive is attempted.-or-<em>subkey</em> does not specify a valid registry subkey. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error has occurred.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to delete the key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being manipulated is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  id: DeleteSubKeyTree(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: DeleteSubKeyTree(String, Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DeleteSubKeyTree
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 462
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: 'Deletes the specified subkey and any child subkeys recursively, and specifies whether an exception is raised if the subkey is not found. '
  syntax:
    content: public void DeleteSubKeyTree(string subkey, bool throwOnMissingSubKey)
    content.vb: Public Sub DeleteSubKeyTree(subkey As String, throwOnMissingSubKey As Boolean)
    parameters:
    - id: subkey
      type: System.String
      description: The name of the subkey to delete. This string is not case-sensitive.
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is true and the specified subkey does not exist, an exception is raised. If this argument is false and the specified subkey does not exist, no action is taken.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An attempt was made to delete the root hive of the tree.-or-<em>subkey</em> does not specify a valid registry subkey, and <em>throwOnMissingSubKey</em> is true.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>subkey</em> is null."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to delete the key.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  id: DeleteValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: DeleteValue(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DeleteValue
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 546
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Deletes the specified value from this key.
  syntax:
    content: public void DeleteValue(string name)
    content.vb: Public Sub DeleteValue(name As String)
    parameters:
    - id: name
      type: System.String
      description: 'The name of the value to delete. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>name</em> is not a valid reference to a value. "
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to delete the value. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being manipulated is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being manipulated is read-only. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  id: DeleteValue(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: DeleteValue(String, Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DeleteValue
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 550
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Deletes the specified value from this key, and specifies whether an exception is raised if the value is not found.
  syntax:
    content: public void DeleteValue(string name, bool throwOnMissingValue)
    content.vb: Public Sub DeleteValue(name As String, throwOnMissingValue As Boolean)
    parameters:
    - id: name
      type: System.String
      description: 'The name of the value to delete. '
    - id: throwOnMissingValue
      type: System.Boolean
      description: 'Indicates whether an exception should be raised if the specified value cannot be found. If this argument is true and the specified value does not exist, an exception is raised. If this argument is false and the specified value does not exist, no action is taken. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>name</em> is not a valid reference to a value and <em>throwOnMissingValue</em> is true. -or- <em>name</em> is null."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to delete the value. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being manipulated is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being manipulated is read-only. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.Dispose
  commentId: M:Microsoft.Win32.RegistryKey.Dispose
  id: Dispose
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: Microsoft.Win32.RegistryKey.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 48
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Releases all resources used by the current instance of the <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.Flush
  commentId: M:Microsoft.Win32.RegistryKey.Flush
  id: Flush
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: Microsoft.Win32.RegistryKey.Flush()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Flush
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 256
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Writes all the attributes of the specified open registry key into the registry.
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  commentId: M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: FromHandle(SafeRegistryHandle)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  type: Method
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromHandle
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 50
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a registry key from a specified handle.
  syntax:
    content: public static RegistryKey FromHandle(SafeRegistryHandle handle)
    content.vb: Public Shared Function FromHandle(handle As SafeRegistryHandle) As RegistryKey
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: The handle to the registry key.
    return:
      type: Microsoft.Win32.RegistryKey
      description: A registry key.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>handle</em> is null."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to perform this action.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  commentId: M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: FromHandle(SafeRegistryHandle, RegistryView)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle, Microsoft.Win32.RegistryView)
  type: Method
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromHandle
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 52
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: 'Creates a registry key from a specified handle and registry view setting. '
  syntax:
    content: public static RegistryKey FromHandle(SafeRegistryHandle handle, RegistryView view)
    content.vb: Public Shared Function FromHandle(handle As SafeRegistryHandle, view As RegistryView) As RegistryKey
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: The handle to the registry key.
    - id: view
      type: Microsoft.Win32.RegistryView
      description: The registry view to use.
    return:
      type: Microsoft.Win32.RegistryKey
      description: A registry key.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>view</em> is invalid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>handle</em> is null."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to perform this action.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames
  commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames
  id: GetSubKeyNames
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: GetSubKeyNames()
  fullName: Microsoft.Win32.RegistryKey.GetSubKeyNames()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetSubKeyNames
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 936
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves an array of strings that contains all the subkey names.
  syntax:
    content: public string[] GetSubKeyNames()
    content.vb: Public Function GetSubKeyNames As String()
    return:
      type: System.String[]
      description: An array of strings that contains the names of the subkeys for the current key.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to read from the key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being manipulated is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A system error occurred, for example the current key has been deleted.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String)
  id: GetValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: GetValue(String)
  fullName: Microsoft.Win32.RegistryKey.GetValue(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetValue
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1069
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the value associated with the specified name. Returns null if the name/value pair does not exist in the registry.
  syntax:
    content: public object GetValue(string name)
    content.vb: Public Function GetValue(name As String) As Object
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve. This string is not case-sensitive.
    return:
      type: System.Object
      description: The value associated with <em>name</em>, or null if <em>name</em> is not found.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to read from the registry key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that contains the specified value is closed (closed keys cannot be accessed). '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that contains the specified value has been marked for deletion. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  id: GetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: GetValue(String, Object)
  fullName: Microsoft.Win32.RegistryKey.GetValue(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetValue
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1091
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the value associated with the specified name. If the name is not found, returns the default value that you provide.
  syntax:
    content: public object GetValue(string name, object defaultValue)
    content.vb: Public Function GetValue(name As String, defaultValue As Object) As Object
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve. This string is not case-sensitive.
    - id: defaultValue
      type: System.Object
      description: 'The value to return if <em>name</em> does not exist. '
    return:
      type: System.Object
      description: The value associated with <em>name</em>, with any embedded environment variables left unexpanded, or <em>defaultValue</em> if <em>name</em> is not found.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to read from the registry key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that contains the specified value is closed (closed keys cannot be accessed). '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that contains the specified value has been marked for deletion. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  id: GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: GetValue(String, Object, RegistryValueOptions)
  fullName: Microsoft.Win32.RegistryKey.GetValue(System.String, System.Object, Microsoft.Win32.RegistryValueOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetValue
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1101
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the value associated with the specified name and retrieval options. If the name is not found, returns the default value that you provide.
  syntax:
    content: public object GetValue(string name, object defaultValue, RegistryValueOptions options)
    content.vb: Public Function GetValue(name As String, defaultValue As Object, options As RegistryValueOptions) As Object
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve. This string is not case-sensitive.
    - id: defaultValue
      type: System.Object
      description: 'The value to return if <em>name</em> does not exist. '
    - id: options
      type: Microsoft.Win32.RegistryValueOptions
      description: One of the enumeration values that specifies optional processing of the retrieved value.
    return:
      type: System.Object
      description: The value associated with <em>name</em>, processed according to the specified <em>options</em>, or <em>defaultValue</em> if <em>name</em> is not found.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to read from the registry key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that contains the specified value is closed (closed keys cannot be accessed). '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that contains the specified value has been marked for deletion. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> is not a valid <xref href=\"Microsoft.Win32.RegistryValueOptions\" data-throw-if-not-resolved=\"false\"></xref> value; for example, an invalid value is cast to <xref href=\"Microsoft.Win32.RegistryValueOptions\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  id: GetValueKind(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: GetValueKind(String)
  fullName: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetValueKind
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1334
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the registry data type of the value associated with the specified name.
  syntax:
    content: public RegistryValueKind GetValueKind(string name)
    content.vb: Public Function GetValueKind(name As String) As RegistryValueKind
    parameters:
    - id: name
      type: System.String
      description: The name of the value whose registry data type is to be retrieved. This string is not case-sensitive.
    return:
      type: Microsoft.Win32.RegistryValueKind
      description: The registry data type of the value associated with <em>name</em>.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to read from the registry key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that contains the specified value is closed (closed keys cannot be accessed). '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The subkey that contains the specified value does not exist.-or-The name/value pair specified by <em>name</em> does not exist.This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.GetValueNames
  commentId: M:Microsoft.Win32.RegistryKey.GetValueNames
  id: GetValueNames
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: GetValueNames()
  fullName: Microsoft.Win32.RegistryKey.GetValueNames()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetValueNames
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1018
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves an array of strings that contains all the value names associated with this key.
  syntax:
    content: public string[] GetValueNames()
    content.vb: Public Function GetValueNames As String()
    return:
      type: System.String[]
      description: An array of strings that contains the value names for the current key.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to read from the registry key. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref>  being manipulated is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A system error occurred; for example, the current key has been deleted.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  commentId: M:Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  id: OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: OpenBaseKey(RegistryHive, RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive, Microsoft.Win32.RegistryView)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OpenBaseKey
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 611
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Opens a new <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that represents the requested key on the local machine with the specified view.
  syntax:
    content: public static RegistryKey OpenBaseKey(RegistryHive hKey, RegistryView view)
    content.vb: Public Shared Function OpenBaseKey(hKey As RegistryHive, view As RegistryView) As RegistryKey
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: The HKEY to open.
    - id: view
      type: Microsoft.Win32.RegistryView
      description: The registry view to use.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The requested registry key.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>hKey</em> or <em>view</em> is invalid."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to perform this action.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  id: OpenSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: OpenSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OpenSubKey
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 802
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves a subkey as read-only.
  syntax:
    content: public RegistryKey OpenSubKey(string name)
    content.vb: Public Function OpenSubKey(name As String) As RegistryKey
    parameters:
    - id: name
      type: System.String
      description: 'The name or path of the subkey to open as read-only. '
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or null if the operation failed.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> is closed (closed keys cannot be accessed). '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to read the registry key. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  id: OpenSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: OpenSubKey(String, Boolean)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OpenSubKey
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 684
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: 'Retrieves a specified subkey, and specifies whether write access is to be applied to the key. '
  syntax:
    content: public RegistryKey OpenSubKey(string name, bool writable)
    content.vb: Public Function OpenSubKey(name As String, writable As Boolean) As RegistryKey
    parameters:
    - id: name
      type: System.String
      description: 'Name or path of the subkey to open. '
    - id: writable
      type: System.Boolean
      description: 'Set to true if you need write access to the key. '
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or null if the operation failed.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> is closed (closed keys cannot be accessed). '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to access the registry key in the specified mode. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  id: OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: OpenSubKey(String, RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(System.String, System.Security.AccessControl.RegistryRights)
  type: Method
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenSubKey
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 63
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves a subkey with the specified name and .Available starting in .NET Framework 2015
  syntax:
    content: public RegistryKey OpenSubKey(string name, RegistryRights rights)
    content.vb: Public Function OpenSubKey(name As String, rights As RegistryRights) As RegistryKey
    parameters:
    - id: name
      type: System.String
      description: The name or path of the subkey to create or open.
    - id: rights
      type: System.Security.AccessControl.RegistryRights
      description: The rights for the registry key.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or null if the operation failed.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> is closed (closed keys cannot be accessed). '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to access the registry key in the specified mode. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  commentId: M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  id: SetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: SetValue(String, Object)
  fullName: Microsoft.Win32.RegistryKey.SetValue(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetValue
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1395
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Sets the specified name/value pair.
  syntax:
    content: public void SetValue(string name, object value)
    content.vb: Public Sub SetValue(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
      description: 'The name of the value to store. '
    - id: value
      type: System.Object
      description: 'The data to be stored. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>value</em> is an unsupported data type. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that contains the specified value is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> is read-only, and cannot be written to; for example, the key has not been opened with write access. -or-The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to create or modify registry keys. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  commentId: M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  id: SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: SetValue(String, Object, RegistryValueKind)
  fullName: Microsoft.Win32.RegistryKey.SetValue(System.String, System.Object, Microsoft.Win32.RegistryValueKind)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetValue
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1399
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Sets the value of a name/value pair in the registry key, using the specified registry data type.
  syntax:
    content: public void SetValue(string name, object value, RegistryValueKind valueKind)
    content.vb: Public Sub SetValue(name As String, value As Object, valueKind As RegistryValueKind)
    parameters:
    - id: name
      type: System.String
      description: 'The name of the value to be stored. '
    - id: value
      type: System.Object
      description: 'The data to be stored. '
    - id: valueKind
      type: Microsoft.Win32.RegistryValueKind
      description: 'The registry data type to use when storing the data. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The type of <em>value</em> did not match the registry data type specified by <em>valueKind</em>, therefore the data could not be converted properly. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that contains the specified value is closed (closed keys cannot be accessed). '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> is read-only, and cannot be written to; for example, the key has not been opened with write access.-or-The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to create or modify registry keys. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Win32.RegistryKey.ToString
  commentId: M:Microsoft.Win32.RegistryKey.ToString
  id: ToString
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: Microsoft.Win32.RegistryKey.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs
    startLine: 1571
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves a string representation of this key.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representing the key. If the specified key is invalid (cannot be found) then null is returned.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> being accessed is closed (closed keys cannot be accessed). '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Win32
  isExternal: false
  name: Microsoft.Win32
  fullName: Microsoft.Win32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeRegistryHandle
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.RegistryView
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryView
  fullName: Microsoft.Win32.RegistryView
- uid: Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.RegistryOptions
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryOptions
  fullName: Microsoft.Win32.RegistryOptions
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: Microsoft.Win32.RegistryValueOptions
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueOptions
  fullName: Microsoft.Win32.RegistryValueOptions
- uid: Microsoft.Win32.RegistryValueKind
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueKind
  fullName: Microsoft.Win32.RegistryValueKind
- uid: Microsoft.Win32.RegistryHive
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryHive
  fullName: Microsoft.Win32.RegistryHive
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: false
  name: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
