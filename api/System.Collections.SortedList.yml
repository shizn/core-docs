items:
- uid: System.Collections.SortedList
  commentId: T:System.Collections.SortedList
  id: SortedList
  parent: System.Collections
  children:
  - System.Collections.SortedList.#ctor
  - System.Collections.SortedList.#ctor(System.Collections.IComparer)
  - System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)
  - System.Collections.SortedList.#ctor(System.Collections.IDictionary)
  - System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)
  - System.Collections.SortedList.#ctor(System.Int32)
  - System.Collections.SortedList.Add(System.Object,System.Object)
  - System.Collections.SortedList.Capacity
  - System.Collections.SortedList.Clear
  - System.Collections.SortedList.Clone
  - System.Collections.SortedList.Contains(System.Object)
  - System.Collections.SortedList.ContainsKey(System.Object)
  - System.Collections.SortedList.ContainsValue(System.Object)
  - System.Collections.SortedList.CopyTo(System.Array,System.Int32)
  - System.Collections.SortedList.Count
  - System.Collections.SortedList.GetByIndex(System.Int32)
  - System.Collections.SortedList.GetEnumerator
  - System.Collections.SortedList.GetKey(System.Int32)
  - System.Collections.SortedList.GetKeyList
  - System.Collections.SortedList.GetValueList
  - System.Collections.SortedList.IndexOfKey(System.Object)
  - System.Collections.SortedList.IndexOfValue(System.Object)
  - System.Collections.SortedList.IsFixedSize
  - System.Collections.SortedList.IsReadOnly
  - System.Collections.SortedList.IsSynchronized
  - System.Collections.SortedList.Item(System.Object)
  - System.Collections.SortedList.Keys
  - System.Collections.SortedList.Remove(System.Object)
  - System.Collections.SortedList.RemoveAt(System.Int32)
  - System.Collections.SortedList.SetByIndex(System.Int32,System.Object)
  - System.Collections.SortedList.Synchronized(System.Collections.SortedList)
  - System.Collections.SortedList.SyncRoot
  - System.Collections.SortedList.TrimToSize
  - System.Collections.SortedList.Values
  langs:
  - csharp
  - vb
  name: SortedList
  fullName: System.Collections.SortedList
  type: Class
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SortedList
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 60
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.
  syntax:
    content: 'public class SortedList : ICollection, IDictionary, IEnumerable'
    content.vb: >-
      Public Class SortedList
          Inherits ICollection
          Implements IDictionary, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Collections.SortedList.#ctor
  commentId: M:System.Collections.SortedList.#ctor
  id: '#ctor'
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: SortedList()
  fullName: System.Collections.SortedList.SortedList()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 84
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> class that is empty, has the default initial capacity, and is sorted according to the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface implemented by each key added to the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public SortedList()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.SortedList.#ctor(System.Collections.IComparer)
  commentId: M:System.Collections.SortedList.#ctor(System.Collections.IComparer)
  id: '#ctor(System.Collections.IComparer)'
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: SortedList(IComparer)
  fullName: System.Collections.SortedList.SortedList(System.Collections.IComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 212
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> class that is empty, has the default initial capacity, and is sorted according to the specified <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref> interface.
  syntax:
    content: public SortedList(IComparer comparer)
    content.vb: Public Sub New(comparer As IComparer)
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: 'The <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref> implementation to use when comparing keys.-or- null to use the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> implementation of each key. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)
  commentId: M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)
  id: '#ctor(System.Collections.IComparer,System.Int32)'
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: SortedList(IComparer, Int32)
  fullName: System.Collections.SortedList.SortedList(System.Collections.IComparer, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 213
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> class that is empty, has the specified initial capacity, and is sorted according to the specified <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref> interface.
  syntax:
    content: public SortedList(IComparer comparer, int capacity)
    content.vb: Public Sub New(comparer As IComparer, capacity As Integer)
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: 'The <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref> implementation to use when comparing keys.-or- null to use the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> implementation of each key. '
    - id: capacity
      type: System.Int32
      description: 'The initial number of elements that the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object can contain. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero. "
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: There is not enough available memory to create a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object with the specified <em>capacity</em>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.SortedList.#ctor(System.Collections.IDictionary)
  commentId: M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)
  id: '#ctor(System.Collections.IDictionary)'
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: SortedList(IDictionary)
  fullName: System.Collections.SortedList.SortedList(System.Collections.IDictionary)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 214
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface implemented by each key.
  syntax:
    content: public SortedList(IDictionary d)
    content.vb: Public Sub New(d As IDictionary)
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> implementation to copy to a new <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>d</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'One or more elements in <em>d</em> do not implement the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)
  commentId: M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)
  id: '#ctor(System.Collections.IDictionary,System.Collections.IComparer)'
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: SortedList(IDictionary, IComparer)
  fullName: System.Collections.SortedList.SortedList(System.Collections.IDictionary, System.Collections.IComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 215
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref> interface.
  syntax:
    content: public SortedList(IDictionary d, IComparer comparer)
    content.vb: Public Sub New(d As IDictionary, comparer As IComparer)
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> implementation to copy to a new <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
    - id: comparer
      type: System.Collections.IComparer
      description: 'The <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref> implementation to use when comparing keys.-or- null to use the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> implementation of each key. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>d</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>comparer</em> is null, and one or more elements in <em>d</em> do not implement the <xref href=\"System.IComparable\" data-throw-if-not-resolved=\"false\"></xref> interface. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.SortedList.#ctor(System.Int32)
  commentId: M:System.Collections.SortedList.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: SortedList(Int32)
  fullName: System.Collections.SortedList.SortedList(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 104
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> class that is empty, has the specified initial capacity, and is sorted according to the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface implemented by each key added to the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public SortedList(int initialCapacity)
    content.vb: Public Sub New(initialCapacity As Integer)
    parameters:
    - id: initialCapacity
      type: System.Int32
      description: 'The initial number of elements that the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object can contain. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>initialCapacity</em> is less than zero. "
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: There is not enough available memory to create a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object with the specified <em>initialCapacity</em>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.SortedList.Capacity
  commentId: P:System.Collections.SortedList.Capacity
  id: Capacity
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Capacity
  fullName: System.Collections.SortedList.Capacity
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Capacity
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 202
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets or sets the capacity of a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual int Capacity { get; set; }
    content.vb: Public Overridable Property Capacity As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements that the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object can contain.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value assigned is less than the current number of elements in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: There is not enough memory available on the system.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.Count
  commentId: P:System.Collections.SortedList.Count
  id: Count
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Collections.SortedList.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 243
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the number of elements contained in a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.SortedList.IsFixedSize
  commentId: P:System.Collections.SortedList.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: IsFixedSize
  fullName: System.Collections.SortedList.IsFixedSize
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsFixedSize
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 281
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object has a fixed size.
  syntax:
    content: public virtual bool IsFixedSize { get; }
    content.vb: Public Overridable ReadOnly Property IsFixedSize As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object has a fixed size; otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.SortedList.IsReadOnly
  commentId: P:System.Collections.SortedList.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Collections.SortedList.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 276
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object is read-only.
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object is read-only; otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.SortedList.IsSynchronized
  commentId: P:System.Collections.SortedList.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: IsSynchronized
  fullName: System.Collections.SortedList.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSynchronized
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 287
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether access to a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object is synchronized (thread safe).
  syntax:
    content: public virtual bool IsSynchronized { get; }
    content.vb: Public Overridable ReadOnly Property IsSynchronized As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if access to the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object is synchronized (thread safe); otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.SortedList.Item(System.Object)
  commentId: P:System.Collections.SortedList.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Item[Object]
  fullName: System.Collections.SortedList.Item[System.Object]
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 222
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets and sets the value associated with a specific key in a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual object this[object key] { get; set; }
    content.vb: Public Overridable Property Item(key As Object) As Object
    parameters:
    - id: key
      type: System.Object
      description: 'The key associated with the value to get or set. '
    return:
      type: System.Object
      description: The value associated with the <em>key</em> parameter in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object, if <em>key</em> is found; otherwise, null.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The property is set and the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object is read-only.-or- The property is set, <em>key</em> does not exist in the collection, and the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: There is not enough available memory to add the element to the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref>.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The comparer throws an exception. '
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Collections.SortedList.Item(System.Object)
  name.vb: Item(Object)
- uid: System.Collections.SortedList.Keys
  commentId: P:System.Collections.SortedList.Keys
  id: Keys
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Keys
  fullName: System.Collections.SortedList.Keys
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Keys
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 255
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the keys in a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual ICollection Keys { get; }
    content.vb: Public Overridable ReadOnly Property Keys As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> object containing the keys in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.SortedList.SyncRoot
  commentId: P:System.Collections.SortedList.SyncRoot
  id: SyncRoot
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: SyncRoot
  fullName: System.Collections.SortedList.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SyncRoot
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 293
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an object that can be used to synchronize access to a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual object SyncRoot { get; }
    content.vb: Public Overridable ReadOnly Property SyncRoot As Object
    parameters: []
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.SortedList.Values
  commentId: P:System.Collections.SortedList.Values
  id: Values
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Values
  fullName: System.Collections.SortedList.Values
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Values
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 267
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the values in a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual ICollection Values { get; }
    content.vb: Public Overridable ReadOnly Property Values As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> object containing the values in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.SortedList.Add(System.Object,System.Object)
  commentId: M:System.Collections.SortedList.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Add(Object, Object)
  fullName: System.Collections.SortedList.Add(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 226
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Adds an element with the specified key and value to a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual void Add(object key, object value)
    content.vb: Public Overridable Sub Add(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: 'The key of the element to add. '
    - id: value
      type: System.Object
      description: 'The value of the element to add. The value can be null. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'An element with the specified <em>key</em> already exists in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.-or- The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> is set to use the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface, and <em>key</em> does not implement the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: There is not enough available memory to add the element to the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref>.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The comparer throws an exception. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.Clear
  commentId: M:System.Collections.SortedList.Clear
  id: Clear
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Collections.SortedList.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 306
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes all elements from a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object is read-only.-or- The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.Clone
  commentId: M:System.Collections.SortedList.Clone
  id: Clone
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.Collections.SortedList.Clone()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 318
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Creates a shallow copy of a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual object Clone()
    content.vb: Public Overridable Function Clone As Object
    return:
      type: System.Object
      description: A shallow copy of the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.Contains(System.Object)
  commentId: M:System.Collections.SortedList.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Contains(Object)
  fullName: System.Collections.SortedList.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 229
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object contains a specific key.
  syntax:
    content: public virtual bool Contains(object key)
    content.vb: Public Overridable Function Contains(key As Object) As Boolean
    parameters:
    - id: key
      type: System.Object
      description: 'The key to locate in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object. '
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object contains an element with the specified <em>key</em>; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The comparer throws an exception. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.ContainsKey(System.Object)
  commentId: M:System.Collections.SortedList.ContainsKey(System.Object)
  id: ContainsKey(System.Object)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: ContainsKey(Object)
  fullName: System.Collections.SortedList.ContainsKey(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsKey
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 230
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object contains a specific key.
  syntax:
    content: public virtual bool ContainsKey(object key)
    content.vb: Public Overridable Function ContainsKey(key As Object) As Boolean
    parameters:
    - id: key
      type: System.Object
      description: The key to locate in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object contains an element with the specified <em>key</em>; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The comparer throws an exception. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.ContainsValue(System.Object)
  commentId: M:System.Collections.SortedList.ContainsValue(System.Object)
  id: ContainsValue(System.Object)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: ContainsValue(Object)
  fullName: System.Collections.SortedList.ContainsValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsValue
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 231
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object contains a specific value.
  syntax:
    content: public virtual bool ContainsValue(object value)
    content.vb: Public Overridable Function ContainsValue(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: 'The value to locate in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object. The value can be null. '
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object contains an element with the specified <em>value</em>; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.Collections.SortedList.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 232
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> elements to a one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> object, starting at the specified index in the array.
  syntax:
    content: public virtual void CopyTo(Array array, int arrayIndex)
    content.vb: Public Overridable Sub CopyTo(array As Array, arrayIndex As Integer)
    parameters:
    - id: array
      type: System.Array
      description: 'The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> object that is the destination of the <xref href="System.Collections.DictionaryEntry" data-throw-if-not-resolved="false"></xref> objects copied from <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing. '
    - id: arrayIndex
      type: System.Int32
      description: 'The zero-based index in <em>array</em> at which copying begins. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>array</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>arrayIndex</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>array</em> is multidimensional.-or- The number of elements in the source <xref href=\"System.Collections.SortedList\" data-throw-if-not-resolved=\"false\"></xref> object is greater than the available space from <em>arrayIndex</em> to the end of the destination <em>array</em>. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The type of the source <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the type of the destination <em>array</em>. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.GetByIndex(System.Int32)
  commentId: M:System.Collections.SortedList.GetByIndex(System.Int32)
  id: GetByIndex(System.Int32)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: GetByIndex(Int32)
  fullName: System.Collections.SortedList.GetByIndex(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetByIndex
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 406
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the value at the specified index of a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual object GetByIndex(int index)
    content.vb: Public Overridable Function GetByIndex(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based index of the value to get. '
    return:
      type: System.Object
      description: The value at the specified index of the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the range of valid indexes for the <xref href=\"System.Collections.SortedList\" data-throw-if-not-resolved=\"false\"></xref> object. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.GetEnumerator
  commentId: M:System.Collections.SortedList.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.SortedList.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 429
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an <xref href="System.Collections.IDictionaryEnumerator" data-throw-if-not-resolved="false"></xref> object that iterates through a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual IDictionaryEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IDictionaryEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
      description: An <xref href="System.Collections.IDictionaryEnumerator" data-throw-if-not-resolved="false"></xref> object for the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.GetKey(System.Int32)
  commentId: M:System.Collections.SortedList.GetKey(System.Int32)
  id: GetKey(System.Int32)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: GetKey(Int32)
  fullName: System.Collections.SortedList.GetKey(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetKey
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 436
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the key at the specified index of a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual object GetKey(int index)
    content.vb: Public Overridable Function GetKey(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based index of the key to get. '
    return:
      type: System.Object
      description: The key at the specified index of the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the range of valid indexes for the <xref href=\"System.Collections.SortedList\" data-throw-if-not-resolved=\"false\"></xref> object."
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.GetKeyList
  commentId: M:System.Collections.SortedList.GetKeyList
  id: GetKeyList
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: GetKeyList()
  fullName: System.Collections.SortedList.GetKeyList()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetKeyList
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 455
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the keys in a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual IList GetKeyList()
    content.vb: Public Overridable Function GetKeyList As IList
    return:
      type: System.Collections.IList
      description: An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> object containing the keys in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.GetValueList
  commentId: M:System.Collections.SortedList.GetValueList
  id: GetValueList
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: GetValueList()
  fullName: System.Collections.SortedList.GetValueList()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValueList
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 472
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the values in a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual IList GetValueList()
    content.vb: Public Overridable Function GetValueList As IList
    return:
      type: System.Collections.IList
      description: An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> object containing the values in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.IndexOfKey(System.Object)
  commentId: M:System.Collections.SortedList.IndexOfKey(System.Object)
  id: IndexOfKey(System.Object)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: IndexOfKey(Object)
  fullName: System.Collections.SortedList.IndexOfKey(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOfKey
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 238
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns the zero-based index of the specified key in a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual int IndexOfKey(object key)
    content.vb: Public Overridable Function IndexOfKey(key As Object) As Integer
    parameters:
    - id: key
      type: System.Object
      description: 'The key to locate in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object. '
    return:
      type: System.Int32
      description: The zero-based index of the <em>key</em> parameter, if <em>key</em> is found in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object; otherwise, -1.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The comparer throws an exception. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.IndexOfValue(System.Object)
  commentId: M:System.Collections.SortedList.IndexOfValue(System.Object)
  id: IndexOfValue(System.Object)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: IndexOfValue(Object)
  fullName: System.Collections.SortedList.IndexOfValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOfValue
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 239
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns the zero-based index of the first occurrence of the specified value in a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual int IndexOfValue(object value)
    content.vb: Public Overridable Function IndexOfValue(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The value to locate in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object. The value can be null. '
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of the <em>value</em> parameter, if <em>value</em> is found in the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object; otherwise, -1.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.Remove(System.Object)
  commentId: M:System.Collections.SortedList.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Remove(Object)
  fullName: System.Collections.SortedList.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 240
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes the element with the specified key from a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual void Remove(object key)
    content.vb: Public Overridable Sub Remove(key As Object)
    parameters:
    - id: key
      type: System.Object
      description: 'The key of the element to remove. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object is read-only.-or- The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.RemoveAt(System.Int32)
  commentId: M:System.Collections.SortedList.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  fullName: System.Collections.SortedList.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 549
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes the element at the specified index of a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual void RemoveAt(int index)
    content.vb: Public Overridable Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based index of the element to remove. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the range of valid indexes for the <xref href=\"System.Collections.SortedList\" data-throw-if-not-resolved=\"false\"></xref> object. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.SetByIndex(System.Int32,System.Object)
  commentId: M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)
  id: SetByIndex(System.Int32,System.Object)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: SetByIndex(Int32, Object)
  fullName: System.Collections.SortedList.SetByIndex(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetByIndex
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 242
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Replaces the value at a specific index in a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual void SetByIndex(int index, object value)
    content.vb: Public Overridable Sub SetByIndex(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based index at which to save <em>value</em>. '
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to save into the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object. The value can be null. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the range of valid indexes for the <xref href=\"System.Collections.SortedList\" data-throw-if-not-resolved=\"false\"></xref> object. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.SortedList.Synchronized(System.Collections.SortedList)
  commentId: M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)
  id: Synchronized(System.Collections.SortedList)
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: Synchronized(SortedList)
  fullName: System.Collections.SortedList.Synchronized(System.Collections.SortedList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronized
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 588
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns a synchronized (thread-safe) wrapper for a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public static SortedList Synchronized(SortedList list)
    content.vb: Public Shared Function Synchronized(list As SortedList) As SortedList
    parameters:
    - id: list
      type: System.Collections.SortedList
      description: 'The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object to synchronize. '
    return:
      type: System.Collections.SortedList
      description: A synchronized (thread-safe) wrapper for the <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>list</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.SortedList.TrimToSize
  commentId: M:System.Collections.SortedList.TrimToSize
  id: TrimToSize
  parent: System.Collections.SortedList
  langs:
  - csharp
  - vb
  name: TrimToSize()
  fullName: System.Collections.SortedList.TrimToSize()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TrimToSize
    path: src/System.Collections.NonGeneric/src/System/Collections/SortedList.cs
    startLine: 605
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Sets the capacity to the actual number of elements in a <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual void TrimToSize()
    content.vb: Public Overridable Sub TrimToSize
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> object is read-only.-or- The <xref href="System.Collections.SortedList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  fullName: System.Collections.IComparer
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System.Collections.SortedList
  parent: System.Collections
  isExternal: false
  name: SortedList
  fullName: System.Collections.SortedList
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.OutOfMemoryException
  isExternal: false
  name: OutOfMemoryException
  fullName: System.OutOfMemoryException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
