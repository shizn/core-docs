items:
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  commentId: T:System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  id: AsyncTaskMethodBuilder
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted``2(``0@,``1@)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start``1(``0@)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task
  langs:
  - csharp
  - vb
  name: AsyncTaskMethodBuilder
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AsyncTaskMethodBuilder
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
    startLine: 275
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Represents a builder for asynchronous methods that return a task.
  syntax:
    content: public struct AsyncTaskMethodBuilder
    content.vb: Public Structure AsyncTaskMethodBuilder
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task
  commentId: P:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task
  id: Task
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: Task
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Task
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
    startLine: 366
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Gets the task for this builder.
  syntax:
    content: public Task Task { get; }
    content.vb: Public ReadOnly Property Task As Task
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: The task for this builder.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The builder is not initialized.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted``2(``0@,``1@)
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted``2(``0@,``1@)
  id: AwaitOnCompleted``2(``0@,``1@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AwaitOnCompleted
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
    startLine: 340
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Schedules the state machine to proceed to the next action when the specified awaiter completes.
  syntax:
    content: 'public void AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine)where TAwaiter : INotifyCompletion where TStateMachine : IAsyncStateMachine'
    content.vb: Public Sub AwaitOnCompleted(Of TAwaiter As INotifyCompletion, TStateMachine As IAsyncStateMachine)(ByRef awaiter As TAwaiter, ByRef stateMachine As TStateMachine)
    parameters:
    - id: awaiter
      type: '{TAwaiter}'
      description: The awaiter.
    - id: stateMachine
      type: '{TStateMachine}'
      description: The state machine.
    typeParameters:
    - id: TAwaiter
      description: The type of the awaiter.
    - id: TStateMachine
      description: The type of the state machine.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)
  name.vb: AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)
  id: AwaitUnsafeOnCompleted``2(``0@,``1@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AwaitUnsafeOnCompleted
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
    startLine: 355
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Schedules the state machine to proceed to the next action when the specified awaiter completes. This method can be called from partially trusted code.
  syntax:
    content: 'public void AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine)where TAwaiter : ICriticalNotifyCompletion where TStateMachine : IAsyncStateMachine'
    content.vb: Public Sub AwaitUnsafeOnCompleted(Of TAwaiter As ICriticalNotifyCompletion, TStateMachine As IAsyncStateMachine)(ByRef awaiter As TAwaiter, ByRef stateMachine As TStateMachine)
    parameters:
    - id: awaiter
      type: '{TAwaiter}'
      description: The awaiter.
    - id: stateMachine
      type: '{TStateMachine}'
      description: The state machine.
    typeParameters:
    - id: TAwaiter
      description: The type of the awaiter.
    - id: TStateMachine
      description: The type of the state machine.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)
  name.vb: AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create
  id: Create
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: Create()
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Create
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
    startLine: 286
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Creates an instance of the <xref href="System.Runtime.CompilerServices.AsyncTaskMethodBuilder" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public static AsyncTaskMethodBuilder Create()
    content.vb: Public Shared Function Create As AsyncTaskMethodBuilder
    return:
      type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
      description: A new instance of the builder.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)
  id: SetException(System.Exception)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: SetException(Exception)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(System.Exception)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetException
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
    startLine: 389
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Marks the task as failed and binds the specified exception to the task.
  syntax:
    content: public void SetException(Exception exception)
    content.vb: Public Sub SetException(exception As Exception)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to bind to the task.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>exception</em> is null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The task has already completed.-or-The builder is not initialized.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult
  id: SetResult
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: SetResult()
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetResult
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
    startLine: 374
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Marks the task as successfully completed.
  syntax:
    content: public void SetResult()
    content.vb: Public Sub SetResult
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The task has already completed.-or-The builder is not initialized.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  id: SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: SetStateMachine(IAsyncStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetStateMachine
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
    startLine: 328
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Associates the builder with the specified state machine.
  syntax:
    content: public void SetStateMachine(IAsyncStateMachine stateMachine)
    content.vb: Public Sub SetStateMachine(stateMachine As IAsyncStateMachine)
    parameters:
    - id: stateMachine
      type: System.Runtime.CompilerServices.IAsyncStateMachine
      description: The state machine instance to associate with the builder.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>stateMachine</em> is null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The state machine was previously set.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start``1(``0@)
  commentId: M:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start``1(``0@)
  id: Start``1(``0@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  langs:
  - csharp
  - vb
  name: Start<TStateMachine>(ref TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<TStateMachine>(ref TStateMachine)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Start
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs
    startLine: 296
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Begins running the builder with the associated state machine.
  syntax:
    content: 'public void Start<TStateMachine>(ref TStateMachine stateMachine)where TStateMachine : IAsyncStateMachine'
    content.vb: Public Sub Start(Of TStateMachine As IAsyncStateMachine)(ByRef stateMachine As TStateMachine)
    parameters:
    - id: stateMachine
      type: '{TStateMachine}'
      description: The state machine instance, passed by reference.
    typeParameters:
    - id: TStateMachine
      description: The type of the state machine.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>stateMachine</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start(Of TStateMachine)(ByRef TStateMachine)
  name.vb: Start(Of TStateMachine)(ByRef TStateMachine)
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: '{TAwaiter}'
  isExternal: false
  name: TAwaiter
  fullName: TAwaiter
- uid: '{TStateMachine}'
  isExternal: false
  name: TStateMachine
  fullName: TStateMachine
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: AsyncTaskMethodBuilder
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.CompilerServices.IAsyncStateMachine
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: IAsyncStateMachine
  fullName: System.Runtime.CompilerServices.IAsyncStateMachine
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
