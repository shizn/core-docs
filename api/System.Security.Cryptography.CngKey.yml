items:
- uid: System.Security.Cryptography.CngKey
  commentId: T:System.Security.Cryptography.CngKey
  id: CngKey
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.CngKey.Algorithm
  - System.Security.Cryptography.CngKey.AlgorithmGroup
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  - System.Security.Cryptography.CngKey.Delete
  - System.Security.Cryptography.CngKey.Dispose
  - System.Security.Cryptography.CngKey.Exists(System.String)
  - System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKey.ExportPolicy
  - System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngKey.Handle
  - System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.IsEphemeral
  - System.Security.Cryptography.CngKey.IsMachineKey
  - System.Security.Cryptography.CngKey.KeyName
  - System.Security.Cryptography.CngKey.KeySize
  - System.Security.Cryptography.CngKey.KeyUsage
  - System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  - System.Security.Cryptography.CngKey.Open(System.String)
  - System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.CngKey.ParentWindowHandle
  - System.Security.Cryptography.CngKey.Provider
  - System.Security.Cryptography.CngKey.ProviderHandle
  - System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngKey.UIPolicy
  - System.Security.Cryptography.CngKey.UniqueName
  langs:
  - csharp
  - vb
  name: CngKey
  fullName: System.Security.Cryptography.CngKey
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.OpenHandle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CngKey
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.OpenHandle.cs
    startLine: 13
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Defines the core functionality for keys that are used with Cryptography Next Generation (CNG) objects.
  syntax:
    content: 'public sealed class CngKey : IDisposable'
    content.vb: >-
      Public NotInheritable Class CngKey
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.CngKey.Algorithm
  commentId: P:System.Security.Cryptography.CngKey.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Algorithm
  fullName: System.Security.Cryptography.CngKey.Algorithm
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Algorithm
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 27
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the algorithm that is used by the key.
  syntax:
    content: public CngAlgorithm Algorithm { get; }
    content.vb: Public ReadOnly Property Algorithm As CngAlgorithm
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the name of an encryption algorithm.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.AlgorithmGroup
  commentId: P:System.Security.Cryptography.CngKey.AlgorithmGroup
  id: AlgorithmGroup
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: AlgorithmGroup
  fullName: System.Security.Cryptography.CngKey.AlgorithmGroup
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AlgorithmGroup
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 41
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the algorithm group that is used by the key.
  syntax:
    content: public CngAlgorithmGroup AlgorithmGroup { get; }
    content.vb: Public ReadOnly Property AlgorithmGroup As CngAlgorithmGroup
    parameters: []
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object that specifies the name of an encryption algorithm group.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.ExportPolicy
  commentId: P:System.Security.Cryptography.CngKey.ExportPolicy
  id: ExportPolicy
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: ExportPolicy
  fullName: System.Security.Cryptography.CngKey.ExportPolicy
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExportPolicy
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 56
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the export policy that is used by the key.
  syntax:
    content: public CngExportPolicies ExportPolicy { get; }
    content.vb: Public ReadOnly Property ExportPolicy As CngExportPolicies
    parameters: []
    return:
      type: System.Security.Cryptography.CngExportPolicies
      description: An object that specifies the export policy for the key.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.Handle
  commentId: P:System.Security.Cryptography.CngKey.Handle
  id: Handle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Handle
  fullName: System.Security.Cryptography.CngKey.Handle
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Handle
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 73
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: 'Gets a safe handle that represents a native key (NCRYPT_KEY_HANDLE). '
  syntax:
    content: public SafeNCryptKeyHandle Handle { get; }
    content.vb: Public ReadOnly Property Handle As SafeNCryptKeyHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
      description: A safe handle that represents the key.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.IsEphemeral
  commentId: P:System.Security.Cryptography.CngKey.IsEphemeral
  id: IsEphemeral
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: IsEphemeral
  fullName: System.Security.Cryptography.CngKey.IsEphemeral
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEphemeral
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 89
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the persistence state of the key.
  syntax:
    content: public bool IsEphemeral { get; }
    content.vb: Public ReadOnly Property IsEphemeral As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: 'true if the key is ephemeral; otherwise, false. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.IsMachineKey
  commentId: P:System.Security.Cryptography.CngKey.IsMachineKey
  id: IsMachineKey
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: IsMachineKey
  fullName: System.Security.Cryptography.CngKey.IsMachineKey
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMachineKey
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 131
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the scope (machine or user) of the key.
  syntax:
    content: public bool IsMachineKey { get; }
    content.vb: Public ReadOnly Property IsMachineKey As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the key is available on a machine-wide basis; false if the key is only for the current user.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.KeyName
  commentId: P:System.Security.Cryptography.CngKey.KeyName
  id: KeyName
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: KeyName
  fullName: System.Security.Cryptography.CngKey.KeyName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeyName
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 146
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the name of the key.
  syntax:
    content: public string KeyName { get; }
    content.vb: Public ReadOnly Property KeyName As String
    parameters: []
    return:
      type: System.String
      description: The name of the key. If the key is ephemeral, the value is null.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.KeySize
  commentId: P:System.Security.Cryptography.CngKey.KeySize
  id: KeySize
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: KeySize
  fullName: System.Security.Cryptography.CngKey.KeySize
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeySize
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 161
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the key size in bits.
  syntax:
    content: public int KeySize { get; }
    content.vb: Public ReadOnly Property KeySize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The key size in bits.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.KeyUsage
  commentId: P:System.Security.Cryptography.CngKey.KeyUsage
  id: KeyUsage
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: KeyUsage
  fullName: System.Security.Cryptography.CngKey.KeyUsage
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeyUsage
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 194
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the cryptographic operations specified by the key.
  syntax:
    content: public CngKeyUsages KeyUsage { get; }
    content.vb: Public ReadOnly Property KeyUsage As CngKeyUsages
    parameters: []
    return:
      type: System.Security.Cryptography.CngKeyUsages
      description: A bitwise combination of the enumeration values that specify the usages allowed for the key.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.ParentWindowHandle
  commentId: P:System.Security.Cryptography.CngKey.ParentWindowHandle
  id: ParentWindowHandle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: ParentWindowHandle
  fullName: System.Security.Cryptography.CngKey.ParentWindowHandle
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParentWindowHandle
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 207
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets or sets the window handle (HWND) that should be used for user interface (UI) prompts caused by accessing the key.
  syntax:
    content: public IntPtr ParentWindowHandle { get; set; }
    content.vb: Public Property ParentWindowHandle As IntPtr
    parameters: []
    return:
      type: System.IntPtr
      description: The parent window handle for the key.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.Provider
  commentId: P:System.Security.Cryptography.CngKey.Provider
  id: Provider
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Provider
  fullName: System.Security.Cryptography.CngKey.Provider
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Provider
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 228
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the key storage provider (KSP) that manages the key.
  syntax:
    content: public CngProvider Provider { get; }
    content.vb: Public ReadOnly Property Provider As CngProvider
    parameters: []
    return:
      type: System.Security.Cryptography.CngProvider
      description: The KSP that manages the key.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.ProviderHandle
  commentId: P:System.Security.Cryptography.CngKey.ProviderHandle
  id: ProviderHandle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: ProviderHandle
  fullName: System.Security.Cryptography.CngKey.ProviderHandle
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProviderHandle
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 242
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a native handle (an NCRYPT_PROV_HANDLE) to the key storage provider (KSP).
  syntax:
    content: public SafeNCryptProviderHandle ProviderHandle { get; }
    content.vb: Public ReadOnly Property ProviderHandle As SafeNCryptProviderHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
      description: A handle to the KSP.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.UIPolicy
  commentId: P:System.Security.Cryptography.CngKey.UIPolicy
  id: UIPolicy
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: UIPolicy
  fullName: System.Security.Cryptography.CngKey.UIPolicy
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UIPolicy
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 253
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: 'Gets parameters that control the user interface (UI) for accessing the key.  '
  syntax:
    content: public CngUIPolicy UIPolicy { get; }
    content.vb: Public ReadOnly Property UIPolicy As CngUIPolicy
    parameters: []
    return:
      type: System.Security.Cryptography.CngUIPolicy
      description: An object that contains configuration parameters for displaying the UI.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.UniqueName
  commentId: P:System.Security.Cryptography.CngKey.UniqueName
  id: UniqueName
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: UniqueName
  fullName: System.Security.Cryptography.CngKey.UniqueName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UniqueName
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.StandardProperties.cs
    startLine: 312
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets the unique name for the key.
  syntax:
    content: public string UniqueName { get; }
    content.vb: Public ReadOnly Property UniqueName As String
    parameters: []
    return:
      type: System.String
      description: An alternate name for the key. If the key is ephemeral, the value is null.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  commentId: M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  id: Create(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Create(CngAlgorithm)
  fullName: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Create.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Create.cs
    startLine: 21
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Creates a <xref href="System.Security.Cryptography.CngKey" data-throw-if-not-resolved="false"></xref> object that can be used with the specified algorithm.
  syntax:
    content: public static CngKey Create(CngAlgorithm algorithm)
    content.vb: Public Shared Function Create(algorithm As CngAlgorithm) As CngKey
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: The algorithm that the key will be used with.
    return:
      type: System.Security.Cryptography.CngKey
      description: An ephemeral key.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>algorithm</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  commentId: M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  id: Create(System.Security.Cryptography.CngAlgorithm,System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Create(CngAlgorithm, String)
  fullName: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm, System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Create.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Create.cs
    startLine: 26
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Creates a named <xref href="System.Security.Cryptography.CngKey" data-throw-if-not-resolved="false"></xref> object that provides the specified algorithm.
  syntax:
    content: public static CngKey Create(CngAlgorithm algorithm, string keyName)
    content.vb: Public Shared Function Create(algorithm As CngAlgorithm, keyName As String) As CngKey
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: The algorithm that the key will be used with.
    - id: keyName
      type: System.String
      description: The key name. If a name is not provided, the key will not be persisted.
    return:
      type: System.Security.Cryptography.CngKey
      description: A persisted or ephemeral key that provides the specified algorithm.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>algorithm</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  commentId: M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  id: Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Create(CngAlgorithm, String, CngKeyCreationParameters)
  fullName: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm, System.String, System.Security.Cryptography.CngKeyCreationParameters)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Create.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Create.cs
    startLine: 31
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Creates a named <xref href="System.Security.Cryptography.CngKey" data-throw-if-not-resolved="false"></xref> object that provides the specified algorithm, using the supplied key creation parameters.
  syntax:
    content: public static CngKey Create(CngAlgorithm algorithm, string keyName, CngKeyCreationParameters creationParameters)
    content.vb: Public Shared Function Create(algorithm As CngAlgorithm, keyName As String, creationParameters As CngKeyCreationParameters) As CngKey
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: The algorithm that the key will be used with.
    - id: keyName
      type: System.String
      description: The key name. If a name is not provided, the key will not be persisted.
    - id: creationParameters
      type: System.Security.Cryptography.CngKeyCreationParameters
      description: An object that specifies advanced parameters for the method, including the <xref href="System.Security.Cryptography.CngProvider" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Security.Cryptography.CngKey
      description: A persisted or ephemeral key that provides the specified algorithm.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>algorithm</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Delete
  commentId: M:System.Security.Cryptography.CngKey.Delete
  id: Delete
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Delete()
  fullName: System.Security.Cryptography.CngKey.Delete()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Delete.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delete
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Delete.cs
    startLine: 18
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Removes the key that is associated with the object.
  syntax:
    content: public void Delete()
    content.vb: Public Sub Delete
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: An attempt was made to access a deleted key.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.Dispose
  commentId: M:System.Security.Cryptography.CngKey.Dispose
  id: Dispose
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Security.Cryptography.CngKey.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.cs
    startLine: 29
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Releases all resources used by the current instance of the <xref href="System.Security.Cryptography.CngKey" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.Exists(System.String)
  commentId: M:System.Security.Cryptography.CngKey.Exists(System.String)
  id: Exists(System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Exists(String)
  fullName: System.Security.Cryptography.CngKey.Exists(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Exists.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exists
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Exists.cs
    startLine: 21
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Checks to see whether a named key exists in the default key storage provider (KSP).
  syntax:
    content: public static bool Exists(string keyName)
    content.vb: Public Shared Function Exists(keyName As String) As Boolean
    parameters:
    - id: keyName
      type: System.String
      description: The key name.
    return:
      type: System.Boolean
      description: true if the named key exists in the default KSP; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>keyName</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  commentId: M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  id: Exists(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Exists(String, CngProvider)
  fullName: System.Security.Cryptography.CngKey.Exists(System.String, System.Security.Cryptography.CngProvider)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Exists.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exists
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Exists.cs
    startLine: 26
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Checks to see whether a named key exists in the specified key storage provider (KSP).
  syntax:
    content: public static bool Exists(string keyName, CngProvider provider)
    content.vb: Public Shared Function Exists(keyName As String, provider As CngProvider) As Boolean
    parameters:
    - id: keyName
      type: System.String
      description: The key name.
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: The KSP to check for the key.
    return:
      type: System.Boolean
      description: true if the named key exists in the specified provider; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>keyName</em> or <em>provider</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  commentId: M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Exists(String, CngProvider, CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Exists(System.String, System.Security.Cryptography.CngProvider, System.Security.Cryptography.CngKeyOpenOptions)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Exists.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exists
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Exists.cs
    startLine: 31
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Checks to see whether a named key exists in the specified key storage provider (KSP), according to the specified options.
  syntax:
    content: public static bool Exists(string keyName, CngProvider provider, CngKeyOpenOptions options)
    content.vb: Public Shared Function Exists(keyName As String, provider As CngProvider, options As CngKeyOpenOptions) As Boolean
    parameters:
    - id: keyName
      type: System.String
      description: The key name.
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: The KSP to search for the key.
    - id: options
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: A bitwise combination of the enumeration values that specify options for opening a key.
    return:
      type: System.Boolean
      description: true if the named key exists in the specified provider; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>keyName</em> or <em>provider</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  commentId: M:System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  id: Export(System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Export(CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Export.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Export
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Export.cs
    startLine: 18
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Exports the key material into a BLOB, in the specified format.
  syntax:
    content: public byte[] Export(CngKeyBlobFormat format)
    content.vb: Public Function Export(format As CngKeyBlobFormat) As Byte()
    parameters:
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: An object that specifies the format of the key BLOB.
    return:
      type: System.Byte[]
      description: A BLOB that contains the key material in the specified format.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>format</em> is null."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: 'All other errors. Typically, the <xref href="System.Security.Cryptography.CngKey.ExportPolicy" data-throw-if-not-resolved="false"></xref> does not allow the key to be exported. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  commentId: M:System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  id: GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: GetProperty(String, CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.GetProperty(System.String, System.Security.Cryptography.CngPropertyOptions)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Properties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperty
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Properties.cs
    startLine: 18
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Gets a property, given a name and a set of property options.
  syntax:
    content: public CngProperty GetProperty(string name, CngPropertyOptions options)
    content.vb: Public Function GetProperty(name As String, options As CngPropertyOptions) As CngProperty
    parameters:
    - id: name
      type: System.String
      description: The name of the desired property.
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: A bitwise combination of the enumeration values that specify options for the named property.
    return:
      type: System.Security.Cryptography.CngProperty
      description: An object that contains the raw value of the specified property.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  commentId: M:System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  id: HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: HasProperty(String, CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.HasProperty(System.String, System.Security.Cryptography.CngPropertyOptions)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Properties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasProperty
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Properties.cs
    startLine: 36
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Checks to see whether the specified property exists on the key.
  syntax:
    content: public bool HasProperty(string name, CngPropertyOptions options)
    content.vb: Public Function HasProperty(name As String, options As CngPropertyOptions) As Boolean
    parameters:
    - id: name
      type: System.String
      description: The property name to check.
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: A bitwise combination of the enumeration values that specify options for the named property.
    return:
      type: System.Boolean
      description: true if the specified property is found; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  commentId: M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  id: Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Import(Byte[], CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Import(System.Byte[], System.Security.Cryptography.CngKeyBlobFormat)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Import.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Import
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Import.cs
    startLine: 23
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Creates a new key by importing the specified key material into the default key storage provider (KSP) and using the specified format.
  syntax:
    content: public static CngKey Import(byte[] keyBlob, CngKeyBlobFormat format)
    content.vb: Public Shared Function Import(keyBlob As Byte(), format As CngKeyBlobFormat) As CngKey
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: An array that contains the key information.
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: An object that specifies the format of the <em>keyBlob</em> array.
    return:
      type: System.Security.Cryptography.CngKey
      description: A new key.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>keyBlob</em> or <em>format</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Security.Cryptography.CngKey.Import(System.Byte(), System.Security.Cryptography.CngKeyBlobFormat)
  name.vb: Import(Byte(), CngKeyBlobFormat)
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  commentId: M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  id: Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Import(Byte[], CngKeyBlobFormat, CngProvider)
  fullName: System.Security.Cryptography.CngKey.Import(System.Byte[], System.Security.Cryptography.CngKeyBlobFormat, System.Security.Cryptography.CngProvider)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Import.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Import
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Import.cs
    startLine: 33
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Creates a new key by importing the specified key material into the specified key storage provider (KSP), using the specified format.
  syntax:
    content: public static CngKey Import(byte[] keyBlob, CngKeyBlobFormat format, CngProvider provider)
    content.vb: Public Shared Function Import(keyBlob As Byte(), format As CngKeyBlobFormat, provider As CngProvider) As CngKey
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: An array that contains the key information.
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: An object that specifies the format of the <em>keyBlob</em> array.
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: The KSP.
    return:
      type: System.Security.Cryptography.CngKey
      description: A new key.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>keyBlob</em>, <em>format</em>, or <em>provider</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Security.Cryptography.CngKey.Import(System.Byte(), System.Security.Cryptography.CngKeyBlobFormat, System.Security.Cryptography.CngProvider)
  name.vb: Import(Byte(), CngKeyBlobFormat, CngProvider)
- uid: System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  commentId: M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  id: Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open(SafeNCryptKeyHandle, CngKeyHandleOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle, System.Security.Cryptography.CngKeyHandleOpenOptions)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.OpenHandle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.OpenHandle.cs
    startLine: 18
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Creates an instance of an <xref href="System.Security.Cryptography.CngKey" data-throw-if-not-resolved="false"></xref> object by using a handle to an existing key.
  syntax:
    content: public static CngKey Open(SafeNCryptKeyHandle keyHandle, CngKeyHandleOpenOptions keyHandleOpenOptions)
    content.vb: Public Shared Function Open(keyHandle As SafeNCryptKeyHandle, keyHandleOpenOptions As CngKeyHandleOpenOptions) As CngKey
    parameters:
    - id: keyHandle
      type: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
      description: A handle to an existing key.
    - id: keyHandleOpenOptions
      type: System.Security.Cryptography.CngKeyHandleOpenOptions
      description: One of the enumeration values that indicates whether <em>keyHandle</em> represents an ephemeral key or a named key.
    return:
      type: System.Security.Cryptography.CngKey
      description: An existing key.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>keyHandle</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>keyHandle</em> is invalid or malformed, or it is already closed. This exception is also thrown if the key is an ephemeral key that is created by the common language runtime (CLR), but the <xref href=\"System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey\" data-throw-if-not-resolved=\"false\"></xref> value is not specified."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Open(System.String)
  commentId: M:System.Security.Cryptography.CngKey.Open(System.String)
  id: Open(System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open(String)
  fullName: System.Security.Cryptography.CngKey.Open(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Open.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Open.cs
    startLine: 21
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Creates an instance of an <xref href="System.Security.Cryptography.CngKey" data-throw-if-not-resolved="false"></xref> object that represents an existing named key.
  syntax:
    content: public static CngKey Open(string keyName)
    content.vb: Public Shared Function Open(keyName As String) As CngKey
    parameters:
    - id: keyName
      type: System.String
      description: The name of the key.
    return:
      type: System.Security.Cryptography.CngKey
      description: An existing key.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>keyName</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  commentId: M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  id: Open(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open(String, CngProvider)
  fullName: System.Security.Cryptography.CngKey.Open(System.String, System.Security.Cryptography.CngProvider)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Open.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Open.cs
    startLine: 26
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Creates an instance of an <xref href="System.Security.Cryptography.CngKey" data-throw-if-not-resolved="false"></xref> object that represents an existing named key, using the specified key storage provider (KSP).
  syntax:
    content: public static CngKey Open(string keyName, CngProvider provider)
    content.vb: Public Shared Function Open(keyName As String, provider As CngProvider) As CngKey
    parameters:
    - id: keyName
      type: System.String
      description: The name of the key.
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: The KSP that contains the key.
    return:
      type: System.Security.Cryptography.CngKey
      description: An existing key.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>keyName</em> or <em>provider</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  commentId: M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open(String, CngProvider, CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(System.String, System.Security.Cryptography.CngProvider, System.Security.Cryptography.CngKeyOpenOptions)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Open.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Open.cs
    startLine: 31
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Creates an instance of an <xref href="System.Security.Cryptography.CngKey" data-throw-if-not-resolved="false"></xref> object that represents an existing named key, using the specified key storage provider (KSP) and key open options.
  syntax:
    content: public static CngKey Open(string keyName, CngProvider provider, CngKeyOpenOptions openOptions)
    content.vb: Public Shared Function Open(keyName As String, provider As CngProvider, openOptions As CngKeyOpenOptions) As CngKey
    parameters:
    - id: keyName
      type: System.String
      description: The name of the key.
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: The KSP that contains the key.
    - id: openOptions
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: A bitwise combination of the enumeration values that specify options for opening the key, such as where the key is opened from (machine or user storage) and whether to suppress UI prompting.
    return:
      type: System.Security.Cryptography.CngKey
      description: An existing key.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>keyName</em> or <em>provider</em> is null."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  commentId: M:System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  id: SetProperty(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: SetProperty(CngProperty)
  fullName: System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Properties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetProperty
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngKey.Properties.cs
    startLine: 56
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Sets a named property on the key.
  syntax:
    content: public void SetProperty(CngProperty property)
    content.vb: Public Sub SetProperty(property As CngProperty)
    parameters:
    - id: property
      type: System.Security.Cryptography.CngProperty
      description: The key property to set.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngExportPolicies
  parent: System.Security.Cryptography
  isExternal: false
  name: CngExportPolicies
  fullName: System.Security.Cryptography.CngExportPolicies
- uid: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptKeyHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngKeyUsages
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyUsages
  fullName: System.Security.Cryptography.CngKeyUsages
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptProviderHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
- uid: System.Security.Cryptography.CngUIPolicy
  parent: System.Security.Cryptography
  isExternal: false
  name: CngUIPolicy
  fullName: System.Security.Cryptography.CngUIPolicy
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.CngKeyCreationParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyCreationParameters
  fullName: System.Security.Cryptography.CngKeyCreationParameters
- uid: System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.CngKeyBlobFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyBlobFormat
  fullName: System.Security.Cryptography.CngKeyBlobFormat
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Security.Cryptography.CngKeyHandleOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyHandleOpenOptions
  fullName: System.Security.Cryptography.CngKeyHandleOpenOptions
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  isExternal: false
  name: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
