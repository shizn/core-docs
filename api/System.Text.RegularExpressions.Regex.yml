items:
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  id: Regex
  parent: System.Text.RegularExpressions
  children:
  - System.Text.RegularExpressions.Regex.#ctor
  - System.Text.RegularExpressions.Regex.#ctor(System.String)
  - System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.CacheSize
  - System.Text.RegularExpressions.Regex.CapNames
  - System.Text.RegularExpressions.Regex.Caps
  - System.Text.RegularExpressions.Regex.capsize
  - System.Text.RegularExpressions.Regex.capslist
  - System.Text.RegularExpressions.Regex.Escape(System.String)
  - System.Text.RegularExpressions.Regex.factory
  - System.Text.RegularExpressions.Regex.GetGroupNames
  - System.Text.RegularExpressions.Regex.GetGroupNumbers
  - System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)
  - System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)
  - System.Text.RegularExpressions.Regex.InfiniteMatchTimeout
  - System.Text.RegularExpressions.Regex.InitializeReferences
  - System.Text.RegularExpressions.Regex.internalMatchTimeout
  - System.Text.RegularExpressions.Regex.IsMatch(System.String)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.Match(System.String)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.Matches(System.String)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.MatchTimeout
  - System.Text.RegularExpressions.Regex.Options
  - System.Text.RegularExpressions.Regex.pattern
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.RightToLeft
  - System.Text.RegularExpressions.Regex.roptions
  - System.Text.RegularExpressions.Regex.Split(System.String)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.ToString
  - System.Text.RegularExpressions.Regex.Unescape(System.String)
  - System.Text.RegularExpressions.Regex.ValidateMatchTimeout(TimeSpan)
  langs:
  - csharp
  - vb
  name: Regex
  fullName: System.Text.RegularExpressions.Regex
  type: Class
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Regex
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 20
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Represents an immutable regular expression.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public class Regex : object'
    content.vb: >-
      Public Class Regex
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Text.RegularExpressions.Regex.InfiniteMatchTimeout
  commentId: F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout
  id: InfiniteMatchTimeout
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: InfiniteMatchTimeout
  fullName: System.Text.RegularExpressions.Regex.InfiniteMatchTimeout
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InfiniteMatchTimeout
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 39
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Specifies that a pattern-matching operation should not time out.
  syntax:
    content: public static readonly TimeSpan InfiniteMatchTimeout
    content.vb: Public Shared ReadOnly InfiniteMatchTimeout As TimeSpan
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Text.RegularExpressions.Regex.pattern
  commentId: F:System.Text.RegularExpressions.Regex.pattern
  id: pattern
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: pattern
  fullName: System.Text.RegularExpressions.Regex.pattern
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: pattern
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 22
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected string pattern
    content.vb: Protected pattern As String
    return:
      type: System.String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.Regex.factory
  commentId: F:System.Text.RegularExpressions.Regex.factory
  id: factory
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: factory
  fullName: System.Text.RegularExpressions.Regex.factory
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: factory
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 49
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected RegexRunnerFactory factory
    content.vb: Protected factory As RegexRunnerFactory
    return:
      type: System.Text.RegularExpressions.RegexRunnerFactory
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.Regex.roptions
  commentId: F:System.Text.RegularExpressions.Regex.roptions
  id: roptions
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: roptions
  fullName: System.Text.RegularExpressions.Regex.roptions
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: roptions
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 23
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected RegexOptions roptions
    content.vb: Protected roptions As RegexOptions
    return:
      type: System.Text.RegularExpressions.RegexOptions
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.Regex.internalMatchTimeout
  commentId: F:System.Text.RegularExpressions.Regex.internalMatchTimeout
  id: internalMatchTimeout
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: internalMatchTimeout
  fullName: System.Text.RegularExpressions.Regex.internalMatchTimeout
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: internalMatchTimeout
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 41
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.
  syntax:
    content: protected TimeSpan internalMatchTimeout
    content.vb: Protected internalMatchTimeout As TimeSpan
    return:
      type: TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.Regex.capsize
  commentId: F:System.Text.RegularExpressions.Regex.capsize
  id: capsize
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: capsize
  fullName: System.Text.RegularExpressions.Regex.capsize
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: capsize
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 55
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int capsize
    content.vb: Protected capsize As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.Regex.capslist
  commentId: F:System.Text.RegularExpressions.Regex.capslist
  id: capslist
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: capslist
  fullName: System.Text.RegularExpressions.Regex.capslist
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: capslist
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 54
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected string[] capslist
    content.vb: Protected capslist As String()
    return:
      type: System.String[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.Regex.Caps
  commentId: P:System.Text.RegularExpressions.Regex.Caps
  id: Caps
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Caps
  fullName: System.Text.RegularExpressions.Regex.Caps
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Caps
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 56
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: protected Collections.IDictionary Caps { get; set; }
    content.vb: Protected Property Caps As Collections.IDictionary
    parameters: []
    return:
      type: System.Collections.IDictionary
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.Regex.CapNames
  commentId: P:System.Text.RegularExpressions.Regex.CapNames
  id: CapNames
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: CapNames
  fullName: System.Text.RegularExpressions.Regex.CapNames
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CapNames
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 79
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: protected Collections.IDictionary CapNames { get; set; }
    content.vb: Protected Property CapNames As Collections.IDictionary
    parameters: []
    return:
      type: System.Collections.IDictionary
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.Regex.#ctor
  commentId: M:System.Text.RegularExpressions.Regex.#ctor
  id: '#ctor'
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Regex()
  fullName: System.Text.RegularExpressions.Regex.Regex()
  type: Constructor
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 112
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Initializes a new instance of the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected Regex()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.Regex.#ctor(System.String)
  commentId: M:System.Text.RegularExpressions.Regex.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Regex(String)
  fullName: System.Text.RegularExpressions.Regex.Regex(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 81
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Initializes a new instance of the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> class for the specified regular expression.
  syntax:
    content: public Regex(string pattern)
    content.vb: Public Sub New(pattern As String)
    parameters:
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'A regular expression parsing error occurred. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>pattern</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions)'
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Regex(String, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Regex(System.String, System.Text.RegularExpressions.RegexOptions)
  type: Constructor
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 82
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Initializes a new instance of the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> class for the specified regular expression, with options that modify the pattern.
  syntax:
    content: public Regex(string pattern, RegexOptions options)
    content.vb: Public Sub New(pattern As String, options As RegexOptions)
    parameters:
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: 'A bitwise combination of the enumeration values that modify the regular expression. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'A regular expression parsing error occurred. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>pattern</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> contains an invalid flag."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  commentId: M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)'
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Regex(String, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Regex(System.String, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 83
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Initializes a new instance of the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.
  syntax:
    content: public Regex(string pattern, RegexOptions options, TimeSpan matchTimeout)
    content.vb: Public Sub New(pattern As String, options As RegexOptions, matchTimeout As TimeSpan)
    parameters:
    - id: pattern
      type: System.String
      description: The regular expression pattern to match.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: A bitwise combination of the enumeration values that modify the regular expression.
    - id: matchTimeout
      type: System.TimeSpan
      description: A time-out interval, or <xref href="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" data-throw-if-not-resolved="false"></xref> to indicate that the method should not time out.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>pattern</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> value.-or-<em>matchTimeout</em> is negative, zero, or greater than approximately 24 days."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.CacheSize
  commentId: P:System.Text.RegularExpressions.Regex.CacheSize
  id: CacheSize
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: CacheSize
  fullName: System.Text.RegularExpressions.Regex.CacheSize
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CacheSize
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 258
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.
  syntax:
    content: public static int CacheSize { get; set; }
    content.vb: Public Shared Property CacheSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The maximum number of entries in the static cache.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value in a set operation is less than zero.
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.MatchTimeout
  commentId: P:System.Text.RegularExpressions.Regex.MatchTimeout
  id: MatchTimeout
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: MatchTimeout
  fullName: System.Text.RegularExpressions.Regex.MatchTimeout
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MatchTimeout
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 294
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Gets the time-out interval of the current instance.
  syntax:
    content: public TimeSpan MatchTimeout { get; }
    content.vb: Public ReadOnly Property MatchTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: The maximum time interval that can elapse in a pattern-matching operation before a <xref href="System.Text.RegularExpressions.RegexMatchTimeoutException" data-throw-if-not-resolved="false"></xref> is thrown, or <xref href="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" data-throw-if-not-resolved="false"></xref> if time-outs are disabled.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.RegularExpressions.Regex.Options
  commentId: P:System.Text.RegularExpressions.Regex.Options
  id: Options
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Options
  fullName: System.Text.RegularExpressions.Regex.Options
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Options
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 285
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Gets the options that were passed into the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> constructor.
  syntax:
    content: public RegexOptions Options { get; }
    content.vb: Public ReadOnly Property Options As RegexOptions
    parameters: []
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: 'One or more members of the <xref href="System.Text.RegularExpressions.RegexOptions" data-throw-if-not-resolved="false"></xref> enumeration that represent options that were passed to the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> constructor '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.RegularExpressions.Regex.RightToLeft
  commentId: P:System.Text.RegularExpressions.Regex.RightToLeft
  id: RightToLeft
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: RightToLeft
  fullName: System.Text.RegularExpressions.Regex.RightToLeft
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RightToLeft
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 302
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Gets a value that indicates whether the regular expression searches from right to left.
  syntax:
    content: public bool RightToLeft { get; }
    content.vb: Public ReadOnly Property RightToLeft As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the regular expression searches from right to left; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.RegularExpressions.Regex.InitializeReferences
  commentId: M:System.Text.RegularExpressions.Regex.InitializeReferences
  id: InitializeReferences
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: InitializeReferences()
  fullName: System.Text.RegularExpressions.Regex.InitializeReferences()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InitializeReferences
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 855
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected void InitializeReferences()
    content.vb: Protected Sub InitializeReferences
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'References have already been initialized. '
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.Regex.ValidateMatchTimeout(TimeSpan)
  commentId: M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(TimeSpan)
  id: ValidateMatchTimeout(TimeSpan)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: ValidateMatchTimeout(TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.ValidateMatchTimeout(TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidateMatchTimeout
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 217
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: protected static void ValidateMatchTimeout(TimeSpan matchTimeout)
    content.vb: Protected Shared Sub ValidateMatchTimeout(matchTimeout As TimeSpan)
    parameters:
    - id: matchTimeout
      type: TimeSpan
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: System.Text.RegularExpressions.Regex.Escape(System.String)
  commentId: M:System.Text.RegularExpressions.Regex.Escape(System.String)
  id: Escape(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Escape(String)
  fullName: System.Text.RegularExpressions.Regex.Escape(System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Escape
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 90
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $,., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.'
  syntax:
    content: public static string Escape(string str)
    content.vb: Public Shared Function Escape(str As String) As String
    parameters:
    - id: str
      type: System.String
      description: 'The input string that contains the text to convert. '
    return:
      type: System.String
      description: A string of characters with metacharacters converted to their escaped form.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>str</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.GetGroupNames
  commentId: M:System.Text.RegularExpressions.Regex.GetGroupNames
  id: GetGroupNames
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: GetGroupNames()
  fullName: System.Text.RegularExpressions.Regex.GetGroupNames()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGroupNames
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 328
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Returns an array of capturing group names for the regular expression.
  syntax:
    content: public string[] GetGroupNames()
    content.vb: Public Function GetGroupNames As String()
    return:
      type: System.String[]
      description: A string array of group names.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.GetGroupNumbers
  commentId: M:System.Text.RegularExpressions.Regex.GetGroupNumbers
  id: GetGroupNumbers
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: GetGroupNumbers()
  fullName: System.Text.RegularExpressions.Regex.GetGroupNumbers()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGroupNumbers
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 361
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Returns an array of capturing group numbers that correspond to group names in an array.
  syntax:
    content: public int[] GetGroupNumbers()
    content.vb: Public Function GetGroupNumbers As Integer()
    return:
      type: System.Int32[]
      description: An integer array of group numbers.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)
  id: GroupNameFromNumber(System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: GroupNameFromNumber(Int32)
  fullName: System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GroupNameFromNumber
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 398
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Gets the group name that corresponds to the specified group number.
  syntax:
    content: public string GroupNameFromNumber(int i)
    content.vb: Public Function GroupNameFromNumber(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: 'The group number to convert to the corresponding group name. '
    return:
      type: System.String
      description: A string that contains the group name associated with the specified group number. If there is no group name that corresponds to <em>i</em>, the method returns <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)
  commentId: M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)
  id: GroupNumberFromName(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: GroupNumberFromName(String)
  fullName: System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GroupNumberFromName
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 94
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Returns the group number that corresponds to the specified group name.
  syntax:
    content: public int GroupNumberFromName(string name)
    content.vb: Public Function GroupNumberFromName(name As String) As Integer
    parameters:
    - id: name
      type: System.String
      description: 'The group name to convert to the corresponding group number. '
    return:
      type: System.Int32
      description: The group number that corresponds to the specified group name, or -1 if <em>name</em> is not a valid group name.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String)
  commentId: M:System.Text.RegularExpressions.Regex.IsMatch(System.String)
  id: IsMatch(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: IsMatch(String)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMatch
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 95
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Indicates whether the regular expression specified in the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> constructor finds a match in a specified input string.
  syntax:
    content: public bool IsMatch(string input)
    content.vb: Public Function IsMatch(input As String) As Boolean
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    return:
      type: System.Boolean
      description: true if the regular expression finds a match; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)
  id: IsMatch(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: IsMatch(String, Int32)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMatch
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 96
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Indicates whether the regular expression specified in the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> constructor finds a match in the specified input string, beginning at the specified starting position in the string.
  syntax:
    content: public bool IsMatch(string input, int startat)
    content.vb: Public Function IsMatch(input As String, startat As Integer) As Boolean
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: startat
      type: System.Int32
      description: 'The character position at which to start the search. '
    return:
      type: System.Boolean
      description: true if the regular expression finds a match; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startat</em> is less than zero or greater than the length of <em>input</em>."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)
  commentId: M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)
  id: IsMatch(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: IsMatch(String, String)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMatch
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 97
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Indicates whether the specified regular expression finds a match in the specified input string.
  syntax:
    content: public static bool IsMatch(string input, string pattern)
    content.vb: Public Shared Function IsMatch(input As String, pattern As String) As Boolean
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    return:
      type: System.Boolean
      description: true if the regular expression finds a match; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null. "
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: IsMatch(String, String, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(System.String, System.String, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMatch
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 98
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.
  syntax:
    content: public static bool IsMatch(string input, string pattern, RegexOptions options)
    content.vb: Public Shared Function IsMatch(input As String, pattern As String, options As RegexOptions) As Boolean
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: 'A bitwise combination of the enumeration values that provide options for matching. '
    return:
      type: System.Boolean
      description: true if the regular expression finds a match; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref>  value."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  commentId: M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  id: IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: IsMatch(String, String, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(System.String, System.String, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMatch
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 99
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.
  syntax:
    content: public static bool IsMatch(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
    content.vb: Public Shared Function IsMatch(input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As Boolean
    parameters:
    - id: input
      type: System.String
      description: The string to search for a match.
    - id: pattern
      type: System.String
      description: The regular expression pattern to match.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: A bitwise combination of the enumeration values that provide options for matching.
    - id: matchTimeout
      type: System.TimeSpan
      description: A time-out interval, or <xref href="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" data-throw-if-not-resolved="false"></xref> to indicate that the method should not time out.
    return:
      type: System.Boolean
      description: true if the regular expression finds a match; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> value.-or-<em>matchTimeout</em> is negative, zero, or greater than approximately 24 days."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Match(System.String)
  commentId: M:System.Text.RegularExpressions.Regex.Match(System.String)
  id: Match(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Match(String)
  fullName: System.Text.RegularExpressions.Regex.Match(System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Match
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 100
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for the first occurrence of the regular expression specified in the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> constructor.
  syntax:
    content: public Match Match(string input)
    content.vb: Public Function Match(input As String) As Match
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    return:
      type: System.Text.RegularExpressions.Match
      description: An object that contains information about the match.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)
  id: Match(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Match(String, Int32)
  fullName: System.Text.RegularExpressions.Regex.Match(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Match
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 101
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.
  syntax:
    content: public Match Match(string input, int startat)
    content.vb: Public Function Match(input As String, startat As Integer) As Match
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: startat
      type: System.Int32
      description: 'The zero-based character position at which to start the search. '
    return:
      type: System.Text.RegularExpressions.Match
      description: An object that contains information about the match.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startat</em> is less than zero or greater than the length of <em>input</em>."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)
  id: Match(System.String,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Match(String, Int32, Int32)
  fullName: System.Text.RegularExpressions.Regex.Match(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Match
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 102
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.
  syntax:
    content: public Match Match(string input, int beginning, int length)
    content.vb: Public Function Match(input As String, beginning As Integer, length As Integer) As Match
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: beginning
      type: System.Int32
      description: 'The zero-based character position in the input string that defines the leftmost position to be searched. '
    - id: length
      type: System.Int32
      description: 'The number of characters in the substring to include in the search. '
    return:
      type: System.Text.RegularExpressions.Match
      description: An object that contains information about the match.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>beginning</em> is less than zero or greater than the length of <em>input</em>.-or-<em>length</em> is less than zero or greater than the length of <em>input</em>.-or-<em>beginning</em>+<em>length</em>– 1 identifies a position that is outside the range of <em>input</em>."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.String)
  commentId: M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)
  id: Match(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Match(String, String)
  fullName: System.Text.RegularExpressions.Regex.Match(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Match
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 103
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for the first occurrence of the specified regular expression.
  syntax:
    content: public static Match Match(string input, string pattern)
    content.vb: Public Shared Function Match(input As String, pattern As String) As Match
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    return:
      type: System.Text.RegularExpressions.Match
      description: An object that contains information about the match.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Match(String, String, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Match(System.String, System.String, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Match
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 104
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.
  syntax:
    content: public static Match Match(string input, string pattern, RegexOptions options)
    content.vb: Public Shared Function Match(input As String, pattern As String, options As RegexOptions) As Match
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: 'A bitwise combination of the enumeration values that provide options for matching. '
    return:
      type: System.Text.RegularExpressions.Match
      description: An object that contains information about the match.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid bitwise combination of <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> values."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  commentId: M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  id: Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Match(String, String, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Match(System.String, System.String, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Match
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 105
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.
  syntax:
    content: public static Match Match(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
    content.vb: Public Shared Function Match(input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As Match
    parameters:
    - id: input
      type: System.String
      description: The string to search for a match.
    - id: pattern
      type: System.String
      description: The regular expression pattern to match.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: A bitwise combination of the enumeration values that provide options for matching.
    - id: matchTimeout
      type: System.TimeSpan
      description: A time-out interval, or <xref href="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" data-throw-if-not-resolved="false"></xref> to indicate that the method should not time out.
    return:
      type: System.Text.RegularExpressions.Match
      description: An object that contains information about the match.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid bitwise combination of <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> values.-or-<em>matchTimeout</em> is negative, zero, or greater than approximately 24 days."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Matches(System.String)
  commentId: M:System.Text.RegularExpressions.Regex.Matches(System.String)
  id: Matches(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Matches(String)
  fullName: System.Text.RegularExpressions.Regex.Matches(System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Matches
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 106
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for all occurrences of a regular expression.
  syntax:
    content: public MatchCollection Matches(string input)
    content.vb: Public Function Matches(input As String) As MatchCollection
    parameters:
    - id: input
      type: System.String
      description: The string to search for a match.
    return:
      type: System.Text.RegularExpressions.MatchCollection
      description: A collection of the <xref href="System.Text.RegularExpressions.Match" data-throw-if-not-resolved="false"></xref> objects found by the search. If no matches are found, the method returns an empty collection object.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)
  id: Matches(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Matches(String, Int32)
  fullName: System.Text.RegularExpressions.Regex.Matches(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Matches
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 107
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.
  syntax:
    content: public MatchCollection Matches(string input, int startat)
    content.vb: Public Function Matches(input As String, startat As Integer) As MatchCollection
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: startat
      type: System.Int32
      description: 'The character position in the input string at which to start the search. '
    return:
      type: System.Text.RegularExpressions.MatchCollection
      description: A collection of the <xref href="System.Text.RegularExpressions.Match" data-throw-if-not-resolved="false"></xref> objects found by the search. If no matches are found, the method returns an empty collection object.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startat</em> is less than zero or greater than the length of <em>input</em>."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.String)
  commentId: M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)
  id: Matches(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Matches(String, String)
  fullName: System.Text.RegularExpressions.Regex.Matches(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Matches
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 108
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for all occurrences of a specified regular expression.
  syntax:
    content: public static MatchCollection Matches(string input, string pattern)
    content.vb: Public Shared Function Matches(input As String, pattern As String) As MatchCollection
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    return:
      type: System.Text.RegularExpressions.MatchCollection
      description: A collection of the <xref href="System.Text.RegularExpressions.Match" data-throw-if-not-resolved="false"></xref> objects found by the search. If no matches are found, the method returns an empty collection object.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Matches(String, String, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Matches(System.String, System.String, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Matches
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 109
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.
  syntax:
    content: public static MatchCollection Matches(string input, string pattern, RegexOptions options)
    content.vb: Public Shared Function Matches(input As String, pattern As String, options As RegexOptions) As MatchCollection
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: 'A bitwise combination of the enumeration values that specify options for matching. '
    return:
      type: System.Text.RegularExpressions.MatchCollection
      description: A collection of the <xref href="System.Text.RegularExpressions.Match" data-throw-if-not-resolved="false"></xref> objects found by the search. If no matches are found, the method returns an empty collection object.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid bitwise combination of <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> values."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  commentId: M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  id: Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Matches(String, String, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Matches(System.String, System.String, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Matches
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 110
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.
  syntax:
    content: public static MatchCollection Matches(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
    content.vb: Public Shared Function Matches(input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As MatchCollection
    parameters:
    - id: input
      type: System.String
      description: The string to search for a match.
    - id: pattern
      type: System.String
      description: The regular expression pattern to match.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: A bitwise combination of the enumeration values that specify options for matching.
    - id: matchTimeout
      type: System.TimeSpan
      description: A time-out interval, or <xref href="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" data-throw-if-not-resolved="false"></xref> to indicate that the method should not time out.
    return:
      type: System.Text.RegularExpressions.MatchCollection
      description: A collection of the <xref href="System.Text.RegularExpressions.Match" data-throw-if-not-resolved="false"></xref> objects found by the search. If no matches are found, the method returns an empty collection object.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid bitwise combination of <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> values.-or-<em>matchTimeout</em> is negative, zero, or greater than approximately 24 days."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
  id: Replace(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, String)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 111
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string. '
  syntax:
    content: public string Replace(string input, string replacement)
    content.vb: Public Function Replace(input As String, replacement As String) As String
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: replacement
      type: System.String
      description: 'The replacement string. '
    return:
      type: System.String
      description: 'A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>replacement</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)
  id: Replace(System.String,System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, String, Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 112
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string. '
  syntax:
    content: public string Replace(string input, string replacement, int count)
    content.vb: Public Function Replace(input As String, replacement As String, count As Integer) As String
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: replacement
      type: System.String
      description: 'The replacement string. '
    - id: count
      type: System.Int32
      description: 'The maximum number of times the replacement can occur. '
    return:
      type: System.String
      description: A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>replacement</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)
  id: Replace(System.String,System.String,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, String, Int32, Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 113
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string. '
  syntax:
    content: public string Replace(string input, string replacement, int count, int startat)
    content.vb: Public Function Replace(input As String, replacement As String, count As Integer, startat As Integer) As String
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: replacement
      type: System.String
      description: 'The replacement string. '
    - id: count
      type: System.Int32
      description: 'Maximum number of times the replacement can occur. '
    - id: startat
      type: System.Int32
      description: 'The character position in the input string where the search begins. '
    return:
      type: System.String
      description: 'A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>replacement</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startat</em> is less than zero or greater than the length of <em>input</em>."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)
  id: Replace(System.String,System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, String, String)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 114
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. '
  syntax:
    content: public static string Replace(string input, string pattern, string replacement)
    content.vb: Public Shared Function Replace(input As String, pattern As String, replacement As String) As String
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    - id: replacement
      type: System.String
      description: 'The replacement string. '
    return:
      type: System.String
      description: A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If <em>pattern</em> is not matched in the current instance, the method returns the current instance unchanged.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em>, <em>pattern</em>, or <em>replacement</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, String, String, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.String, System.String, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 115
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation. '
  syntax:
    content: public static string Replace(string input, string pattern, string replacement, RegexOptions options)
    content.vb: Public Shared Function Replace(input As String, pattern As String, replacement As String, options As RegexOptions) As String
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    - id: replacement
      type: System.String
      description: 'The replacement string. '
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: 'A bitwise combination of the enumeration values that provide options for matching. '
    return:
      type: System.String
      description: A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If <em>pattern</em> is not matched in the current instance, the method returns the current instance unchanged.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em>, <em>pattern</em>, or <em>replacement</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid bitwise combination of <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> values."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  id: Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, String, String, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.String, System.String, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 116
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.
  syntax:
    content: public static string Replace(string input, string pattern, string replacement, RegexOptions options, TimeSpan matchTimeout)
    content.vb: Public Shared Function Replace(input As String, pattern As String, replacement As String, options As RegexOptions, matchTimeout As TimeSpan) As String
    parameters:
    - id: input
      type: System.String
      description: The string to search for a match.
    - id: pattern
      type: System.String
      description: The regular expression pattern to match.
    - id: replacement
      type: System.String
      description: The replacement string.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: A bitwise combination of the enumeration values that provide options for matching.
    - id: matchTimeout
      type: System.TimeSpan
      description: A time-out interval, or <xref href="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" data-throw-if-not-resolved="false"></xref> to indicate that the method should not time out.
    return:
      type: System.String
      description: 'A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If <em>pattern</em> is not matched in the current instance, the method returns the current instance unchanged. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em>, <em>pattern</em>, or <em>replacement</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid bitwise combination of <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> values.-or-<em>matchTimeout</em> is negative, zero, or greater than approximately 24 days."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
  id: Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, String, MatchEvaluator)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.String, System.Text.RegularExpressions.MatchEvaluator)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 117
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator" data-throw-if-not-resolved="false"></xref> delegate.
  syntax:
    content: public static string Replace(string input, string pattern, MatchEvaluator evaluator)
    content.vb: Public Shared Function Replace(input As String, pattern As String, evaluator As MatchEvaluator) As String
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: A custom method that examines each match and returns either the original matched string or a replacement string.
    return:
      type: System.String
      description: 'A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If <em>pattern</em> is not matched in the current instance, the method returns the current instance unchanged. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em>, <em>pattern</em>, or <em>evaluator</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
  id: Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, String, MatchEvaluator, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.String, System.Text.RegularExpressions.MatchEvaluator, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 118
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator" data-throw-if-not-resolved="false"></xref> delegate. Specified options modify the matching operation.
  syntax:
    content: public static string Replace(string input, string pattern, MatchEvaluator evaluator, RegexOptions options)
    content.vb: Public Shared Function Replace(input As String, pattern As String, evaluator As MatchEvaluator, options As RegexOptions) As String
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: 'A custom method that examines each match and returns either the original matched string or a replacement string. '
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: 'A bitwise combination of the enumeration values that provide options for matching. '
    return:
      type: System.String
      description: A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If <em>pattern</em> is not matched in the current instance, the method returns the current instance unchanged.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em>, <em>pattern</em>, or <em>evaluator</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid bitwise combination of <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> values."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  id: Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, String, MatchEvaluator, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.String, System.Text.RegularExpressions.MatchEvaluator, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 119
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator" data-throw-if-not-resolved="false"></xref> delegate. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.
  syntax:
    content: public static string Replace(string input, string pattern, MatchEvaluator evaluator, RegexOptions options, TimeSpan matchTimeout)
    content.vb: Public Shared Function Replace(input As String, pattern As String, evaluator As MatchEvaluator, options As RegexOptions, matchTimeout As TimeSpan) As String
    parameters:
    - id: input
      type: System.String
      description: The string to search for a match.
    - id: pattern
      type: System.String
      description: The regular expression pattern to match.
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: A custom method that examines each match and returns either the original matched string or a replacement string.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: A bitwise combination of enumeration values that provide options for matching.
    - id: matchTimeout
      type: System.TimeSpan
      description: A time-out interval, or <xref href="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" data-throw-if-not-resolved="false"></xref> to indicate that the method should not time out.
    return:
      type: System.String
      description: 'A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If <em>pattern</em> is not matched in the current instance, the method returns the current instance unchanged. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em>, <em>pattern</em>, or <em>evaluator</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid bitwise combination of <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> values.-or-<em>matchTimeout</em> is negative, zero, or greater than approximately 24 days."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
  id: Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, MatchEvaluator)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.Text.RegularExpressions.MatchEvaluator)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 120
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator" data-throw-if-not-resolved="false"></xref> delegate. '
  syntax:
    content: public string Replace(string input, MatchEvaluator evaluator)
    content.vb: Public Function Replace(input As String, evaluator As MatchEvaluator) As String
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: A custom method that examines each match and returns either the original matched string or a replacement string.
    return:
      type: System.String
      description: 'A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>evaluator</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
  id: Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, MatchEvaluator, Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.Text.RegularExpressions.MatchEvaluator, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 121
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator" data-throw-if-not-resolved="false"></xref> delegate. '
  syntax:
    content: public string Replace(string input, MatchEvaluator evaluator, int count)
    content.vb: Public Function Replace(input As String, evaluator As MatchEvaluator, count As Integer) As String
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: A custom method that examines each match and returns either the original matched string or a replacement string.
    - id: count
      type: System.Int32
      description: 'The maximum number of times the replacement will occur. '
    return:
      type: System.String
      description: 'A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>evaluator</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
  id: Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Replace(String, MatchEvaluator, Int32, Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(System.String, System.Text.RegularExpressions.MatchEvaluator, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replace
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 122
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator" data-throw-if-not-resolved="false"></xref> delegate. '
  syntax:
    content: public string Replace(string input, MatchEvaluator evaluator, int count, int startat)
    content.vb: Public Function Replace(input As String, evaluator As MatchEvaluator, count As Integer, startat As Integer) As String
    parameters:
    - id: input
      type: System.String
      description: 'The string to search for a match. '
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: A custom method that examines each match and returns either the original matched string or a replacement string.
    - id: count
      type: System.Int32
      description: 'The maximum number of times the replacement will occur. '
    - id: startat
      type: System.Int32
      description: 'The character position in the input string where the search begins. '
    return:
      type: System.String
      description: 'A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>evaluator</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startat</em> is less than zero or greater than the length of <em>input</em>."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Split(System.String)
  commentId: M:System.Text.RegularExpressions.Regex.Split(System.String)
  id: Split(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Split(String)
  fullName: System.Text.RegularExpressions.Regex.Split(System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Split
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 123
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> constructor.
  syntax:
    content: public string[] Split(string input)
    content.vb: Public Function Split(input As String) As String()
    parameters:
    - id: input
      type: System.String
      description: 'The string to split. '
    return:
      type: System.String[]
      description: An array of strings.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)
  id: Split(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Split(String, Int32)
  fullName: System.Text.RegularExpressions.Regex.Split(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Split
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 124
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> constructor.
  syntax:
    content: public string[] Split(string input, int count)
    content.vb: Public Function Split(input As String, count As Integer) As String()
    parameters:
    - id: input
      type: System.String
      description: 'The string to be split. '
    - id: count
      type: System.Int32
      description: 'The maximum number of times the split can occur. '
    return:
      type: System.String[]
      description: An array of strings.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)
  commentId: M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)
  id: Split(System.String,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Split(String, Int32, Int32)
  fullName: System.Text.RegularExpressions.Regex.Split(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Split
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 125
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> constructor. The search for the regular expression pattern starts at a specified character position in the input string.
  syntax:
    content: public string[] Split(string input, int count, int startat)
    content.vb: Public Function Split(input As String, count As Integer, startat As Integer) As String()
    parameters:
    - id: input
      type: System.String
      description: 'The string to be split. '
    - id: count
      type: System.Int32
      description: 'The maximum number of times the split can occur. '
    - id: startat
      type: System.Int32
      description: 'The character position in the input string where the search will begin. '
    return:
      type: System.String[]
      description: An array of strings.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startat</em> is less than zero or greater than the length of <em>input</em>."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.String)
  commentId: M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)
  id: Split(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Split(String, String)
  fullName: System.Text.RegularExpressions.Regex.Split(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Split
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 126
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Splits an input string into an array of substrings at the positions defined by a regular expression pattern.
  syntax:
    content: public static string[] Split(string input, string pattern)
    content.vb: Public Shared Function Split(input As String, pattern As String) As String()
    parameters:
    - id: input
      type: System.String
      description: 'The string to split. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    return:
      type: System.String[]
      description: An array of strings.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Split(String, String, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Split(System.String, System.String, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Split
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 127
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.
  syntax:
    content: public static string[] Split(string input, string pattern, RegexOptions options)
    content.vb: Public Shared Function Split(input As String, pattern As String, options As RegexOptions) As String()
    parameters:
    - id: input
      type: System.String
      description: 'The string to split. '
    - id: pattern
      type: System.String
      description: 'The regular expression pattern to match. '
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: 'A bitwise combination of the enumeration values that provide options for matching. '
    return:
      type: System.String[]
      description: An array of strings.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid bitwise combination of <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> values."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  commentId: M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  id: Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Split(String, String, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Split(System.String, System.String, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Split
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 128
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.
  syntax:
    content: public static string[] Split(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
    content.vb: Public Shared Function Split(input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As String()
    parameters:
    - id: input
      type: System.String
      description: The string to split.
    - id: pattern
      type: System.String
      description: The regular expression pattern to match.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: A bitwise combination of the enumeration values that provide options for matching.
    - id: matchTimeout
      type: System.TimeSpan
      description: A time-out interval, or <xref href="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" data-throw-if-not-resolved="false"></xref> to indicate that the method should not time out.
    return:
      type: System.String[]
      description: A string array.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A regular expression parsing error occurred.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> or <em>pattern</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>options</em> is not a valid bitwise combination of <xref href=\"System.Text.RegularExpressions.RegexOptions\" data-throw-if-not-resolved=\"false\"></xref> values.-or-<em>matchTimeout</em> is negative, zero, or greater than approximately 24 days."
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: A time-out occurred. For more information about time-outs, see the Remarks section.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.RegularExpressions.Regex.ToString
  commentId: M:System.Text.RegularExpressions.Regex.ToString
  id: ToString
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Text.RegularExpressions.Regex.ToString()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 313
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Returns the regular expression pattern that was passed into the Regex constructor.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The <em>pattern</em> parameter that was passed into the Regex constructor.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.RegularExpressions.Regex.Unescape(System.String)
  commentId: M:System.Text.RegularExpressions.Regex.Unescape(System.String)
  id: Unescape(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  - vb
  name: Unescape(String)
  fullName: System.Text.RegularExpressions.Regex.Unescape(System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Unescape
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 130
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Converts any escaped characters in the input string.
  syntax:
    content: public static string Unescape(string str)
    content.vb: Public Shared Function Unescape(str As String) As String
    parameters:
    - id: str
      type: System.String
      description: 'The input string containing the text to convert. '
    return:
      type: System.String
      description: A string of characters with any escaped characters converted to their unescaped form.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>str</em> includes an unrecognized escape sequence."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>str</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Text.RegularExpressions
  isExternal: false
  name: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Text.RegularExpressions.RegexRunnerFactory
  parent: System.Text.RegularExpressions
  isExternal: false
  name: RegexRunnerFactory
  fullName: System.Text.RegularExpressions.RegexRunnerFactory
- uid: System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: false
  name: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  fullName: TimeSpan
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32[]
  isExternal: false
  name: Int32[]
  fullName: System.Int32[]
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: ()
    fullName: ()
- uid: System.Text.RegularExpressions.Match
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Match
  fullName: System.Text.RegularExpressions.Match
- uid: System.Text.RegularExpressions.MatchCollection
  parent: System.Text.RegularExpressions
  isExternal: false
  name: MatchCollection
  fullName: System.Text.RegularExpressions.MatchCollection
- uid: System.Text.RegularExpressions.MatchEvaluator
  parent: System.Text.RegularExpressions
  isExternal: false
  name: MatchEvaluator
  fullName: System.Text.RegularExpressions.MatchEvaluator
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Text.RegularExpressions.RegexMatchTimeoutException
  isExternal: false
  name: RegexMatchTimeoutException
  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException
