items:
- uid: System.Reflection.Emit.StackBehaviour
  commentId: T:System.Reflection.Emit.StackBehaviour
  id: StackBehaviour
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.StackBehaviour.Pop0
  - System.Reflection.Emit.StackBehaviour.Pop1
  - System.Reflection.Emit.StackBehaviour.Pop1_pop1
  - System.Reflection.Emit.StackBehaviour.Popi
  - System.Reflection.Emit.StackBehaviour.Popi_pop1
  - System.Reflection.Emit.StackBehaviour.Popi_popi
  - System.Reflection.Emit.StackBehaviour.Popi_popi_popi
  - System.Reflection.Emit.StackBehaviour.Popi_popi8
  - System.Reflection.Emit.StackBehaviour.Popi_popr4
  - System.Reflection.Emit.StackBehaviour.Popi_popr8
  - System.Reflection.Emit.StackBehaviour.Popref
  - System.Reflection.Emit.StackBehaviour.Popref_pop1
  - System.Reflection.Emit.StackBehaviour.Popref_popi
  - System.Reflection.Emit.StackBehaviour.Popref_popi_pop1
  - System.Reflection.Emit.StackBehaviour.Popref_popi_popi
  - System.Reflection.Emit.StackBehaviour.Popref_popi_popi8
  - System.Reflection.Emit.StackBehaviour.Popref_popi_popr4
  - System.Reflection.Emit.StackBehaviour.Popref_popi_popr8
  - System.Reflection.Emit.StackBehaviour.Popref_popi_popref
  - System.Reflection.Emit.StackBehaviour.Push0
  - System.Reflection.Emit.StackBehaviour.Push1
  - System.Reflection.Emit.StackBehaviour.Push1_push1
  - System.Reflection.Emit.StackBehaviour.Pushi
  - System.Reflection.Emit.StackBehaviour.Pushi8
  - System.Reflection.Emit.StackBehaviour.Pushr4
  - System.Reflection.Emit.StackBehaviour.Pushr8
  - System.Reflection.Emit.StackBehaviour.Pushref
  - System.Reflection.Emit.StackBehaviour.Varpop
  - System.Reflection.Emit.StackBehaviour.Varpush
  langs:
  - csharp
  - vb
  name: StackBehaviour
  fullName: System.Reflection.Emit.StackBehaviour
  type: Enum
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StackBehaviour
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 18
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Describes how values are pushed onto a stack or popped off a stack.
  syntax:
    content: 'public enum StackBehaviour : int'
    content.vb: Public Enum StackBehaviour As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Reflection.Emit.StackBehaviour.Pop0
  commentId: F:System.Reflection.Emit.StackBehaviour.Pop0
  id: Pop0
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Pop0
  fullName: System.Reflection.Emit.StackBehaviour.Pop0
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Pop0
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 23
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: No values are popped off the stack.
  syntax:
    content: Pop0 = null
    content.vb: Pop0 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Pop1
  commentId: F:System.Reflection.Emit.StackBehaviour.Pop1
  id: Pop1
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Pop1
  fullName: System.Reflection.Emit.StackBehaviour.Pop1
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Pop1
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 24
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops one value off the stack.
  syntax:
    content: Pop1 = null
    content.vb: Pop1 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Pop1_pop1
  commentId: F:System.Reflection.Emit.StackBehaviour.Pop1_pop1
  id: Pop1_pop1
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Pop1_pop1
  fullName: System.Reflection.Emit.StackBehaviour.Pop1_pop1
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Pop1_pop1
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 25
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops 1 value off the stack for the first operand, and 1 value of the stack for the second operand.
  syntax:
    content: Pop1_pop1 = null
    content.vb: Pop1_pop1 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popi
  commentId: F:System.Reflection.Emit.StackBehaviour.Popi
  id: Popi
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popi
  fullName: System.Reflection.Emit.StackBehaviour.Popi
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popi
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 26
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a 32-bit integer off the stack.
  syntax:
    content: Popi = null
    content.vb: Popi = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popi_pop1
  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_pop1
  id: Popi_pop1
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popi_pop1
  fullName: System.Reflection.Emit.StackBehaviour.Popi_pop1
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popi_pop1
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 27
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a 32-bit integer off the stack for the first operand, and a value off the stack for the second operand.
  syntax:
    content: Popi_pop1 = null
    content.vb: Popi_pop1 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popi_popi
  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_popi
  id: Popi_popi
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popi_popi
  fullName: System.Reflection.Emit.StackBehaviour.Popi_popi
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popi_popi
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 28
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a 32-bit integer off the stack for the first operand, and a 32-bit integer off the stack for the second operand.
  syntax:
    content: Popi_popi = null
    content.vb: Popi_popi = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popi_popi_popi
  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_popi_popi
  id: Popi_popi_popi
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popi_popi_popi
  fullName: System.Reflection.Emit.StackBehaviour.Popi_popi_popi
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popi_popi_popi
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 30
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a 32-bit integer off the stack for the first operand, a 32-bit integer off the stack for the second operand, and a 32-bit integer off the stack for the third operand.
  syntax:
    content: Popi_popi_popi = null
    content.vb: Popi_popi_popi = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popi_popi8
  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_popi8
  id: Popi_popi8
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popi_popi8
  fullName: System.Reflection.Emit.StackBehaviour.Popi_popi8
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popi_popi8
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 29
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a 32-bit integer off the stack for the first operand, and a 64-bit integer off the stack for the second operand.
  syntax:
    content: Popi_popi8 = null
    content.vb: Popi_popi8 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popi_popr4
  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_popr4
  id: Popi_popr4
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popi_popr4
  fullName: System.Reflection.Emit.StackBehaviour.Popi_popr4
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popi_popr4
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 31
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a 32-bit integer off the stack for the first operand, and a 32-bit floating point number off the stack for the second operand.
  syntax:
    content: Popi_popr4 = null
    content.vb: Popi_popr4 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popi_popr8
  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_popr8
  id: Popi_popr8
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popi_popr8
  fullName: System.Reflection.Emit.StackBehaviour.Popi_popr8
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popi_popr8
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 32
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a 32-bit integer off the stack for the first operand, and a 64-bit floating point number off the stack for the second operand.
  syntax:
    content: Popi_popr8 = null
    content.vb: Popi_popr8 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popref
  commentId: F:System.Reflection.Emit.StackBehaviour.Popref
  id: Popref
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popref
  fullName: System.Reflection.Emit.StackBehaviour.Popref
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popref
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 33
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a reference off the stack.
  syntax:
    content: Popref = null
    content.vb: Popref = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popref_pop1
  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_pop1
  id: Popref_pop1
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popref_pop1
  fullName: System.Reflection.Emit.StackBehaviour.Popref_pop1
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popref_pop1
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 34
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a reference off the stack for the first operand, and a value off the stack for the second operand.
  syntax:
    content: Popref_pop1 = null
    content.vb: Popref_pop1 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popref_popi
  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi
  id: Popref_popi
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popref_popi
  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popref_popi
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 35
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a reference off the stack for the first operand, and a 32-bit integer off the stack for the second operand.
  syntax:
    content: Popref_popi = null
    content.vb: Popref_popi = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_pop1
  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_pop1
  id: Popref_popi_pop1
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popref_popi_pop1
  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_pop1
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popref_popi_pop1
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 51
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 32-bit integer off the stack for the third operand.
  syntax:
    content: Popref_popi_pop1 = null
    content.vb: Popref_popi_pop1 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_popi
  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi
  id: Popref_popi_popi
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popref_popi_popi
  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_popi
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popref_popi_popi
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 36
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a value off the stack for the third operand.
  syntax:
    content: Popref_popi_popi = null
    content.vb: Popref_popi_popi = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_popi8
  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi8
  id: Popref_popi_popi8
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popref_popi_popi8
  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_popi8
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popref_popi_popi8
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 37
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 64-bit integer off the stack for the third operand.
  syntax:
    content: Popref_popi_popi8 = null
    content.vb: Popref_popi_popi8 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_popr4
  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr4
  id: Popref_popi_popr4
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popref_popi_popr4
  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_popr4
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popref_popi_popr4
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 38
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 32-bit integer off the stack for the third operand.
  syntax:
    content: Popref_popi_popr4 = null
    content.vb: Popref_popi_popr4 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_popr8
  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr8
  id: Popref_popi_popr8
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popref_popi_popr8
  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_popr8
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popref_popi_popr8
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 39
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 64-bit floating point number off the stack for the third operand.
  syntax:
    content: Popref_popi_popr8 = null
    content.vb: Popref_popi_popr8 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_popref
  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_popref
  id: Popref_popi_popref
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Popref_popi_popref
  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_popref
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Popref_popi_popref
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 40
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a reference off the stack for the third operand.
  syntax:
    content: Popref_popi_popref = null
    content.vb: Popref_popi_popref = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Push0
  commentId: F:System.Reflection.Emit.StackBehaviour.Push0
  id: Push0
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Push0
  fullName: System.Reflection.Emit.StackBehaviour.Push0
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Push0
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 41
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: No values are pushed onto the stack.
  syntax:
    content: Push0 = null
    content.vb: Push0 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Push1
  commentId: F:System.Reflection.Emit.StackBehaviour.Push1
  id: Push1
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Push1
  fullName: System.Reflection.Emit.StackBehaviour.Push1
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Push1
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 42
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pushes one value onto the stack.
  syntax:
    content: Push1 = null
    content.vb: Push1 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Push1_push1
  commentId: F:System.Reflection.Emit.StackBehaviour.Push1_push1
  id: Push1_push1
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Push1_push1
  fullName: System.Reflection.Emit.StackBehaviour.Push1_push1
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Push1_push1
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 43
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pushes 1 value onto the stack for the first operand, and 1 value onto the stack for the second operand.
  syntax:
    content: Push1_push1 = null
    content.vb: Push1_push1 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Pushi
  commentId: F:System.Reflection.Emit.StackBehaviour.Pushi
  id: Pushi
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Pushi
  fullName: System.Reflection.Emit.StackBehaviour.Pushi
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Pushi
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 44
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pushes a 32-bit integer onto the stack.
  syntax:
    content: Pushi = null
    content.vb: Pushi = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Pushi8
  commentId: F:System.Reflection.Emit.StackBehaviour.Pushi8
  id: Pushi8
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Pushi8
  fullName: System.Reflection.Emit.StackBehaviour.Pushi8
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Pushi8
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 45
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pushes a 64-bit integer onto the stack.
  syntax:
    content: Pushi8 = null
    content.vb: Pushi8 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Pushr4
  commentId: F:System.Reflection.Emit.StackBehaviour.Pushr4
  id: Pushr4
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Pushr4
  fullName: System.Reflection.Emit.StackBehaviour.Pushr4
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Pushr4
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 46
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pushes a 32-bit floating point number onto the stack.
  syntax:
    content: Pushr4 = null
    content.vb: Pushr4 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Pushr8
  commentId: F:System.Reflection.Emit.StackBehaviour.Pushr8
  id: Pushr8
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Pushr8
  fullName: System.Reflection.Emit.StackBehaviour.Pushr8
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Pushr8
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 47
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pushes a 64-bit floating point number onto the stack.
  syntax:
    content: Pushr8 = null
    content.vb: Pushr8 = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Pushref
  commentId: F:System.Reflection.Emit.StackBehaviour.Pushref
  id: Pushref
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Pushref
  fullName: System.Reflection.Emit.StackBehaviour.Pushref
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Pushref
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 48
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pushes a reference onto the stack.
  syntax:
    content: Pushref = null
    content.vb: Pushref = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Varpop
  commentId: F:System.Reflection.Emit.StackBehaviour.Varpop
  id: Varpop
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Varpop
  fullName: System.Reflection.Emit.StackBehaviour.Varpop
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Varpop
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 49
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pops a variable off the stack.
  syntax:
    content: Varpop = null
    content.vb: Varpop = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.StackBehaviour.Varpush
  commentId: F:System.Reflection.Emit.StackBehaviour.Varpush
  id: Varpush
  parent: System.Reflection.Emit.StackBehaviour
  langs:
  - csharp
  - vb
  name: Varpush
  fullName: System.Reflection.Emit.StackBehaviour.Varpush
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Varpush
    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs
    startLine: 50
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: Pushes a variable onto the stack.
  syntax:
    content: Varpush = null
    content.vb: Varpush = Nothing
    return:
      type: System.Reflection.Emit.StackBehaviour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Reflection.Emit.StackBehaviour
  parent: System.Reflection.Emit
  isExternal: false
  name: StackBehaviour
  fullName: System.Reflection.Emit.StackBehaviour
