items:
- uid: System.Diagnostics.TraceListener
  commentId: T:System.Diagnostics.TraceListener
  id: TraceListener
  parent: System.Diagnostics
  children:
  - System.Diagnostics.TraceListener.#ctor
  - System.Diagnostics.TraceListener.#ctor(System.String)
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.Flush
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  langs:
  - csharp
  - vb
  name: TraceListener
  fullName: System.Diagnostics.TraceListener
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceListener
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 16
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Provides the abstract base class for the listeners who monitor trace and debug output.
  syntax:
    content: 'public abstract class TraceListener : IDisposable'
    content.vb: >-
      Public MustInherit Class TraceListener
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Diagnostics.TraceListener.#ctor
  commentId: M:System.Diagnostics.TraceListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: TraceListener()
  fullName: System.Diagnostics.TraceListener.TraceListener()
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 29
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Initializes a new instance of the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected TraceListener()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Diagnostics.TraceListener.#ctor(System.String)
  commentId: M:System.Diagnostics.TraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: TraceListener(String)
  fullName: System.Diagnostics.TraceListener.TraceListener(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 37
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Initializes a new instance of the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> class using the specified name as the listener.
  syntax:
    content: protected TraceListener(string name)
    content.vb: Protected Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: 'The name of the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Diagnostics.TraceListener.Filter
  commentId: P:System.Diagnostics.TraceListener.Filter
  id: Filter
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Filter
  fullName: System.Diagnostics.TraceListener.Filter
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Filter
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 114
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Gets and sets the trace filter for the trace listener.
  syntax:
    content: public TraceFilter Filter { get; set; }
    content.vb: Public Property Filter As TraceFilter
    parameters: []
    return:
      type: System.Diagnostics.TraceFilter
      description: An object derived from the <xref href="System.Diagnostics.TraceFilter" data-throw-if-not-resolved="false"></xref> base class.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListener.IndentLevel
  commentId: P:System.Diagnostics.TraceListener.IndentLevel
  id: IndentLevel
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: IndentLevel
  fullName: System.Diagnostics.TraceListener.IndentLevel
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndentLevel
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 83
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Gets or sets the indent level.
  syntax:
    content: public int IndentLevel { get; set; }
    content.vb: Public Property IndentLevel As Integer
    parameters: []
    return:
      type: System.Int32
      description: The indent level. The default is zero.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListener.IndentSize
  commentId: P:System.Diagnostics.TraceListener.IndentSize
  id: IndentSize
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: IndentSize
  fullName: System.Diagnostics.TraceListener.IndentSize
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndentSize
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 99
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Gets or sets the number of spaces in an indent.
  syntax:
    content: public int IndentSize { get; set; }
    content.vb: Public Property IndentSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of spaces in an indent. The default is four spaces.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Set operation failed because the value is less than zero.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListener.IsThreadSafe
  commentId: P:System.Diagnostics.TraceListener.IsThreadSafe
  id: IsThreadSafe
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: IsThreadSafe
  fullName: System.Diagnostics.TraceListener.IsThreadSafe
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsThreadSafe
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 52
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: 'Gets a value indicating whether the trace listener is thread safe. '
  syntax:
    content: public virtual bool IsThreadSafe { get; }
    content.vb: Public Overridable ReadOnly Property IsThreadSafe As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the trace listener is thread safe; otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Diagnostics.TraceListener.Name
  commentId: P:System.Diagnostics.TraceListener.Name
  id: Name
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Diagnostics.TraceListener.Name
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 45
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Gets or sets a name for this <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual string Name { get; set; }
    content.vb: Public Overridable Property Name As String
    parameters: []
    return:
      type: System.String
      description: A name for this <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref>. The default is an empty string ("").
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.NeedIndent
  commentId: P:System.Diagnostics.TraceListener.NeedIndent
  id: NeedIndent
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: NeedIndent
  fullName: System.Diagnostics.TraceListener.NeedIndent
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NeedIndent
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 130
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Gets or sets a value indicating whether to indent the output.
  syntax:
    content: protected bool NeedIndent { get; set; }
    content.vb: Protected Property NeedIndent As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the output should be indented; otherwise, false.
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: System.Diagnostics.TraceListener.TraceOutputOptions
  commentId: P:System.Diagnostics.TraceListener.TraceOutputOptions
  id: TraceOutputOptions
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: TraceOutputOptions
  fullName: System.Diagnostics.TraceListener.TraceOutputOptions
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceOutputOptions
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 143
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Gets or sets the trace output options.
  syntax:
    content: public TraceOptions TraceOutputOptions { get; set; }
    content.vb: Public Property TraceOutputOptions As TraceOptions
    parameters: []
    return:
      type: System.Diagnostics.TraceOptions
      description: 'A bitwise combination of the enumeration values. The default is <xref href="System.Diagnostics.TraceOptions.None" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Set operation failed because the value is invalid.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListener.Dispose
  commentId: M:System.Diagnostics.TraceListener.Dispose
  id: Dispose
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Diagnostics.TraceListener.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 59
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Releases all resources used by the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceListener.Dispose(System.Boolean)
  commentId: M:System.Diagnostics.TraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Diagnostics.TraceListener.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 67
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Releases the unmanaged resources used by the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: 'true to release both managed and unmanaged resources; false to release only unmanaged resources. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Diagnostics.TraceListener.Fail(System.String)
  commentId: M:System.Diagnostics.TraceListener.Fail(System.String)
  id: Fail(System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Fail(String)
  fullName: System.Diagnostics.TraceListener.Fail(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fail
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 160
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Emits an error message to the listener you create when you implement the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public virtual void Fail(string message)
    content.vb: Public Overridable Sub Fail(message As String)
    parameters:
    - id: message
      type: System.String
      description: 'A message to emit. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)
  commentId: M:System.Diagnostics.TraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Fail(String, String)
  fullName: System.Diagnostics.TraceListener.Fail(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fail
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 168
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Emits an error message and a detailed error message to the listener you create when you implement the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public virtual void Fail(string message, string detailMessage)
    content.vb: Public Overridable Sub Fail(message As String, detailMessage As String)
    parameters:
    - id: message
      type: System.String
      description: 'A message to emit. '
    - id: detailMessage
      type: System.String
      description: 'A detailed message to emit. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.Flush
  commentId: M:System.Diagnostics.TraceListener.Flush
  id: Flush
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: System.Diagnostics.TraceListener.Flush()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 75
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: When overridden in a derived class, flushes the output buffer.
  syntax:
    content: public virtual void Flush()
    content.vb: Public Overridable Sub Flush
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  commentId: M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  fullName: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceData
    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
    startLine: 184
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes trace information, a data object and event information to the listener specific output.
  syntax:
    content: public virtual void TraceData(TraceEventCache eventCache, string source, TraceEventType eventType, int id, object data)
    content.vb: Public Overridable Sub TraceData(eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: A <xref href="System.Diagnostics.TraceEventCache" data-throw-if-not-resolved="false"></xref> object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name used to identify the output, typically the name of the application that generated the trace event.
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: One of the <xref href="System.Diagnostics.TraceEventType" data-throw-if-not-resolved="false"></xref> values specifying the type of event that has caused the trace.
    - id: id
      type: System.Int32
      description: A numeric identifier for the event.
    - id: data
      type: System.Object
      description: The trace data to emit.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  commentId: M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  fullName: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceData
    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
    startLine: 185
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes trace information, an array of data objects and event information to the listener specific output.
  syntax:
    content: public virtual void TraceData(TraceEventCache eventCache, string source, TraceEventType eventType, int id, params object[] data)
    content.vb: Public Overridable Sub TraceData(eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: A <xref href="System.Diagnostics.TraceEventCache" data-throw-if-not-resolved="false"></xref> object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name used to identify the output, typically the name of the application that generated the trace event.
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: One of the <xref href="System.Diagnostics.TraceEventType" data-throw-if-not-resolved="false"></xref> values specifying the type of event that has caused the trace.
    - id: id
      type: System.Int32
      description: A numeric identifier for the event.
    - id: data
      type: System.Object[]
      description: An array of objects to emit as data.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.Object())
  name.vb: TraceData(TraceEventCache, String, TraceEventType, Int32, Object())
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  commentId: M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32)
  fullName: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceEvent
    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
    startLine: 186
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes trace and event information to the listener specific output.
  syntax:
    content: public virtual void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id)
    content.vb: Public Overridable Sub TraceEvent(eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: A <xref href="System.Diagnostics.TraceEventCache" data-throw-if-not-resolved="false"></xref> object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name used to identify the output, typically the name of the application that generated the trace event.
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: One of the <xref href="System.Diagnostics.TraceEventType" data-throw-if-not-resolved="false"></xref> values specifying the type of event that has caused the trace.
    - id: id
      type: System.Int32
      description: A numeric identifier for the event.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  commentId: M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  fullName: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceEvent
    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
    startLine: 187
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes trace information, a message, and event information to the listener specific output.
  syntax:
    content: public virtual void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id, string message)
    content.vb: Public Overridable Sub TraceEvent(eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: A <xref href="System.Diagnostics.TraceEventCache" data-throw-if-not-resolved="false"></xref> object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name used to identify the output, typically the name of the application that generated the trace event.
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: One of the <xref href="System.Diagnostics.TraceEventType" data-throw-if-not-resolved="false"></xref> values specifying the type of event that has caused the trace.
    - id: id
      type: System.Int32
      description: A numeric identifier for the event.
    - id: message
      type: System.String
      description: A message to write.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  commentId: M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  fullName: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceEvent
    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
    startLine: 188
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes trace information, a formatted array of objects and event information to the listener specific output.
  syntax:
    content: public virtual void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id, string format, params object[] args)
    content.vb: Public Overridable Sub TraceEvent(eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: A <xref href="System.Diagnostics.TraceEventCache" data-throw-if-not-resolved="false"></xref> object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name used to identify the output, typically the name of the application that generated the trace event.
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: One of the <xref href="System.Diagnostics.TraceEventType" data-throw-if-not-resolved="false"></xref> values specifying the type of event that has caused the trace.
    - id: id
      type: System.Int32
      description: A numeric identifier for the event.
    - id: format
      type: System.String
      description: A format string that contains zero or more format items, which correspond to objects in the <em>args</em> array.
    - id: args
      type: System.Object[]
      description: An object array containing zero or more objects to format.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String, System.Object())
  name.vb: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object())
- uid: System.Diagnostics.TraceListener.Write(System.Object)
  commentId: M:System.Diagnostics.TraceListener.Write(System.Object)
  id: Write(System.Object)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Write(Object)
  fullName: System.Diagnostics.TraceListener.Write(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 193
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes the value of the object's <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref> method to the listener you create when you implement the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public virtual void Write(object o)
    content.vb: Public Overridable Sub Write(o As Object)
    parameters:
    - id: o
      type: System.Object
      description: 'An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> whose fully qualified class name you want to write. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)
  commentId: M:System.Diagnostics.TraceListener.Write(System.Object,System.String)
  id: Write(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Write(Object, String)
  fullName: System.Diagnostics.TraceListener.Write(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 223
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes a category name and the value of the object's <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref> method to the listener you create when you implement the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public virtual void Write(object o, string category)
    content.vb: Public Overridable Sub Write(o As Object, category As String)
    parameters:
    - id: o
      type: System.Object
      description: 'An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> whose fully qualified class name you want to write. '
    - id: category
      type: System.String
      description: 'A category name used to organize the output. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.Write(System.String)
  commentId: M:System.Diagnostics.TraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Write(String)
  fullName: System.Diagnostics.TraceListener.Write(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 187
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: When overridden in a derived class, writes the specified message to the listener you create in the derived class.
  syntax:
    content: public abstract void Write(string message)
    content.vb: Public MustOverride Sub Write(message As String)
    parameters:
    - id: message
      type: System.String
      description: 'A message to write. '
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)
  commentId: M:System.Diagnostics.TraceListener.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: Write(String, String)
  fullName: System.Diagnostics.TraceListener.Write(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 207
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes a category name and a message to the listener you create when you implement the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public virtual void Write(string message, string category)
    content.vb: Public Overridable Sub Write(message As String, category As String)
    parameters:
    - id: message
      type: System.String
      description: 'A message to write. '
    - id: category
      type: System.String
      description: 'A category name used to organize the output. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.WriteIndent
  commentId: M:System.Diagnostics.TraceListener.WriteIndent
  id: WriteIndent
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: WriteIndent()
  fullName: System.Diagnostics.TraceListener.WriteIndent()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIndent
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 239
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes the indent to the listener you create when you implement this class, and resets the <xref href="System.Diagnostics.TraceListener.NeedIndent" data-throw-if-not-resolved="false"></xref> property to false.
  syntax:
    content: protected virtual void WriteIndent()
    content.vb: Protected Overridable Sub WriteIndent
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)
  commentId: M:System.Diagnostics.TraceListener.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: WriteLine(Object)
  fullName: System.Diagnostics.TraceListener.WriteLine(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 268
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes the value of the object's <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref> method to the listener you create when you implement the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> class, followed by a line terminator.
  syntax:
    content: public virtual void WriteLine(object o)
    content.vb: Public Overridable Sub WriteLine(o As Object)
    parameters:
    - id: o
      type: System.Object
      description: 'An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> whose fully qualified class name you want to write. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  commentId: M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  id: WriteLine(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: WriteLine(Object, String)
  fullName: System.Diagnostics.TraceListener.WriteLine(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 298
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes a category name and the value of the object's <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref> method to the listener you create when you implement the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> class, followed by a line terminator.
  syntax:
    content: public virtual void WriteLine(object o, string category)
    content.vb: Public Overridable Sub WriteLine(o As Object, category As String)
    parameters:
    - id: o
      type: System.Object
      description: 'An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> whose fully qualified class name you want to write. '
    - id: category
      type: System.String
      description: 'A category name used to organize the output. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.TraceListener.WriteLine(System.String)
  commentId: M:System.Diagnostics.TraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: WriteLine(String)
  fullName: System.Diagnostics.TraceListener.WriteLine(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 261
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.
  syntax:
    content: public abstract void WriteLine(string message)
    content.vb: Public MustOverride Sub WriteLine(message As String)
    parameters:
    - id: message
      type: System.String
      description: 'A message to write. '
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  commentId: M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  id: WriteLine(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  - vb
  name: WriteLine(String, String)
  fullName: System.Diagnostics.TraceListener.WriteLine(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 281
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: Writes a category name and a message to the listener you create when you implement the <xref href="System.Diagnostics.TraceListener" data-throw-if-not-resolved="false"></xref> class, followed by a line terminator.
  syntax:
    content: public virtual void WriteLine(string message, string category)
    content.vb: Public Overridable Sub WriteLine(message As String, category As String)
    parameters:
    - id: message
      type: System.String
      description: 'A message to write. '
    - id: category
      type: System.String
      description: 'A category name used to organize the output. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Diagnostics.TraceFilter
  parent: System.Diagnostics
  isExternal: false
  name: TraceFilter
  fullName: System.Diagnostics.TraceFilter
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceOptions
  parent: System.Diagnostics
  isExternal: false
  name: TraceOptions
  fullName: System.Diagnostics.TraceOptions
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
