items:
- uid: System.Collections.Stack
  commentId: T:System.Collections.Stack
  id: Stack
  parent: System.Collections
  children:
  - System.Collections.Stack.#ctor
  - System.Collections.Stack.#ctor(System.Collections.ICollection)
  - System.Collections.Stack.#ctor(System.Int32)
  - System.Collections.Stack.Clear
  - System.Collections.Stack.Clone
  - System.Collections.Stack.Contains(System.Object)
  - System.Collections.Stack.CopyTo(System.Array,System.Int32)
  - System.Collections.Stack.Count
  - System.Collections.Stack.GetEnumerator
  - System.Collections.Stack.IsSynchronized
  - System.Collections.Stack.Peek
  - System.Collections.Stack.Pop
  - System.Collections.Stack.Push(System.Object)
  - System.Collections.Stack.Synchronized(System.Collections.Stack)
  - System.Collections.Stack.SyncRoot
  - System.Collections.Stack.ToArray
  langs:
  - csharp
  - vb
  name: Stack
  fullName: System.Collections.Stack
  type: Class
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Stack
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 22
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Represents a simple last-in-first-out (LIFO) non-generic collection of objects.
  syntax:
    content: 'public class Stack : ICollection, IEnumerable'
    content.vb: >-
      Public Class Stack
          Inherits ICollection
          Implements IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Collections.Stack.#ctor
  commentId: M:System.Collections.Stack.#ctor
  id: '#ctor'
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Stack()
  fullName: System.Collections.Stack.Stack()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 34
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> class that is empty and has the default initial capacity.
  syntax:
    content: public Stack()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Stack.#ctor(System.Collections.ICollection)
  commentId: M:System.Collections.Stack.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Stack(ICollection)
  fullName: System.Collections.Stack.Stack(System.Collections.ICollection)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 250
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.
  syntax:
    content: public Stack(ICollection col)
    content.vb: Public Sub New(col As ICollection)
    parameters:
    - id: col
      type: System.Collections.ICollection
      description: 'The <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> to copy elements from. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>col</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Stack.#ctor(System.Int32)
  commentId: M:System.Collections.Stack.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Stack(Int32)
  fullName: System.Collections.Stack.Stack(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 43
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.
  syntax:
    content: public Stack(int initialCapacity)
    content.vb: Public Sub New(initialCapacity As Integer)
    parameters:
    - id: initialCapacity
      type: System.Int32
      description: 'The initial number of elements that the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> can contain. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>initialCapacity</em> is less than zero. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Stack.Count
  commentId: P:System.Collections.Stack.Count
  id: Count
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Collections.Stack.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 68
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the number of elements contained in the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Stack.IsSynchronized
  commentId: P:System.Collections.Stack.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: IsSynchronized
  fullName: System.Collections.Stack.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSynchronized
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 77
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether access to the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> is synchronized (thread safe).
  syntax:
    content: public virtual bool IsSynchronized { get; }
    content.vb: Public Overridable ReadOnly Property IsSynchronized As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true, if access to the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> is synchronized (thread safe); otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Stack.SyncRoot
  commentId: P:System.Collections.Stack.SyncRoot
  id: SyncRoot
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: SyncRoot
  fullName: System.Collections.Stack.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SyncRoot
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 82
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an object that can be used to synchronize access to the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object SyncRoot { get; }
    content.vb: Public Overridable ReadOnly Property SyncRoot As Object
    parameters: []
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that can be used to synchronize access to the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Stack.Clear
  commentId: M:System.Collections.Stack.Clear
  id: Clear
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Collections.Stack.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 95
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes all objects from the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Stack.Clone
  commentId: M:System.Collections.Stack.Clone
  id: Clone
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.Collections.Stack.Clone()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 102
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Creates a shallow copy of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object Clone()
    content.vb: Public Overridable Function Clone As Object
    return:
      type: System.Object
      description: A shallow copy of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Stack.Contains(System.Object)
  commentId: M:System.Collections.Stack.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Contains(Object)
  fullName: System.Collections.Stack.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 257
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether an element is in the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual bool Contains(object obj)
    content.vb: Public Overridable Function Contains(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate in the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    return:
      type: System.Boolean
      description: true, if <em>obj</em> is found in the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Stack.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Stack.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.Collections.Stack.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 258
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> to an existing one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at the specified array index.
  syntax:
    content: public virtual void CopyTo(Array array, int index)
    content.vb: Public Overridable Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
      description: 'The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing. '
    - id: index
      type: System.Int32
      description: 'The zero-based index in <em>array</em> at which copying begins. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>array</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>array</em> is multidimensional.-or- The number of elements in the source <xref href=\"System.Collections.Stack\" data-throw-if-not-resolved=\"false\"></xref> is greater than the available space from <em>index</em> to the end of the destination <em>array</em>. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The type of the source <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the type of the destination <em>array</em>. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Stack.GetEnumerator
  commentId: M:System.Collections.Stack.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.Stack.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 166
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> for the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> for the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Stack.Peek
  commentId: M:System.Collections.Stack.Peek
  id: Peek
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Peek()
  fullName: System.Collections.Stack.Peek()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Peek
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 174
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns the object at the top of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> without removing it.
  syntax:
    content: public virtual object Peek()
    content.vb: Public Overridable Function Peek As Object
    return:
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> at the top of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> is empty. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Stack.Pop
  commentId: M:System.Collections.Stack.Pop
  id: Pop
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Pop()
  fullName: System.Collections.Stack.Pop()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Pop
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 184
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes and returns the object at the top of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object Pop()
    content.vb: Public Overridable Function Pop As Object
    return:
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> removed from the top of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> is empty. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Stack.Push(System.Object)
  commentId: M:System.Collections.Stack.Push(System.Object)
  id: Push(System.Object)
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Push(Object)
  fullName: System.Collections.Stack.Push(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Push
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 262
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Inserts an object at the top of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Push(object obj)
    content.vb: Public Overridable Sub Push(obj As Object)
    parameters:
    - id: obj
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to push onto the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>. The value can be null. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Stack.Synchronized(System.Collections.Stack)
  commentId: M:System.Collections.Stack.Synchronized(System.Collections.Stack)
  id: Synchronized(System.Collections.Stack)
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: Synchronized(Stack)
  fullName: System.Collections.Stack.Synchronized(System.Collections.Stack)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronized
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 213
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns a synchronized (thread safe) wrapper for the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static Stack Synchronized(Stack stack)
    content.vb: Public Shared Function Synchronized(stack As Stack) As Stack
    parameters:
    - id: stack
      type: System.Collections.Stack
      description: 'The <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> to synchronize. '
    return:
      type: System.Collections.Stack
      description: A synchronized wrapper around the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>stack</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Stack.ToArray
  commentId: M:System.Collections.Stack.ToArray
  id: ToArray
  parent: System.Collections.Stack
  langs:
  - csharp
  - vb
  name: ToArray()
  fullName: System.Collections.Stack.ToArray()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToArray
    path: src/System.Collections.NonGeneric/src/System/Collections/Stack.cs
    startLine: 224
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref> to a new array.
  syntax:
    content: public virtual object[] ToArray()
    content.vb: Public Overridable Function ToArray As Object()
    return:
      type: System.Object[]
      description: A new array containing copies of the elements of the <xref href="System.Collections.Stack" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Stack
  parent: System.Collections
  isExternal: false
  name: Stack
  fullName: System.Collections.Stack
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
