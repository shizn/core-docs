items:
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  id: IEqualityComparer`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  - System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  langs:
  - csharp
  - vb
  name: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IEqualityComparer
    path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs
    startLine: 12
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: Defines methods to support the comparison of objects for equality.
  syntax:
    content: public interface IEqualityComparer<in T>
    content.vb: Public Interface IEqualityComparer(Of In T)
    typeParameters:
    - id: T
      description: The type of objects to compare.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  id: Equals(`0,`0)
  parent: System.Collections.Generic.IEqualityComparer`1
  langs:
  - csharp
  - vb
  name: Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs
    startLine: 14
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: Determines whether the specified objects are equal.
  syntax:
    content: bool Equals(T x, T y)
    content.vb: Function Equals(x As T, y As T) As Boolean
    parameters:
    - id: x
      type: '{T}'
      description: The first object of type <em>T</em> to compare.
    - id: y
      type: '{T}'
      description: The second object of type <em>T</em> to compare.
    return:
      type: System.Boolean
      description: true if the specified objects are equal; otherwise, false.
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  id: GetHashCode(`0)
  parent: System.Collections.Generic.IEqualityComparer`1
  langs:
  - csharp
  - vb
  name: GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs
    startLine: 15
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: Returns a hash code for the specified object.
  syntax:
    content: int GetHashCode(T obj)
    content.vb: Function GetHashCode(obj As T) As Integer
    parameters:
    - id: obj
      type: '{T}'
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> for which a hash code is to be returned.
    return:
      type: System.Int32
      description: A hash code for the specified object.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The type of <em>obj</em> is a reference type and <em>obj</em> is null.
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
