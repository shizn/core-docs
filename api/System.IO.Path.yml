items:
- uid: System.IO.Path
  commentId: T:System.IO.Path
  id: Path
  parent: System.IO
  children:
  - System.IO.Path.AltDirectorySeparatorChar
  - System.IO.Path.ChangeExtension(System.String,System.String)
  - System.IO.Path.Combine(System.String,System.String)
  - System.IO.Path.Combine(System.String,System.String,System.String)
  - System.IO.Path.Combine(System.String[])
  - System.IO.Path.DirectorySeparatorChar
  - System.IO.Path.GetDirectoryName(System.String)
  - System.IO.Path.GetExtension(System.String)
  - System.IO.Path.GetFileName(System.String)
  - System.IO.Path.GetFileNameWithoutExtension(System.String)
  - System.IO.Path.GetFullPath(System.String)
  - System.IO.Path.GetInvalidFileNameChars
  - System.IO.Path.GetInvalidPathChars
  - System.IO.Path.GetPathRoot(System.String)
  - System.IO.Path.GetRandomFileName
  - System.IO.Path.GetTempFileName
  - System.IO.Path.GetTempPath
  - System.IO.Path.HasExtension(System.String)
  - System.IO.Path.IsPathRooted(System.String)
  - System.IO.Path.PathSeparator
  - System.IO.Path.VolumeSeparatorChar
  langs:
  - csharp
  - vb
  name: Path
  fullName: System.IO.Path
  type: Class
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.Win32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Path
    path: src/System.Runtime.Extensions/src/System/IO/Path.Win32.cs
    startLine: 8
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Performs operations on <xref href="System.String" data-throw-if-not-resolved="false"></xref> instances that contain file or directory path information. These operations are performed in a cross-platform manner.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public class Path : object'
    content.vb: >-
      Public Class Path
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.Path.AltDirectorySeparatorChar
  commentId: F:System.IO.Path.AltDirectorySeparatorChar
  id: AltDirectorySeparatorChar
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: AltDirectorySeparatorChar
  fullName: System.IO.Path.AltDirectorySeparatorChar
  type: Field
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AltDirectorySeparatorChar
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 18
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Provides a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.
  syntax:
    content: public static readonly char AltDirectorySeparatorChar
    content.vb: Public Shared ReadOnly AltDirectorySeparatorChar As Char
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IO.Path.DirectorySeparatorChar
  commentId: F:System.IO.Path.DirectorySeparatorChar
  id: DirectorySeparatorChar
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: DirectorySeparatorChar
  fullName: System.IO.Path.DirectorySeparatorChar
  type: Field
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DirectorySeparatorChar
    path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
    startLine: 11
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Provides a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.
  syntax:
    content: public static readonly char DirectorySeparatorChar
    content.vb: Public Shared ReadOnly DirectorySeparatorChar As Char
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IO.Path.PathSeparator
  commentId: F:System.IO.Path.PathSeparator
  id: PathSeparator
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: PathSeparator
  fullName: System.IO.Path.PathSeparator
  type: Field
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PathSeparator
    path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
    startLine: 13
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: A platform-specific separator character used to separate path strings in environment variables.
  syntax:
    content: public static readonly char PathSeparator
    content.vb: Public Shared ReadOnly PathSeparator As Char
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IO.Path.VolumeSeparatorChar
  commentId: F:System.IO.Path.VolumeSeparatorChar
  id: VolumeSeparatorChar
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: VolumeSeparatorChar
  fullName: System.IO.Path.VolumeSeparatorChar
  type: Field
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VolumeSeparatorChar
    path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
    startLine: 12
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Provides a platform-specific volume separator character.
  syntax:
    content: public static readonly char VolumeSeparatorChar
    content.vb: Public Shared ReadOnly VolumeSeparatorChar As Char
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IO.Path.ChangeExtension(System.String,System.String)
  commentId: M:System.IO.Path.ChangeExtension(System.String,System.String)
  id: ChangeExtension(System.String,System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: ChangeExtension(String, String)
  fullName: System.IO.Path.ChangeExtension(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChangeExtension
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 31
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Changes the extension of a path string.
  syntax:
    content: public static string ChangeExtension(string path, string extension)
    content.vb: Public Shared Function ChangeExtension(path As String, extension As String) As String
    parameters:
    - id: path
      type: System.String
      description: 'The path information to modify. The path cannot contain any of the characters defined in <xref href="System.IO.Path.GetInvalidPathChars" data-throw-if-not-resolved="false"></xref>. '
    - id: extension
      type: System.String
      description: 'The new extension (with or without a leading period). Specify null to remove an existing extension from <em>path</em>. '
    return:
      type: System.String
      description: The modified path information.On Windows-based desktop platforms, if <em>path</em> is null or an empty string (""), the path information is returned unmodified. If <em>extension</em> is null, the returned string contains the specified path with its extension removed. If <em>path</em> has no extension, and <em>extension</em> is not null, the returned path string contains <em>extension</em> appended to the end of <em>path</em>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>path</em> contains one or more of the invalid characters defined in <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.Combine(System.String,System.String)
  commentId: M:System.IO.Path.Combine(System.String,System.String)
  id: Combine(System.String,System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: Combine(String, String)
  fullName: System.IO.Path.Combine(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Combine
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 191
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Combines two strings into a path.
  syntax:
    content: public static string Combine(string path1, string path2)
    content.vb: Public Shared Function Combine(path1 As String, path2 As String) As String
    parameters:
    - id: path1
      type: System.String
      description: 'The first path to combine. '
    - id: path2
      type: System.String
      description: 'The second path to combine. '
    return:
      type: System.String
      description: The combined paths. If one of the specified paths is a zero-length string, this method returns the other path. If <em>path2</em> contains an absolute path, this method returns <em>path2</em>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>path1</em> or <em>path2</em> contains one or more of the invalid characters defined in <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>path1</em> or <em>path2</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.Combine(System.String,System.String,System.String)
  commentId: M:System.IO.Path.Combine(System.String,System.String,System.String)
  id: Combine(System.String,System.String,System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: Combine(String, String, String)
  fullName: System.IO.Path.Combine(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Combine
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 203
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Combines three strings into a path.
  syntax:
    content: public static string Combine(string path1, string path2, string path3)
    content.vb: Public Shared Function Combine(path1 As String, path2 As String, path3 As String) As String
    parameters:
    - id: path1
      type: System.String
      description: 'The first path to combine. '
    - id: path2
      type: System.String
      description: 'The second path to combine. '
    - id: path3
      type: System.String
      description: The third path to combine.
    return:
      type: System.String
      description: The combined paths.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>path1</em>, <em>path2</em>, or <em>path3</em> contains one or more of the invalid characters defined in <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>path1</em>, <em>path2</em>, or <em>path3</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.Combine(System.String[])
  commentId: M:System.IO.Path.Combine(System.String[])
  id: Combine(System.String[])
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: Combine(String[])
  fullName: System.IO.Path.Combine(System.String[])
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Combine
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 216
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Combines an array of strings into a path.
  syntax:
    content: public static string Combine(params string[] paths)
    content.vb: Public Shared Function Combine(ParamArray paths As String()) As String
    parameters:
    - id: paths
      type: System.String[]
      description: An array of parts of the path.
    return:
      type: System.String
      description: The combined paths.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'One of the strings in the array contains one or more of the invalid characters defined in <xref href="System.IO.Path.GetInvalidPathChars" data-throw-if-not-resolved="false"></xref>. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'One of the strings in the array is null. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IO.Path.Combine(System.String())
  name.vb: Combine(String())
- uid: System.IO.Path.GetDirectoryName(System.String)
  commentId: M:System.IO.Path.GetDirectoryName(System.String)
  id: GetDirectoryName(System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetDirectoryName(String)
  fullName: System.IO.Path.GetDirectoryName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDirectoryName
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 67
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Returns the directory information for the specified path string.
  syntax:
    content: public static string GetDirectoryName(string path)
    content.vb: Public Shared Function GetDirectoryName(path As String) As String
    parameters:
    - id: path
      type: System.String
      description: 'The path of a file or directory. '
    return:
      type: System.String
      description: Directory information for <em>path</em>, or null if <em>path</em> denotes a root directory or is null. Returns <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> if <em>path</em> does not contain directory information.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>path</em> parameter contains invalid characters, is empty, or contains only white spaces. '
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <xref href="System.IO.IOException" data-throw-if-not-resolved="false"></xref>, instead.The <em>path</em> parameter is longer than the system-defined maximum length.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetExtension(System.String)
  commentId: M:System.IO.Path.GetExtension(System.String)
  id: GetExtension(System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetExtension(String)
  fullName: System.IO.Path.GetExtension(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetExtension
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 99
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Returns the extension of the specified path string.
  syntax:
    content: public static string GetExtension(string path)
    content.vb: Public Shared Function GetExtension(path As String) As String
    parameters:
    - id: path
      type: System.String
      description: 'The path string from which to get the extension. '
    return:
      type: System.String
      description: The extension of the specified path (including the period "."), or null, or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>. If <em>path</em> is null, <xref href="System.IO.Path.GetExtension(System.String)" data-throw-if-not-resolved="false"></xref> returns null. If <em>path</em> does not have extension information, <xref href="System.IO.Path.GetExtension(System.String)" data-throw-if-not-resolved="false"></xref> returns <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>path</em> contains one or more of the invalid characters defined in <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.  "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetFileName(System.String)
  commentId: M:System.IO.Path.GetFileName(System.String)
  id: GetFileName(System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetFileName(String)
  fullName: System.IO.Path.GetFileName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFileName
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 126
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Returns the file name and extension of the specified path string.
  syntax:
    content: public static string GetFileName(string path)
    content.vb: Public Shared Function GetFileName(path As String) As String
    parameters:
    - id: path
      type: System.String
      description: 'The path string from which to obtain the file name and extension. '
    return:
      type: System.String
      description: The characters after the last directory character in <em>path</em>. If the last character of <em>path</em> is a directory or volume separator character, this method returns <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>. If <em>path</em> is null, this method returns null.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>path</em> contains one or more of the invalid characters defined in <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetFileNameWithoutExtension(System.String)
  commentId: M:System.IO.Path.GetFileNameWithoutExtension(System.String)
  id: GetFileNameWithoutExtension(System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetFileNameWithoutExtension(String)
  fullName: System.IO.Path.GetFileNameWithoutExtension(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFileNameWithoutExtension
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 137
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Returns the file name of the specified path string without the extension.
  syntax:
    content: public static string GetFileNameWithoutExtension(string path)
    content.vb: Public Shared Function GetFileNameWithoutExtension(path As String) As String
    parameters:
    - id: path
      type: System.String
      description: 'The path of the file. '
    return:
      type: System.String
      description: The string returned by <xref href="System.IO.Path.GetFileName(System.String)" data-throw-if-not-resolved="false"></xref>, minus the last period (.) and all characters following it.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>path</em> contains one or more of the invalid characters defined in <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetFullPath(System.String)
  commentId: M:System.IO.Path.GetFullPath(System.String)
  id: GetFullPath(System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetFullPath(String)
  fullName: System.IO.Path.GetFullPath(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFullPath
    path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
    startLine: 32
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Returns the absolute path for the specified path string.
  syntax:
    content: public static string GetFullPath(string path)
    content.vb: Public Shared Function GetFullPath(path As String) As String
    parameters:
    - id: path
      type: System.String
      description: 'The file or directory for which to obtain absolute path information. '
    return:
      type: System.String
      description: The fully qualified location of <em>path</em>, such as "C:\MyFile.txt".
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>path</em> is a zero-length string, contains only white space, or contains one or more of the invalid characters defined in <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.-or- The system could not retrieve the absolute path. "
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permissions. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>path</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>path</em> contains a colon (\":\") that is not part of a volume identifier (for example, \"c:\\\"). "
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: 'The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetInvalidFileNameChars
  commentId: M:System.IO.Path.GetInvalidFileNameChars
  id: GetInvalidFileNameChars
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetInvalidFileNameChars()
  fullName: System.IO.Path.GetInvalidFileNameChars()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInvalidFileNameChars
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 90
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Gets an array containing the characters that are not allowed in file names.
  syntax:
    content: public static char[] GetInvalidFileNameChars()
    content.vb: Public Shared Function GetInvalidFileNameChars As Char()
    return:
      type: System.Char[]
      description: An array containing the characters that are not allowed in file names.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetInvalidPathChars
  commentId: M:System.IO.Path.GetInvalidPathChars
  id: GetInvalidPathChars
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetInvalidPathChars()
  fullName: System.IO.Path.GetInvalidPathChars()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInvalidPathChars
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 85
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Gets an array containing the characters that are not allowed in path names.
  syntax:
    content: public static char[] GetInvalidPathChars()
    content.vb: Public Shared Function GetInvalidPathChars As Char()
    return:
      type: System.Char[]
      description: An array containing the characters that are not allowed in path names.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetPathRoot(System.String)
  commentId: M:System.IO.Path.GetPathRoot(System.String)
  id: GetPathRoot(System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetPathRoot(String)
  fullName: System.IO.Path.GetPathRoot(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPathRoot
    path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
    startLine: 137
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Gets the root directory information of the specified path.
  syntax:
    content: public static string GetPathRoot(string path)
    content.vb: Public Shared Function GetPathRoot(path As String) As String
    parameters:
    - id: path
      type: System.String
      description: 'The path from which to obtain root directory information. '
    return:
      type: System.String
      description: The root directory of <em>path</em>, such as "C:\", or null if <em>path</em> is null, or an empty string if <em>path</em> does not contain root directory information.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>path</em> contains one or more of the invalid characters defined in <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.-or- <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> was passed to <em>path</em>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetRandomFileName
  commentId: M:System.IO.Path.GetRandomFileName
  id: GetRandomFileName
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetRandomFileName()
  fullName: System.IO.Path.GetRandomFileName()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRandomFileName
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 154
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Returns a random folder name or file name.
  syntax:
    content: public static string GetRandomFileName()
    content.vb: Public Shared Function GetRandomFileName As String
    return:
      type: System.String
      description: A random folder name or file name.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetTempFileName
  commentId: M:System.IO.Path.GetTempFileName
  id: GetTempFileName
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetTempFileName()
  fullName: System.IO.Path.GetTempFileName()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTempFileName
    path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
    startLine: 102
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file.
  syntax:
    content: public static string GetTempFileName()
    content.vb: Public Shared Function GetTempFileName As String
    return:
      type: System.String
      description: The full path of the temporary file.
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs, such as no unique temporary file name is available.- or -This method was unable to create a temporary file.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetTempPath
  commentId: M:System.IO.Path.GetTempPath
  id: GetTempPath
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetTempPath()
  fullName: System.IO.Path.GetTempPath()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTempPath
    path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
    startLine: 91
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Returns the path of the current user's temporary folder.
  syntax:
    content: public static string GetTempPath()
    content.vb: Public Shared Function GetTempPath As String
    return:
      type: System.String
      description: The path to the temporary folder, ending with a backslash.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permissions. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.HasExtension(System.String)
  commentId: M:System.IO.Path.HasExtension(System.String)
  id: HasExtension(System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: HasExtension(String)
  fullName: System.IO.Path.HasExtension(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasExtension
    path: src/System.Runtime.Extensions/src/System/IO/Path.cs
    startLine: 171
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Determines whether a path includes a file name extension.
  syntax:
    content: public static bool HasExtension(string path)
    content.vb: Public Shared Function HasExtension(path As String) As Boolean
    parameters:
    - id: path
      type: System.String
      description: 'The path to search for an extension. '
    return:
      type: System.Boolean
      description: true if the characters that follow the last directory separator (\\ or /) or volume separator (:) in the path include a period (.) followed by one or more characters; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>path</em> contains one or more of the invalid characters defined in <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.IsPathRooted(System.String)
  commentId: M:System.IO.Path.IsPathRooted(System.String)
  id: IsPathRooted(System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: IsPathRooted(String)
  fullName: System.IO.Path.IsPathRooted(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPathRooted
    path: src/System.Runtime.Extensions/src/System/IO/Path.Windows.cs
    startLine: 115
  assemblies:
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Gets a value indicating whether the specified path string contains a root.
  syntax:
    content: public static bool IsPathRooted(string path)
    content.vb: Public Shared Function IsPathRooted(path As String) As Boolean
    parameters:
    - id: path
      type: System.String
      description: 'The path to test. '
    return:
      type: System.Boolean
      description: true if <em>path</em> contains a root; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>path</em> contains one or more of the invalid characters defined in <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: System.Char[]
  isExternal: false
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: ()
    fullName: ()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: false
  name: PathTooLongException
  fullName: System.IO.PathTooLongException
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
