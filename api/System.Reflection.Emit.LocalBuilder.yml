items:
- uid: System.Reflection.Emit.LocalBuilder
  commentId: T:System.Reflection.Emit.LocalBuilder
  id: LocalBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.LocalBuilder.IsPinned
  - System.Reflection.Emit.LocalBuilder.LocalIndex
  - System.Reflection.Emit.LocalBuilder.LocalType
  langs:
  - csharp
  - vb
  name: LocalBuilder
  fullName: System.Reflection.Emit.LocalBuilder
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/LocalBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LocalBuilder
    path: src/mscorlib/src/System/Reflection/Emit/LocalBuilder.cs
    startLine: 11
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Represents a local variable within a method or constructor.
  syntax:
    content: 'public sealed class LocalBuilder : LocalVariableInfo'
    content.vb: >-
      Public NotInheritable Class LocalBuilder
          Inherits LocalVariableInfo
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.LocalBuilder.IsPinned
  commentId: P:System.Reflection.Emit.LocalBuilder.IsPinned
  id: IsPinned
  parent: System.Reflection.Emit.LocalBuilder
  langs:
  - csharp
  - vb
  name: IsPinned
  fullName: System.Reflection.Emit.LocalBuilder.IsPinned
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/LocalBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsPinned
    path: src/mscorlib/src/System/Reflection/Emit/LocalBuilder.cs
    startLine: 48
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Gets a value indicating whether the object referred to by the local variable is pinned in memory.
  syntax:
    content: public override bool IsPinned { get; }
    content.vb: Public Overrides ReadOnly Property IsPinned As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the object referred to by the local variable is pinned in memory; otherwise, false.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.LocalBuilder.LocalIndex
  commentId: P:System.Reflection.Emit.LocalBuilder.LocalIndex
  id: LocalIndex
  parent: System.Reflection.Emit.LocalBuilder
  langs:
  - csharp
  - vb
  name: LocalIndex
  fullName: System.Reflection.Emit.LocalBuilder.LocalIndex
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/LocalBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LocalIndex
    path: src/mscorlib/src/System/Reflection/Emit/LocalBuilder.cs
    startLine: 56
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Gets the zero-based index of the local variable within the method body.
  syntax:
    content: public override int LocalIndex { get; }
    content.vb: Public Overrides ReadOnly Property LocalIndex As Integer
    parameters: []
    return:
      type: System.Int32
      description: An integer value that represents the order of declaration of the local variable within the method body.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.LocalBuilder.LocalType
  commentId: P:System.Reflection.Emit.LocalBuilder.LocalType
  id: LocalType
  parent: System.Reflection.Emit.LocalBuilder
  langs:
  - csharp
  - vb
  name: LocalType
  fullName: System.Reflection.Emit.LocalBuilder.LocalType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/LocalBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LocalType
    path: src/mscorlib/src/System/Reflection/Emit/LocalBuilder.cs
    startLine: 49
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Gets the type of the local variable.
  syntax:
    content: public override Type LocalType { get; }
    content.vb: Public Overrides ReadOnly Property LocalType As Type
    parameters: []
    return:
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the local variable.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
