items:
- uid: System.Data.SqlClient.SqlBulkCopy
  commentId: T:System.Data.SqlClient.SqlBulkCopy
  id: SqlBulkCopy
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)
  - System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)
  - System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)
  - System.Data.SqlClient.SqlBulkCopy.BatchSize
  - System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout
  - System.Data.SqlClient.SqlBulkCopy.Close
  - System.Data.SqlClient.SqlBulkCopy.ColumnMappings
  - System.Data.SqlClient.SqlBulkCopy.DestinationTableName
  - System.Data.SqlClient.SqlBulkCopy.EnableStreaming
  - System.Data.SqlClient.SqlBulkCopy.NotifyAfter
  - System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied
  - System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SqlBulkCopy
  fullName: System.Data.SqlClient.SqlBulkCopy
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlBulkCopy
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 135
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Lets you efficiently bulk load a SQL Server table with data from another source.
  syntax:
    content: 'public sealed class SqlBulkCopy : IDisposable'
    content.vb: >-
      Public NotInheritable Class SqlBulkCopy
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)
  commentId: M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: SqlBulkCopy(SqlConnection)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(System.Data.SqlClient.SqlConnection)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 232
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: 'Initializes a new instance of the <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> class using the specified open instance of <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref>. '
  syntax:
    content: public SqlBulkCopy(SqlConnection connection)
    content.vb: Public Sub New(connection As SqlConnection)
    parameters:
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: The already open <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref> instance that will be used to perform the bulk copy operation. If your connection string does not use Integrated Security = true, you can use <xref href="System.Data.SqlClient.SqlCredential" data-throw-if-not-resolved="false"></xref> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)
  commentId: M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)
  id: '#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)'
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: SqlBulkCopy(SqlConnection, SqlBulkCopyOptions, SqlTransaction)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlBulkCopyOptions, System.Data.SqlClient.SqlTransaction)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 242
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Initializes a new instance of the <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> class using the supplied existing open instance of <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> instance behaves according to options supplied in the <em>copyOptions</em> parameter. If a non-null <xref href="System.Data.SqlClient.SqlTransaction" data-throw-if-not-resolved="false"></xref> is supplied, the copy operations will be performed within that transaction.
  syntax:
    content: public SqlBulkCopy(SqlConnection connection, SqlBulkCopyOptions copyOptions, SqlTransaction externalTransaction)
    content.vb: Public Sub New(connection As SqlConnection, copyOptions As SqlBulkCopyOptions, externalTransaction As SqlTransaction)
    parameters:
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: The already open <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref> instance that will be used to perform the bulk copy. If your connection string does not use Integrated Security = true, you can use <xref href="System.Data.SqlClient.SqlCredential" data-throw-if-not-resolved="false"></xref> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.
    - id: copyOptions
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: A combination of values from the <xref href="System.Data.SqlClient.SqlBulkCopyOptions" data-throw-if-not-resolved="false"></xref>  enumeration that determines which data source rows are copied to the destination table.
    - id: externalTransaction
      type: System.Data.SqlClient.SqlTransaction
      description: An existing <xref href="System.Data.SqlClient.SqlTransaction" data-throw-if-not-resolved="false"></xref> instance under which the bulk copy will occur.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)
  commentId: M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: SqlBulkCopy(String)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 257
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Initializes and opens a new instance of <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref> based on the supplied <em>connectionString</em>. The constructor uses the <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref> to initialize a new instance of the <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public SqlBulkCopy(string connectionString)
    content.vb: Public Sub New(connectionString As String)
    parameters:
    - id: connectionString
      type: System.String
      description: The string defining the connection that will be opened for use by the <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> instance. If your connection string does not use Integrated Security = true, you can use <xref href="System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" data-throw-if-not-resolved="false"></xref> or <xref href="System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" data-throw-if-not-resolved="false"></xref> and <xref href="System.Data.SqlClient.SqlCredential" data-throw-if-not-resolved="false"></xref> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)
  commentId: M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)
  id: '#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)'
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: SqlBulkCopy(String, SqlBulkCopyOptions)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(System.String, System.Data.SqlClient.SqlBulkCopyOptions)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 268
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Initializes and opens a new instance of <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref> based on the supplied <em>connectionString</em>. The constructor uses that <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref> to initialize a new instance of the <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> class. The <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref> instance behaves according to options supplied in the <em>copyOptions</em> parameter.
  syntax:
    content: public SqlBulkCopy(string connectionString, SqlBulkCopyOptions copyOptions)
    content.vb: Public Sub New(connectionString As String, copyOptions As SqlBulkCopyOptions)
    parameters:
    - id: connectionString
      type: System.String
      description: The string defining the connection that will be opened for use by the <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> instance. If your connection string does not use Integrated Security = true, you can use <xref href="System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" data-throw-if-not-resolved="false"></xref> or <xref href="System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" data-throw-if-not-resolved="false"></xref> and <xref href="System.Data.SqlClient.SqlCredential" data-throw-if-not-resolved="false"></xref> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.
    - id: copyOptions
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: A combination of values from the <xref href="System.Data.SqlClient.SqlBulkCopyOptions" data-throw-if-not-resolved="false"></xref>  enumeration that determines which data source rows are copied to the destination table.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.BatchSize
  commentId: P:System.Data.SqlClient.SqlBulkCopy.BatchSize
  id: BatchSize
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: BatchSize
  fullName: System.Data.SqlClient.SqlBulkCopy.BatchSize
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BatchSize
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 274
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Number of rows in each batch. At the end of each batch, the rows in the batch are sent to the server.
  syntax:
    content: public int BatchSize { get; set; }
    content.vb: Public Property BatchSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The integer value of the <xref href="System.Data.SqlClient.SqlBulkCopy.BatchSize" data-throw-if-not-resolved="false"></xref> property, or zero if no value has been set.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout
  commentId: P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout
  id: BulkCopyTimeout
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: BulkCopyTimeout
  fullName: System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BulkCopyTimeout
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 293
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Number of seconds for the operation to complete before it times out.
  syntax:
    content: public int BulkCopyTimeout { get; set; }
    content.vb: Public Property BulkCopyTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: The integer value of the <xref href="System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" data-throw-if-not-resolved="false"></xref> property. The default is 30 seconds. A value of 0 indicates no limit; the bulk copy will wait indefinitely.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.ColumnMappings
  commentId: P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings
  id: ColumnMappings
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: ColumnMappings
  fullName: System.Data.SqlClient.SqlBulkCopy.ColumnMappings
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ColumnMappings
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 321
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Returns a collection of <xref href="System.Data.SqlClient.SqlBulkCopyColumnMapping" data-throw-if-not-resolved="false"></xref> items. Column mappings define the relationships between columns in the data source and columns in the destination.
  syntax:
    content: public SqlBulkCopyColumnMappingCollection ColumnMappings { get; }
    content.vb: Public ReadOnly Property ColumnMappings As SqlBulkCopyColumnMappingCollection
    parameters: []
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
      description: A collection of column mappings. By default, it is an empty collection.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlClient.SqlBulkCopy.DestinationTableName
  commentId: P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName
  id: DestinationTableName
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: DestinationTableName
  fullName: System.Data.SqlClient.SqlBulkCopy.DestinationTableName
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DestinationTableName
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 329
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: 'Name of the destination table on the server. '
  syntax:
    content: public string DestinationTableName { get; set; }
    content.vb: Public Property DestinationTableName As String
    parameters: []
    return:
      type: System.String
      description: The string value of the <xref href="System.Data.SqlClient.SqlBulkCopy.DestinationTableName" data-throw-if-not-resolved="false"></xref> property, or null if none as been supplied.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.EnableStreaming
  commentId: P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming
  id: EnableStreaming
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: EnableStreaming
  fullName: System.Data.SqlClient.SqlBulkCopy.EnableStreaming
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnableStreaming
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 309
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Enables or disables a <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> object to stream data from an <xref href="System.Data.IDataReader" data-throw-if-not-resolved="false"></xref> object
  syntax:
    content: public bool EnableStreaming { get; set; }
    content.vb: Public Property EnableStreaming As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if a <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> object can stream data from an <xref href="System.Data.IDataReader" data-throw-if-not-resolved="false"></xref> object; otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.NotifyAfter
  commentId: P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter
  id: NotifyAfter
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: NotifyAfter
  fullName: System.Data.SqlClient.SqlBulkCopy.NotifyAfter
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotifyAfter
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 349
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Defines the number of rows to be processed before generating a notification event.
  syntax:
    content: public int NotifyAfter { get; set; }
    content.vb: Public Property NotifyAfter As Integer
    parameters: []
    return:
      type: System.Int32
      description: The integer value of the <xref href="System.Data.SqlClient.SqlBulkCopy.NotifyAfter" data-throw-if-not-resolved="false"></xref> property, or zero if the property has not been set.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied
  commentId: E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied
  id: SqlRowsCopied
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: SqlRowsCopied
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied
  type: Event
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlRowsCopied
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 369
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Occurs every time that the number of rows specified by the <xref href="System.Data.SqlClient.SqlBulkCopy.NotifyAfter" data-throw-if-not-resolved="false"></xref> property have been processed.
  syntax:
    content: public event SqlRowsCopiedEventHandler SqlRowsCopied
    content.vb: Public Event SqlRowsCopied As SqlRowsCopiedEventHandler
    return:
      type: System.Data.SqlClient.SqlRowsCopiedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.Close
  commentId: M:System.Data.SqlClient.SqlBulkCopy.Close
  id: Close
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: Close()
  fullName: System.Data.SqlClient.SqlBulkCopy.Close()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Close
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopy.cs
    startLine: 779
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Closes the <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)
  commentId: M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)
  id: WriteToServer(System.Data.Common.DbDataReader)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: WriteToServer(Common.DbDataReader)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteToServer
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 233
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Copies all rows from the supplied <xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref> array to a destination table specified by the <xref href="System.Data.SqlClient.SqlBulkCopy.DestinationTableName" data-throw-if-not-resolved="false"></xref> property of the <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public void WriteToServer(Common.DbDataReader reader)
    content.vb: Public Sub WriteToServer(reader As Common.DbDataReader)
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: A <xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref> whose rows will be copied to the destination table.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)
  commentId: M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)
  id: WriteToServerAsync(System.Data.Common.DbDataReader)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: WriteToServerAsync(Common.DbDataReader)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteToServerAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 234
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: The asynchronous version of <xref href="System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" data-throw-if-not-resolved="false"></xref>, which copies all rows from the supplied <xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref> array to a destination table specified by the <xref href="System.Data.SqlClient.SqlBulkCopy.DestinationTableName" data-throw-if-not-resolved="false"></xref> property of the <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public Threading.Tasks.Task WriteToServerAsync(Common.DbDataReader reader)
    content.vb: Public Function WriteToServerAsync(reader As Common.DbDataReader) As Threading.Tasks.Task
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: A <xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref> whose rows will be copied to the destination table.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)
  id: WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  - vb
  name: WriteToServerAsync(Common.DbDataReader, Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteToServerAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 235
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: The asynchronous version of <xref href="System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" data-throw-if-not-resolved="false"></xref>, which copies all rows from the supplied <xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref> array to a destination table specified by the <xref href="System.Data.SqlClient.SqlBulkCopy.DestinationTableName" data-throw-if-not-resolved="false"></xref> property of the <xref href="System.Data.SqlClient.SqlBulkCopy" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public Threading.Tasks.Task WriteToServerAsync(Common.DbDataReader reader, Threading.CancellationToken cancellationToken)
    content.vb: Public Function WriteToServerAsync(reader As Common.DbDataReader, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: A <xref href="System.Data.Common.DbDataReader" data-throw-if-not-resolved="false"></xref> whose rows will be copied to the destination table.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction. A <xref href="System.Threading.CancellationToken.None" data-throw-if-not-resolved="false"></xref> value in this parameter makes this method equivalent to <xref href="System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlBulkCopyOptions
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlBulkCopyOptions
  fullName: System.Data.SqlClient.SqlBulkCopyOptions
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlBulkCopyColumnMappingCollection
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlRowsCopiedEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlRowsCopiedEventHandler
  fullName: System.Data.SqlClient.SqlRowsCopiedEventHandler
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: Common.DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common
  isExternal: false
  name: System.Data.Common
  fullName: System.Data.Common
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
