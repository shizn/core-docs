items:
- uid: System.GC
  commentId: T:System.GC
  id: GC
  parent: System
  children:
  - System.GC.AddMemoryPressure(System.Int64)
  - System.GC.Collect
  - System.GC.Collect(System.Int32)
  - System.GC.Collect(System.Int32,System.GCCollectionMode)
  - System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean)
  - System.GC.CollectionCount(System.Int32)
  - System.GC.GetGeneration(System.Object)
  - System.GC.GetTotalMemory(System.Boolean)
  - System.GC.KeepAlive(System.Object)
  - System.GC.MaxGeneration
  - System.GC.RemoveMemoryPressure(System.Int64)
  - System.GC.ReRegisterForFinalize(System.Object)
  - System.GC.SuppressFinalize(System.Object)
  - System.GC.WaitForPendingFinalizers
  langs:
  - csharp
  - vb
  name: GC
  fullName: System.GC
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GC
    path: src/mscorlib/src/System/GC.cs
    startLine: 63
  assemblies:
  - System.Runtime
  namespace: System
  summary: Controls the system garbage collector, a service that automatically reclaims unused memory.
  syntax:
    content: public class GC
    content.vb: Public Class GC
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.GC.MaxGeneration
  commentId: P:System.GC.MaxGeneration
  id: MaxGeneration
  parent: System.GC
  langs:
  - csharp
  - vb
  name: MaxGeneration
  fullName: System.GC.MaxGeneration
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxGeneration
    path: src/mscorlib/src/System/GC.cs
    startLine: 306
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the maximum number of generations that the system currently supports.
  syntax:
    content: public static int MaxGeneration { get; }
    content.vb: Public Shared ReadOnly Property MaxGeneration As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value that ranges from zero to the maximum number of supported generations.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.GC.AddMemoryPressure(System.Int64)
  commentId: M:System.GC.AddMemoryPressure(System.Int64)
  id: AddMemoryPressure(System.Int64)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: AddMemoryPressure(Int64)
  fullName: System.GC.AddMemoryPressure(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMemoryPressure
    path: src/mscorlib/src/System/GC.cs
    startLine: 126
  assemblies:
  - System.Runtime
  namespace: System
  summary: Informs the runtime of a large allocation of unmanaged memory that should be taken into account when scheduling garbage collection.
  syntax:
    content: >-
      [SecurityCritical]

      public static void AddMemoryPressure(long bytesAllocated)
    content.vb: >-
      <SecurityCritical>

      Public Shared Sub AddMemoryPressure(bytesAllocated As Long)
    parameters:
    - id: bytesAllocated
      type: System.Int64
      description: 'The incremental amount of unmanaged memory that has been allocated. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>bytesAllocated</em> is less than or equal to 0.-or-On a 32-bit computer, <em>bytesAllocated</em> is larger than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.Collect
  commentId: M:System.GC.Collect
  id: Collect
  parent: System.GC
  langs:
  - csharp
  - vb
  name: Collect()
  fullName: System.GC.Collect()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Collect
    path: src/mscorlib/src/System/GC.cs
    startLine: 174
  assemblies:
  - System.Runtime
  namespace: System
  summary: 'Forces an immediate garbage collection of all generations. '
  syntax:
    content: public static void Collect()
    content.vb: Public Shared Sub Collect
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.Collect(System.Int32)
  commentId: M:System.GC.Collect(System.Int32)
  id: Collect(System.Int32)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: Collect(Int32)
  fullName: System.GC.Collect(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Collect
    path: src/mscorlib/src/System/GC.cs
    startLine: 168
  assemblies:
  - System.Runtime
  namespace: System
  summary: Forces an immediate garbage collection from generation 0 through a specified generation.
  syntax:
    content: public static void Collect(int generation)
    content.vb: Public Shared Sub Collect(generation As Integer)
    parameters:
    - id: generation
      type: System.Int32
      description: 'The number of the oldest generation to be garbage collected. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>generation</em> is not valid. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.Collect(System.Int32,System.GCCollectionMode)
  commentId: M:System.GC.Collect(System.Int32,System.GCCollectionMode)
  id: Collect(System.Int32,System.GCCollectionMode)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: Collect(Int32, GCCollectionMode)
  fullName: System.GC.Collect(System.Int32, System.GCCollectionMode)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Collect
    path: src/mscorlib/src/System/GC.cs
    startLine: 180
  assemblies:
  - System.Runtime
  namespace: System
  summary: Forces a garbage collection from generation 0 through a specified generation, at a time specified by a <xref href="System.GCCollectionMode" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public static void Collect(int generation, GCCollectionMode mode)
    content.vb: Public Shared Sub Collect(generation As Integer, mode As GCCollectionMode)
    parameters:
    - id: generation
      type: System.Int32
      description: 'The number of the oldest generation to be garbage collected. '
    - id: mode
      type: System.GCCollectionMode
      description: 'An enumeration value that specifies whether the garbage collection is forced (<xref href="System.GCCollectionMode.Default" data-throw-if-not-resolved="false"></xref> or <xref href="System.GCCollectionMode.Forced" data-throw-if-not-resolved="false"></xref>) or optimized (<xref href="System.GCCollectionMode.Optimized" data-throw-if-not-resolved="false"></xref>). '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>generation</em> is not valid.-or-<em>mode</em> is not one of the <xref href=\"System.GCCollectionMode\" data-throw-if-not-resolved=\"false\"></xref> values."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean)
  commentId: M:System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean)
  id: Collect(System.Int32,System.GCCollectionMode,System.Boolean)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: Collect(Int32, GCCollectionMode, Boolean)
  fullName: System.GC.Collect(System.Int32, System.GCCollectionMode, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Collect
    path: src/mscorlib/src/System/GC.cs
    startLine: 186
  assemblies:
  - System.Runtime
  namespace: System
  summary: Forces a garbage collection from generation 0 through a specified generation, at a time specified by a <xref href="System.GCCollectionMode" data-throw-if-not-resolved="false"></xref> value, with a value specifying whether the collection should be blocking.
  syntax:
    content: public static void Collect(int generation, GCCollectionMode mode, bool blocking)
    content.vb: Public Shared Sub Collect(generation As Integer, mode As GCCollectionMode, blocking As Boolean)
    parameters:
    - id: generation
      type: System.Int32
      description: 'The number of the oldest generation to be garbage collected. '
    - id: mode
      type: System.GCCollectionMode
      description: 'An enumeration value that specifies whether the garbage collection is forced (<xref href="System.GCCollectionMode.Default" data-throw-if-not-resolved="false"></xref> or <xref href="System.GCCollectionMode.Forced" data-throw-if-not-resolved="false"></xref>) or optimized (<xref href="System.GCCollectionMode.Optimized" data-throw-if-not-resolved="false"></xref>). '
    - id: blocking
      type: System.Boolean
      description: true to perform a blocking garbage collection; false to perform a background garbage collection where possible.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>generation</em> is not valid.-or-<em>mode</em> is not one of the <xref href=\"System.GCCollectionMode\" data-throw-if-not-resolved=\"false\"></xref> values."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.CollectionCount(System.Int32)
  commentId: M:System.GC.CollectionCount(System.Int32)
  id: CollectionCount(System.Int32)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: CollectionCount(Int32)
  fullName: System.GC.CollectionCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CollectionCount
    path: src/mscorlib/src/System/GC.cs
    startLine: 229
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the number of times garbage collection has occurred for the specified generation of objects.
  syntax:
    content: public static int CollectionCount(int generation)
    content.vb: Public Shared Function CollectionCount(generation As Integer) As Integer
    parameters:
    - id: generation
      type: System.Int32
      description: 'The generation of objects for which the garbage collection count is to be determined. '
    return:
      type: System.Int32
      description: The number of times garbage collection has occurred for the specified generation since the process was started.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>generation</em> is less than 0. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.GetGeneration(System.Object)
  commentId: M:System.GC.GetGeneration(System.Object)
  id: GetGeneration(System.Object)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: GetGeneration(Object)
  fullName: System.GC.GetGeneration(System.Object)
  type: Method
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the current generation number of the specified object.
  syntax:
    content: public static int GetGeneration(object obj)
    content.vb: Public Shared Function GetGeneration(obj As Object) As Integer
    parameters:
    - id: obj
      type: System.Object
      description: 'The object that generation information is retrieved for. '
    return:
      type: System.Int32
      description: The current generation number of <em>obj</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.GetTotalMemory(System.Boolean)
  commentId: M:System.GC.GetTotalMemory(System.Boolean)
  id: GetTotalMemory(System.Boolean)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: GetTotalMemory(Boolean)
  fullName: System.GC.GetTotalMemory(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetTotalMemory
    path: src/mscorlib/src/System/GC.cs
    startLine: 358
  assemblies:
  - System.Runtime
  namespace: System
  summary: Retrieves the number of bytes currently thought to be allocated. A parameter indicates whether this method can wait a short interval before returning, to allow the system to collect garbage and finalize objects.
  syntax:
    content: public static long GetTotalMemory(bool forceFullCollection)
    content.vb: Public Shared Function GetTotalMemory(forceFullCollection As Boolean) As Long
    parameters:
    - id: forceFullCollection
      type: System.Boolean
      description: true to indicate that this method can wait for garbage collection to occur before returning; otherwise, false.
    return:
      type: System.Int64
      description: A number that is the best available approximation of the number of bytes currently allocated in managed memory.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.KeepAlive(System.Object)
  commentId: M:System.GC.KeepAlive(System.Object)
  id: KeepAlive(System.Object)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: KeepAlive(Object)
  fullName: System.GC.KeepAlive(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: KeepAlive
    path: src/mscorlib/src/System/GC.cs
    startLine: 289
  assemblies:
  - System.Runtime
  namespace: System
  summary: References the specified object, which makes it ineligible for garbage collection from the start of the current routine to the point where this method is called.
  syntax:
    content: public static void KeepAlive(object obj)
    content.vb: Public Shared Sub KeepAlive(obj As Object)
    parameters:
    - id: obj
      type: System.Object
      description: 'The object to reference. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.RemoveMemoryPressure(System.Int64)
  commentId: M:System.GC.RemoveMemoryPressure(System.Int64)
  id: RemoveMemoryPressure(System.Int64)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: RemoveMemoryPressure(Int64)
  fullName: System.GC.RemoveMemoryPressure(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RemoveMemoryPressure
    path: src/mscorlib/src/System/GC.cs
    startLine: 142
  assemblies:
  - System.Runtime
  namespace: System
  summary: Informs the runtime that unmanaged memory has been released and no longer needs to be taken into account when scheduling garbage collection.
  syntax:
    content: >-
      [SecurityCritical]

      public static void RemoveMemoryPressure(long bytesAllocated)
    content.vb: >-
      <SecurityCritical>

      Public Shared Sub RemoveMemoryPressure(bytesAllocated As Long)
    parameters:
    - id: bytesAllocated
      type: System.Int64
      description: 'The amount of unmanaged memory that has been released. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>bytesAllocated</em> is less than or equal to 0. -or- On a 32-bit computer, <em>bytesAllocated</em> is larger than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.ReRegisterForFinalize(System.Object)
  commentId: M:System.GC.ReRegisterForFinalize(System.Object)
  id: ReRegisterForFinalize(System.Object)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: ReRegisterForFinalize(Object)
  fullName: System.GC.ReRegisterForFinalize(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReRegisterForFinalize
    path: src/mscorlib/src/System/GC.cs
    startLine: 346
  assemblies:
  - System.Runtime
  namespace: System
  summary: Requests that the system call the finalizer for the specified object for which <xref href="System.GC.SuppressFinalize(System.Object)" data-throw-if-not-resolved="false"></xref> has previously been called.
  syntax:
    content: public static void ReRegisterForFinalize(object obj)
    content.vb: Public Shared Sub ReRegisterForFinalize(obj As Object)
    parameters:
    - id: obj
      type: System.Object
      description: 'The object that a finalizer must be called for. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>obj</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.SuppressFinalize(System.Object)
  commentId: M:System.GC.SuppressFinalize(System.Object)
  id: SuppressFinalize(System.Object)
  parent: System.GC
  langs:
  - csharp
  - vb
  name: SuppressFinalize(Object)
  fullName: System.GC.SuppressFinalize(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SuppressFinalize
    path: src/mscorlib/src/System/GC.cs
    startLine: 329
  assemblies:
  - System.Runtime
  namespace: System
  summary: 'Requests that the common language runtime not call the finalizer for the specified object. '
  syntax:
    content: public static void SuppressFinalize(object obj)
    content.vb: Public Shared Sub SuppressFinalize(obj As Object)
    parameters:
    - id: obj
      type: System.Object
      description: 'The object whose finalizer must not be executed. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>obj</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.GC.WaitForPendingFinalizers
  commentId: M:System.GC.WaitForPendingFinalizers
  id: WaitForPendingFinalizers
  parent: System.GC
  langs:
  - csharp
  - vb
  name: WaitForPendingFinalizers()
  fullName: System.GC.WaitForPendingFinalizers()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/GC.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WaitForPendingFinalizers
    path: src/mscorlib/src/System/GC.cs
    startLine: 316
  assemblies:
  - System.Runtime
  namespace: System
  summary: Suspends the current thread until the thread that is processing the queue of finalizers has emptied that queue.
  syntax:
    content: public static void WaitForPendingFinalizers()
    content.vb: Public Shared Sub WaitForPendingFinalizers
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.GCCollectionMode
  parent: System
  isExternal: false
  name: GCCollectionMode
  fullName: System.GCCollectionMode
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
