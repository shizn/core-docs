items:
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  id: Nullable`1
  parent: System
  children:
  - System.Nullable`1.#ctor(`0)
  - System.Nullable`1.Equals(System.Object)
  - System.Nullable`1.GetHashCode
  - System.Nullable`1.GetValueOrDefault
  - System.Nullable`1.GetValueOrDefault(`0)
  - System.Nullable`1.HasValue
  - System.Nullable`1.op_Explicit(System.Nullable{`0})~`0
  - System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}
  - System.Nullable`1.ToString
  - System.Nullable`1.Value
  langs:
  - csharp
  - vb
  name: Nullable<T>
  fullName: System.Nullable<T>
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Nullable
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 23
  assemblies:
  - System.Runtime
  namespace: System
  summary: Represents a value type that can be assigned null.
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct Nullable<T>
          where T : struct
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure Nullable(Of T As Structure)
    typeParameters:
    - id: T
      description: The underlying value type of the <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> generic type.
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
- uid: System.Nullable`1.#ctor(`0)
  commentId: M:System.Nullable`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: System.Nullable`1
  langs:
  - csharp
  - vb
  name: Nullable(T)
  fullName: System.Nullable<T>.Nullable(T)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 30
  assemblies:
  - System.Runtime
  namespace: System
  summary: 'Initializes a new instance of the <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> structure to the specified value. '
  syntax:
    content: public Nullable(T value)
    content.vb: Public Sub New(value As T)
    parameters:
    - id: value
      type: '{T}'
      description: A value type.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Nullable(Of T).Nullable(T)
- uid: System.Nullable`1.HasValue
  commentId: P:System.Nullable`1.HasValue
  id: HasValue
  parent: System.Nullable`1
  langs:
  - csharp
  - vb
  name: HasValue
  fullName: System.Nullable<T>.HasValue
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: HasValue
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 36
  assemblies:
  - System.Runtime
  namespace: System
  summary: 'Gets a value indicating whether the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object has a valid value of its underlying type. '
  syntax:
    content: public bool HasValue { get; }
    content.vb: Public ReadOnly Property HasValue As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object has a value; false if the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object has no value.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Nullable(Of T).HasValue
- uid: System.Nullable`1.Value
  commentId: P:System.Nullable`1.Value
  id: Value
  parent: System.Nullable`1
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Nullable<T>.Value
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Value
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 43
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the value of the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object if it has been assigned a valid underlying value.
  syntax:
    content: public T Value { get; }
    content.vb: Public ReadOnly Property Value As T
    parameters: []
    return:
      type: '{T}'
      description: The value of the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object if the <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is true. An exception is thrown if the <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is false.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Nullable(Of T).Value
- uid: System.Nullable`1.Equals(System.Object)
  commentId: M:System.Nullable`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Nullable`1
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Nullable<T>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 62
  assemblies:
  - System.Runtime
  namespace: System
  summary: Indicates whether the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object is equal to a specified object.
  syntax:
    content: public override bool Equals(object other)
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
    parameters:
    - id: other
      type: System.Object
      description: An object.
    return:
      type: System.Boolean
      description: 'true if the <em>other</em> parameter is equal to the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object; otherwise, false. This table describes how equality is defined for the compared values: Return ValueDescriptiontrueThe <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is false, and the <em>other</em> parameter is null. That is, two null values are equal by definition.-or-The <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is true, and the value returned by the <xref href="System.Nullable`1.Value" data-throw-if-not-resolved="false"></xref> property is equal to the <em>other</em> parameter.falseThe <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property for the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> structure is true, and the <em>other</em> parameter is null.-or-The <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property for the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> structure is false, and the <em>other</em> parameter is not null.-or-The <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property for the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> structure is true, and the value returned by the <xref href="System.Nullable`1.Value" data-throw-if-not-resolved="false"></xref> property is not equal to the <em>other</em> parameter.'
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Nullable(Of T).Equals(System.Object)
- uid: System.Nullable`1.GetHashCode
  commentId: M:System.Nullable`1.GetHashCode
  id: GetHashCode
  parent: System.Nullable`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Nullable<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 68
  assemblies:
  - System.Runtime
  namespace: System
  summary: Retrieves the hash code of the object returned by the <xref href="System.Nullable`1.Value" data-throw-if-not-resolved="false"></xref> property.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: 'The hash code of the object returned by the <xref href="System.Nullable`1.Value" data-throw-if-not-resolved="false"></xref> property if the <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is true, or zero if the <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is false. '
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Nullable(Of T).GetHashCode()
- uid: System.Nullable`1.GetValueOrDefault
  commentId: M:System.Nullable`1.GetValueOrDefault
  id: GetValueOrDefault
  parent: System.Nullable`1
  langs:
  - csharp
  - vb
  name: GetValueOrDefault()
  fullName: System.Nullable<T>.GetValueOrDefault()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetValueOrDefault
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 52
  assemblies:
  - System.Runtime
  namespace: System
  summary: Retrieves the value of the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object, or the object's default value.
  syntax:
    content: public T GetValueOrDefault()
    content.vb: Public Function GetValueOrDefault As T
    return:
      type: '{T}'
      description: The value of the <xref href="System.Nullable`1.Value" data-throw-if-not-resolved="false"></xref> property if the  <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is true; otherwise, the default value of the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object. The type of the default value is the type argument of the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object, and the value of the default value consists solely of binary zeroes.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Nullable(Of T).GetValueOrDefault()
- uid: System.Nullable`1.GetValueOrDefault(`0)
  commentId: M:System.Nullable`1.GetValueOrDefault(`0)
  id: GetValueOrDefault(`0)
  parent: System.Nullable`1
  langs:
  - csharp
  - vb
  name: GetValueOrDefault(T)
  fullName: System.Nullable<T>.GetValueOrDefault(T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetValueOrDefault
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 57
  assemblies:
  - System.Runtime
  namespace: System
  summary: Retrieves the value of the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object, or the specified default value.
  syntax:
    content: public T GetValueOrDefault(T defaultValue)
    content.vb: Public Function GetValueOrDefault(defaultValue As T) As T
    parameters:
    - id: defaultValue
      type: '{T}'
      description: A value to return if the <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is false.
    return:
      type: '{T}'
      description: The value of the <xref href="System.Nullable`1.Value" data-throw-if-not-resolved="false"></xref> property if the <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is true; otherwise, the <em>defaultValue</em> parameter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Nullable(Of T).GetValueOrDefault(T)
- uid: System.Nullable`1.op_Explicit(System.Nullable{`0})~`0
  commentId: M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0
  id: op_Explicit(System.Nullable{`0})~`0
  parent: System.Nullable`1
  langs:
  - csharp
  - vb
  name: Explicit(Nullable<T> to T)
  fullName: System.Nullable<T>.Explicit(System.Nullable<T> to T)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 81
  assemblies:
  - System.Runtime
  namespace: System
  summary: 'Defines an explicit conversion of a <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> instance to its underlying value. '
  syntax:
    content: public static explicit operator T(Nullable<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Nullable(Of T)) As T
    parameters:
    - id: value
      type: System.Nullable`1
      description: A nullable value.
    return:
      type: '{T}'
      description: The value of the <xref href="System.Nullable`1.Value" data-throw-if-not-resolved="false"></xref> property for the <em>value</em> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Nullable(Of T).Narrowing(System.Nullable(Of T) to T)
  name.vb: Narrowing(Nullable(Of T) to T)
- uid: System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}
  commentId: M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}
  id: op_Implicit(`0)~System.Nullable{`0}
  parent: System.Nullable`1
  langs:
  - csharp
  - vb
  name: Implicit(T to Nullable<T>)
  fullName: System.Nullable<T>.Implicit(T to System.Nullable<T>)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 76
  assemblies:
  - System.Runtime
  namespace: System
  summary: 'Creates a new <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object initialized to a specified value. '
  syntax:
    content: public static implicit operator Nullable<T>(T value)
    content.vb: Public Shared Widening Operator CType(value As T) As Nullable(Of T)
    parameters:
    - id: value
      type: '{T}'
      description: A value type.
    return:
      type: System.Nullable`1
      description: A <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object whose <xref href="System.Nullable`1.Value" data-throw-if-not-resolved="false"></xref> property is initialized with the <em>value</em> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Nullable(Of T).Widening(T to System.Nullable(Of T))
  name.vb: Widening(T to Nullable(Of T))
- uid: System.Nullable`1.ToString
  commentId: M:System.Nullable`1.ToString
  id: ToString
  parent: System.Nullable`1
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Nullable<T>.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Nullable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Nullable.cs
    startLine: 72
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the text representation of the value of the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The text representation of the value of the current <xref href="System.Nullable`1" data-throw-if-not-resolved="false"></xref> object if the <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is true, or an empty string ("") if the <xref href="System.Nullable`1.HasValue" data-throw-if-not-resolved="false"></xref> property is false.
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Nullable(Of T).ToString()
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Nullable`1
  parent: System
  isExternal: false
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
