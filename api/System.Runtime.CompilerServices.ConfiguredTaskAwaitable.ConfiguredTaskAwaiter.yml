items:
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  commentId: T:System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  id: ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.IsCompleted
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.OnCompleted(System.Action)
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  langs:
  - csharp
  - vb
  name: ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ConfiguredTaskAwaiter
    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
    startLine: 379
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Provides an awaiter for an awaitable (<xref href="System.Runtime.CompilerServices.ConfiguredTaskAwaitable" data-throw-if-not-resolved="false"></xref>) object.
  syntax:
    content: 'public struct ConfiguredTaskAwaiter : ICriticalNotifyCompletion, INotifyCompletion'
    content.vb: >-
      Public Structure ConfiguredTaskAwaiter
          Implements ICriticalNotifyCompletion, INotifyCompletion
  implements:
  - System.Runtime.CompilerServices.ICriticalNotifyCompletion
  - System.Runtime.CompilerServices.INotifyCompletion
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.IsCompleted
  commentId: P:System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.IsCompleted
  id: IsCompleted
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  langs:
  - csharp
  - vb
  name: IsCompleted
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.IsCompleted
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsCompleted
    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
    startLine: 403
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Gets a value that specifies whether the task being awaited is completed.
  syntax:
    content: public bool IsCompleted { get; }
    content.vb: Public ReadOnly Property IsCompleted As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the task being awaited is completed; otherwise, false.
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The awaiter was not properly initialized.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult
  commentId: M:System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult
  id: GetResult
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  langs:
  - csharp
  - vb
  name: GetResult()
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetResult
    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
    startLine: 435
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Ends the await on the completed task.
  syntax:
    content: public void GetResult()
    content.vb: Public Sub GetResult
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The awaiter was not properly initialized.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: The task was canceled.
  - type: System.Exception
    commentId: T:System.Exception
    description: The task completed in a faulted state.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.OnCompleted(System.Action)
  commentId: M:System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.OnCompleted(System.Action)
  id: OnCompleted(System.Action)
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  langs:
  - csharp
  - vb
  name: OnCompleted(Action)
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.OnCompleted(System.Action)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OnCompleted
    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
    startLine: 413
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: Schedules the continuation action for the task associated with this awaiter.
  syntax:
    content: public void OnCompleted(Action continuation)
    content.vb: Public Sub OnCompleted(continuation As Action)
    parameters:
    - id: continuation
      type: System.Action
      description: The action to invoke when the await operation completes.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <em>continuation</em> argument is null.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The awaiter was not properly initialized.
  implements:
  - System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  commentId: M:System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  id: UnsafeOnCompleted(System.Action)
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  langs:
  - csharp
  - vb
  name: UnsafeOnCompleted(Action)
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UnsafeOnCompleted
    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs
    startLine: 424
  assemblies:
  - System.Threading.Tasks
  namespace: System.Runtime.CompilerServices
  summary: 'Schedules the continuation action for the task associated with this awaiter. '
  syntax:
    content: public void UnsafeOnCompleted(Action continuation)
    content.vb: Public Sub UnsafeOnCompleted(continuation As Action)
    parameters:
    - id: continuation
      type: System.Action
      description: The action to invoke when the await operation completes.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <em>continuation</em> argument is null.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The awaiter was not properly initialized.
  implements:
  - System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Runtime.CompilerServices.ICriticalNotifyCompletion
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: ICriticalNotifyCompletion
  fullName: System.Runtime.CompilerServices.ICriticalNotifyCompletion
- uid: System.Runtime.CompilerServices.INotifyCompletion
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: INotifyCompletion
  fullName: System.Runtime.CompilerServices.INotifyCompletion
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)
  parent: System.Runtime.CompilerServices.INotifyCompletion
  isExternal: true
  name: OnCompleted(Action)
  fullName: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)
    name: OnCompleted
    fullName: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted
  - name: (
    fullName: (
  - uid: System.Action
    name: Action
    fullName: System.Action
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)
    name: OnCompleted
    fullName: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted
  - name: (
    fullName: (
  - uid: System.Action
    name: Action
    fullName: System.Action
    isExternal: true
  - name: )
    fullName: )
- uid: System.Action
  isExternal: false
  name: Action
  fullName: System.Action
- uid: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)
  parent: System.Runtime.CompilerServices.ICriticalNotifyCompletion
  isExternal: true
  name: UnsafeOnCompleted(Action)
  fullName: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)
    name: UnsafeOnCompleted
    fullName: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted
  - name: (
    fullName: (
  - uid: System.Action
    name: Action
    fullName: System.Action
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)
    name: UnsafeOnCompleted
    fullName: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted
  - name: (
    fullName: (
  - uid: System.Action
    name: Action
    fullName: System.Action
    isExternal: true
  - name: )
    fullName: )
- uid: System.NullReferenceException
  isExternal: false
  name: NullReferenceException
  fullName: System.NullReferenceException
- uid: System.Threading.Tasks.TaskCanceledException
  isExternal: false
  name: TaskCanceledException
  fullName: System.Threading.Tasks.TaskCanceledException
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
