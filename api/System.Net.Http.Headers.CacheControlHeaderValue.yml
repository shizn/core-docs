items:
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  commentId: T:System.Net.Http.Headers.CacheControlHeaderValue
  id: CacheControlHeaderValue
  parent: System.Net.Http.Headers
  children:
  - System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  - System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  - System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  - System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  - System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  - System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  - System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  - System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.CacheControlHeaderValue.Private
  - System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.Public
  - System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.ToString
  - System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  langs:
  - csharp
  - vb
  name: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
  type: Class
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CacheControlHeaderValue
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 11
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Represents the value of the Cache-Control header.
  syntax:
    content: 'public class CacheControlHeaderValue : object'
    content.vb: >-
      Public Class CacheControlHeaderValue
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 160
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Initializes a new instance of the <xref href="System.Net.Http.Headers.CacheControlHeaderValue" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public CacheControlHeaderValue()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  id: Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Extensions
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 148
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Cache-extension tokens, each with an optional assigned value.
  syntax:
    content: public Collections.Generic.ICollection<NameValueHeaderValue> Extensions { get; }
    content.vb: Public ReadOnly Property Extensions As Collections.Generic.ICollection(Of NameValueHeaderValue)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
      description: Returns <xref href="System.Collections.Generic.ICollection`1" data-throw-if-not-resolved="false"></xref>.A collection of cache-extension tokens each with an optional assigned value.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  id: MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxAge
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 70
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: 'The maximum age, specified in seconds, that the HTTP client is willing to accept a response. '
  syntax:
    content: public Nullable<TimeSpan> MaxAge { get; set; }
    content.vb: Public Property MaxAge As Nullable(Of TimeSpan)
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: 'Returns <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref>.The time in seconds. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  id: MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxStale
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 82
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Whether an HTTP client is willing to accept a response that has exceeded its expiration time.
  syntax:
    content: public bool MaxStale { get; set; }
    content.vb: Public Property MaxStale As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  id: MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxStaleLimit
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 88
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.
  syntax:
    content: public Nullable<TimeSpan> MaxStaleLimit { get; set; }
    content.vb: Public Property MaxStaleLimit As Nullable(Of TimeSpan)
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: Returns <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref>.The time in seconds.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  id: MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinFresh
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 94
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.
  syntax:
    content: public Nullable<TimeSpan> MinFresh { get; set; }
    content.vb: Public Property MinFresh As Nullable(Of TimeSpan)
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: Returns <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref>.The time in seconds.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  id: MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MustRevalidate
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 136
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.
  syntax:
    content: public bool MustRevalidate { get; set; }
    content.vb: Public Property MustRevalidate As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  id: NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NoCache
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 46
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Whether an HTTP client is willing to accept a cached response.
  syntax:
    content: public bool NoCache { get; set; }
    content.vb: Public Property NoCache As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the HTTP client is willing to accept a cached response; otherwise, false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  id: NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NoCacheHeaders
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 52
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: A collection of fieldnames in the "no-cache" directive in a cache-control header field on an HTTP response.
  syntax:
    content: public Collections.Generic.ICollection<string> NoCacheHeaders { get; }
    content.vb: Public ReadOnly Property NoCacheHeaders As Collections.Generic.ICollection(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: Returns <xref href="System.Collections.Generic.ICollection`1" data-throw-if-not-resolved="false"></xref>.A collection of fieldnames.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  id: NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NoStore
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 64
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Whether a cache must not store any part of either the HTTP request mressage or any response.
  syntax:
    content: public bool NoStore { get; set; }
    content.vb: Public Property NoStore As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if a cache must not store any part of either the HTTP request mressage or any response; otherwise, false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  id: NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NoTransform
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 100
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Whether a cache or proxy must not change any aspect of the entity-body.
  syntax:
    content: public bool NoTransform { get; set; }
    content.vb: Public Property NoTransform As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if a cache or proxy must not change any aspect of the entity-body; otherwise, false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  id: OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnlyIfCached
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 106
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.
  syntax:
    content: public bool OnlyIfCached { get; set; }
    content.vb: Public Property OnlyIfCached As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.Private
  id: Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Private
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 118
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.
  syntax:
    content: public bool Private { get; set; }
    content.vb: Public Property Private As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  id: PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PrivateHeaders
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 124
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: A collection fieldnames in the "private" directive in a cache-control header field on an HTTP response.
  syntax:
    content: public Collections.Generic.ICollection<string> PrivateHeaders { get; }
    content.vb: Public ReadOnly Property PrivateHeaders As Collections.Generic.ICollection(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: Returns <xref href="System.Collections.Generic.ICollection`1" data-throw-if-not-resolved="false"></xref>.A collection of fieldnames.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  id: ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProxyRevalidate
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 142
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.
  syntax:
    content: public bool ProxyRevalidate { get; set; }
    content.vb: Public Property ProxyRevalidate As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.Public
  id: Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Public
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 112
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.
  syntax:
    content: public bool Public { get; set; }
    content.vb: Public Property Public As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  id: SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SharedMaxAge
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 76
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: The shared maximum age, specified in seconds, in an HTTP response that overrides the "max-age" directive in a cache-control header or an Expires header for a shared cache.
  syntax:
    content: public Nullable<TimeSpan> SharedMaxAge { get; set; }
    content.vb: Public Property SharedMaxAge As Nullable(Of TimeSpan)
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: Returns <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref>.The time in seconds.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 276
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Determines whether the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current <xref href="System.Net.Http.Headers.CacheControlHeaderValue" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current object; otherwise, false.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 315
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Serves as a hash function for a  <xref href="System.Net.Http.Headers.CacheControlHeaderValue" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.A hash code for the current object.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 359
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Converts a string to an <xref href="System.Net.Http.Headers.CacheControlHeaderValue" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public static CacheControlHeaderValue Parse(string input)
    content.vb: Public Shared Function Parse(input As String) As CacheControlHeaderValue
    parameters:
    - id: input
      type: System.String
      description: A string that represents cache-control header value information.
    return:
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: Returns <xref href="System.Net.Http.Headers.CacheControlHeaderValue" data-throw-if-not-resolved="false"></xref>.A <xref href="System.Net.Http.Headers.CacheControlHeaderValue" data-throw-if-not-resolved="false"></xref> instance.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>input</em> is a null reference."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>input</em> is not valid cache-control header value information."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 207
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Returns a string that represents the current <xref href="System.Net.Http.Headers.CacheControlHeaderValue" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: Returns <xref href="System.String" data-throw-if-not-resolved="false"></xref>.A string that represents the current object.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  - vb
  name: TryParse(String, out CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String, out System.Net.Http.Headers.CacheControlHeaderValue)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Net.Http/src/System/Net/Http/Headers/CacheControlHeaderValue.cs
    startLine: 365
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Determines whether a string is valid <xref href="System.Net.Http.Headers.CacheControlHeaderValue" data-throw-if-not-resolved="false"></xref> information.
  syntax:
    content: public static bool TryParse(string input, out CacheControlHeaderValue parsedValue)
    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As CacheControlHeaderValue) As Boolean
    parameters:
    - id: input
      type: System.String
      description: The string to validate.
    - id: parsedValue
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: The <xref href="System.Net.Http.Headers.CacheControlHeaderValue" data-throw-if-not-resolved="false"></xref> version of the string.
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if <em>input</em> is valid <xref href="System.Net.Http.Headers.CacheControlHeaderValue" data-throw-if-not-resolved="false"></xref> information; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.CacheControlHeaderValue)
  name.vb: TryParse(String, ByRef CacheControlHeaderValue)
references:
- uid: System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
  definition: System.Collections.Generic.ICollection`1
  name: Collections.Generic.ICollection<NameValueHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.Http.Headers.NameValueHeaderValue)
  name.vb: Collections.Generic.ICollection(Of NameValueHeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: Collections.Generic.ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    fullName: System.Net.Http.Headers.NameValueHeaderValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: Collections.Generic.ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    fullName: System.Net.Http.Headers.NameValueHeaderValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  parent: System.Collections.Generic
  isExternal: false
  name: Generic.ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  fullname.vb: System.Collections.Generic.ICollection(Of )
  name.vb: Generic.ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: Generic.ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: Generic.ICollection
    fullName: System.Collections.Generic.ICollection
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable{System.TimeSpan}
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: false
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1
  name: Collections.Generic.ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  fullname.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: Collections.Generic.ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: Collections.Generic.ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: Collections.Generic.ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
