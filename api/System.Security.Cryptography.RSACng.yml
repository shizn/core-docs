items:
- uid: System.Security.Cryptography.RSACng
  commentId: T:System.Security.Cryptography.RSACng
  id: RSACng
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.RSACng.#ctor
  - System.Security.Cryptography.RSACng.#ctor(System.Int32)
  - System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  - System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSACng.Key
  - System.Security.Cryptography.RSACng.LegalKeySizes
  - System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  langs:
  - csharp
  - vb
  name: RSACng
  fullName: System.Security.Cryptography.RSACng
  type: Class
  source:
    remote:
      path: src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RSACng
    path: src/Common/src/System/Security/Cryptography/RSACng.SignVerify.cs
    startLine: 22
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: 'Provides a Cryptography Next Generation (CNG) implementation of the RSA algorithm. '
  syntax:
    content: 'public sealed class RSACng : RSA'
    content.vb: >-
      Public NotInheritable Class RSACng
          Inherits RSA
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.RSACng.#ctor
  commentId: M:System.Security.Cryptography.RSACng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: RSACng()
  fullName: System.Security.Cryptography.RSACng.RSACng()
  type: Constructor
  source:
    remote:
      path: src/Common/src/System/Security/Cryptography/RSACng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/Common/src/System/Security/Cryptography/RSACng.cs
    startLine: 20
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: 'Initializes a new instance of the <xref href="System.Security.Cryptography.RSACng" data-throw-if-not-resolved="false"></xref> class with a random 2,048-bit key pair. '
  syntax:
    content: public RSACng()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)
  commentId: M:System.Security.Cryptography.RSACng.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: RSACng(Int32)
  fullName: System.Security.Cryptography.RSACng.RSACng(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Common/src/System/Security/Cryptography/RSACng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/Common/src/System/Security/Cryptography/RSACng.cs
    startLine: 32
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: 'Initializes a new instance of the <xref href="System.Security.Cryptography.RSACng" data-throw-if-not-resolved="false"></xref> class with a randomly generated key of the specified size. '
  syntax:
    content: public RSACng(int keySize)
    content.vb: Public Sub New(keySize As Integer)
    parameters:
    - id: keySize
      type: System.Int32
      description: 'The size of the key to generate in bits. '
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<em>keySize</em> is not valid. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  commentId: M:System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  id: '#ctor(System.Security.Cryptography.CngKey)'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: RSACng(CngKey)
  fullName: System.Security.Cryptography.RSACng.RSACng(System.Security.Cryptography.CngKey)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/RSACng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/RSACng.cs
    startLine: 22
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: 'Initializes a new instance of the <xref href="System.Security.Cryptography.RSACng" data-throw-if-not-resolved="false"></xref> class with the specified key. '
  syntax:
    content: public RSACng(CngKey key)
    content.vb: Public Sub New(key As CngKey)
    parameters:
    - id: key
      type: System.Security.Cryptography.CngKey
      description: 'The key to use for RSA operations. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>key</em> is not a valid RSA key. "
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSACng.Key
  commentId: P:System.Security.Cryptography.RSACng.Key
  id: Key
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: Key
  fullName: System.Security.Cryptography.RSACng.Key
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/RSACng.Key.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Key
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/RSACng.Key.cs
    startLine: 20
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: 'Gets the key that will be used by the <xref href="System.Security.Cryptography.RSACng" data-throw-if-not-resolved="false"></xref> object for any cryptographic operation that it performs. '
  syntax:
    content: public CngKey Key { get; }
    content.vb: Public ReadOnly Property Key As CngKey
    parameters: []
    return:
      type: System.Security.Cryptography.CngKey
      description: 'The key used by the <xref href="System.Security.Cryptography.RSACng" data-throw-if-not-resolved="false"></xref> object. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.RSACng.LegalKeySizes
  commentId: P:System.Security.Cryptography.RSACng.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: LegalKeySizes
  fullName: System.Security.Cryptography.RSACng.LegalKeySizes
  type: Property
  source:
    remote:
      path: src/Common/src/System/Security/Cryptography/RSACng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LegalKeySizes
    path: src/Common/src/System/Security/Cryptography/RSACng.cs
    startLine: 38
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public override KeySizes[] LegalKeySizes { get; }
    content.vb: Public Overrides ReadOnly Property LegalKeySizes As KeySizes()
    parameters: []
    return:
      type: System.Security.Cryptography.KeySizes[]
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  commentId: M:System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: Decrypt(Byte[], RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Decrypt(System.Byte[], System.Security.Cryptography.RSAEncryptionPadding)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Decrypt
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 280
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Decrypts input data using the specified padding mode.
  syntax:
    content: public override byte[] Decrypt(byte[] data, RSAEncryptionPadding padding)
    content.vb: Public Overrides Function Decrypt(data As Byte(), padding As RSAEncryptionPadding) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to decrypt.
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The decrypted data.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>data</em> is null. -or-<em>padding</em> is null. "
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<em>padding</em> does not equal <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Pkcs1\" data-throw-if-not-resolved=\"false\"></xref>, or else the <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\" data-throw-if-not-resolved=\"false\"></xref> of <em>padding</em> does not equal <xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep\" data-throw-if-not-resolved=\"false\"></xref>.    "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.Cryptography.RSACng.Decrypt(System.Byte(), System.Security.Cryptography.RSAEncryptionPadding)
  name.vb: Decrypt(Byte(), RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/RSACng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/RSACng.cs
    startLine: 33
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  commentId: M:System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: Encrypt(Byte[], RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Encrypt(System.Byte[], System.Security.Cryptography.RSAEncryptionPadding)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encrypt
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 282
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Encrypts the input data using the specified padding.
  syntax:
    content: public override byte[] Encrypt(byte[] data, RSAEncryptionPadding padding)
    content.vb: Public Overrides Function Encrypt(data As Byte(), padding As RSAEncryptionPadding) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to encrypt.
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: Returns <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> .
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>data</em> is null. -or-<em>padding</em> is null."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<em>padding</em> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.Cryptography.RSACng.Encrypt(System.Byte(), System.Security.Cryptography.RSAEncryptionPadding)
  name.vb: Encrypt(Byte(), RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  commentId: M:System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Common/src/System/Security/Cryptography/RSACng.ImportExport.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExportParameters
    path: src/Common/src/System/Security/Cryptography/RSACng.ImportExport.cs
    startLine: 115
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: 'Exports the key used by the RSA object into an <xref href="System.Security.Cryptography.RSAParameters" data-throw-if-not-resolved="false"></xref> object. '
  syntax:
    content: public override RSAParameters ExportParameters(bool includePrivateParameters)
    content.vb: Public Overrides Function ExportParameters(includePrivateParameters As Boolean) As RSAParameters
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: 'true to include private parameters; otherwise, false. '
    return:
      type: System.Security.Cryptography.RSAParameters
      description: 'The key used by the RSA object. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  commentId: M:System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: HashData(Byte[], Int32, Int32, HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(System.Byte[], System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashData
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 284
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData(byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm)
    content.vb: Protected Overrides Function HashData(data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
    return:
      type: System.Byte[]
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Security.Cryptography.RSACng.HashData(System.Byte(), System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName)
  name.vb: HashData(Byte(), Int32, Int32, HashAlgorithmName)
- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  commentId: M:System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: HashData(IO.Stream, HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(System.IO.Stream, System.Security.Cryptography.HashAlgorithmName)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashData
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 285
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData(IO.Stream data, HashAlgorithmName hashAlgorithm)
    content.vb: Protected Overrides Function HashData(data As IO.Stream, hashAlgorithm As HashAlgorithmName) As Byte()
    parameters:
    - id: data
      type: System.IO.Stream
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
    return:
      type: System.Byte[]
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  commentId: M:System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ImportParameters
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 286
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: 'Replaces the existing key that the current instance is working with by creating a new <xref href="System.Security.Cryptography.CngKey" data-throw-if-not-resolved="false"></xref> for the parameters structure. '
  syntax:
    content: public override void ImportParameters(RSAParameters parameters)
    content.vb: Public Overrides Sub ImportParameters(parameters As RSAParameters)
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: 'The RSA parameters. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>parameters</em> contains neither an exponent nor a modulus. "
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<em>parameters</em> is not a valid RSA key. -or-<em>parameters</em> is a full key pair and the default KSP is used. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.SignHash(System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignHash
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 287
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: Signs data that was hashed by using the specified hashing algorithm and padding mode.
  syntax:
    content: public override byte[] SignHash(byte[] hash, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Overrides Function SignHash(hash As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Byte()
    parameters:
    - id: hash
      type: System.Byte[]
      description: The hash to sign.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm name.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The signed data.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>hash</em> is null. -or-<em>padding</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The value of the <xref href="System.Security.Cryptography.HashAlgorithmName.Name" data-throw-if-not-resolved="false"></xref> property of <em>hashAlgorithm</em> is null or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>. '
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<em>padding</em> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.Cryptography.RSACng.SignHash(System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  name.vb: SignHash(Byte(), HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  - vb
  name: VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[], System.Byte[], System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerifyHash
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 288
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: 'Verifies data that was signed and already hashed with the specified algorithm and padding mode. '
  syntax:
    content: public override bool VerifyHash(byte[] hash, byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
    content.vb: Public Overrides Function VerifyHash(hash As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Boolean
    parameters:
    - id: hash
      type: System.Byte[]
      description: 'The hash to verify. '
    - id: signature
      type: System.Byte[]
      description: 'The signature of the data. '
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: 'The hash algorithm name. '
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: 'The padding mode. '
    return:
      type: System.Boolean
      description: 'true if the signature verifies for the hash; otherwise, false. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>hash</em> is null. -or-<em>signature</em> is null. -or-<em>padding</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The value of the <xref href="System.Security.Cryptography.HashAlgorithmName.Name" data-throw-if-not-resolved="false"></xref> property of <em>hashAlgorithm</em> is null or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>. '
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<em>padding</em> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.Cryptography.RSACng.VerifyHash(System.Byte(), System.Byte(), System.Security.Cryptography.HashAlgorithmName, System.Security.Cryptography.RSASignaturePadding)
  name.vb: VerifyHash(Byte(), Byte(), HashAlgorithmName, RSASignaturePadding)
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.KeySizes[]
  isExternal: false
  name: KeySizes[]
  fullName: System.Security.Cryptography.KeySizes[]
  fullname.vb: System.Security.Cryptography.KeySizes()
  name.vb: KeySizes()
  spec.csharp:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    fullName: System.Security.Cryptography.KeySizes
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    fullName: System.Security.Cryptography.KeySizes
  - name: ()
    fullName: ()
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
