items:
- uid: System.Reflection.Emit.CustomAttributeBuilder
  commentId: T:System.Reflection.Emit.CustomAttributeBuilder
  id: CustomAttributeBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])
  langs:
  - csharp
  - vb
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CustomAttributeBuilder
    path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs
    startLine: 26
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Helps build custom attributes.
  syntax:
    content: 'public class CustomAttributeBuilder : object'
    content.vb: >-
      Public Class CustomAttributeBuilder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])
  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  - vb
  name: CustomAttributeBuilder(ConstructorInfo, Object[])
  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object[])
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs
    startLine: 34
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Initializes an instance of the CustomAttributeBuilder class given the constructor for the custom attribute and the arguments to the constructor.
  syntax:
    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs)
    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: 'The constructor for the custom attribute. '
    - id: constructorArgs
      type: System.Object[]
      description: 'The arguments to the constructor of the custom attribute. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>con</em> is static or private.-or- The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.-or- The type of supplied argument does not match the type of the parameter declared in the constructor. -or-A supplied argument is a reference type other than <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>con</em> or <em>constructorArgs</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object())
  name.vb: CustomAttributeBuilder(ConstructorInfo, Object())
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])
  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  - vb
  name: CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])
  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object[], System.Reflection.FieldInfo[], System.Object[])
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs
    startLine: 52
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Initializes an instance of the CustomAttributeBuilder class given the constructor for the custom attribute, the arguments to the constructor, and a set of named field/value pairs.
  syntax:
    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs, FieldInfo[] namedFields, object[] fieldValues)
    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object(), namedFields As FieldInfo(), fieldValues As Object())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: 'The constructor for the custom attribute. '
    - id: constructorArgs
      type: System.Object[]
      description: 'The arguments to the constructor of the custom attribute. '
    - id: namedFields
      type: System.Reflection.FieldInfo[]
      description: 'Named fields of the custom attribute. '
    - id: fieldValues
      type: System.Object[]
      description: 'Values for the named fields of the custom attribute. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The lengths of the <em>namedFields</em> and <em>fieldValues</em> arrays are different.-or- <em>con</em> is static or private.-or- The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.-or- The type of supplied argument does not match the type of the parameter declared in the constructor.-or- The types of the field values do not match the types of the named fields.-or- The field does not belong to the same class or base class as the constructor. -or-A supplied argument or named field is a reference type other than <xref href="System.String" data-throw-if-not-resolved="false"></xref> or <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'One of the parameters is null. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object(), System.Reflection.FieldInfo(), System.Object())
  name.vb: CustomAttributeBuilder(ConstructorInfo, Object(), FieldInfo(), Object())
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])
  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  - vb
  name: CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])
  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object[], System.Reflection.PropertyInfo[], System.Object[])
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs
    startLine: 43
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Initializes an instance of the CustomAttributeBuilder class given the constructor for the custom attribute, the arguments to the constructor, and a set of named property or value pairs.
  syntax:
    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs, PropertyInfo[] namedProperties, object[] propertyValues)
    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object(), namedProperties As PropertyInfo(), propertyValues As Object())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: 'The constructor for the custom attribute. '
    - id: constructorArgs
      type: System.Object[]
      description: 'The arguments to the constructor of the custom attribute. '
    - id: namedProperties
      type: System.Reflection.PropertyInfo[]
      description: 'Named properties of the custom attribute. '
    - id: propertyValues
      type: System.Object[]
      description: 'Values for the named properties of the custom attribute. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The lengths of the <em>namedProperties</em> and <em>propertyValues</em> arrays are different.-or- <em>con</em> is static or private.-or- The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.-or- The type of supplied argument does not match the type of the parameter declared in the constructor.-or- The types of the property values do not match the types of the named properties.-or- A property has no setter method.-or- The property does not belong to the same class or base class as the constructor. -or-A supplied argument or named property is a reference type other than <xref href="System.String" data-throw-if-not-resolved="false"></xref> or <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'One of the parameters is null. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object(), System.Reflection.PropertyInfo(), System.Object())
  name.vb: CustomAttributeBuilder(ConstructorInfo, Object(), PropertyInfo(), Object())
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])
  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  - vb
  name: CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])
  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object[], System.Reflection.PropertyInfo[], System.Object[], System.Reflection.FieldInfo[], System.Object[])
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs
    startLine: 61
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Initializes an instance of the CustomAttributeBuilder class given the constructor for the custom attribute, the arguments to the constructor, a set of named property or value pairs, and a set of named field or value pairs.
  syntax:
    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs, PropertyInfo[] namedProperties, object[] propertyValues, FieldInfo[] namedFields, object[] fieldValues)
    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object(), namedProperties As PropertyInfo(), propertyValues As Object(), namedFields As FieldInfo(), fieldValues As Object())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: 'The constructor for the custom attribute. '
    - id: constructorArgs
      type: System.Object[]
      description: 'The arguments to the constructor of the custom attribute. '
    - id: namedProperties
      type: System.Reflection.PropertyInfo[]
      description: 'Named properties of the custom attribute. '
    - id: propertyValues
      type: System.Object[]
      description: 'Values for the named properties of the custom attribute. '
    - id: namedFields
      type: System.Reflection.FieldInfo[]
      description: 'Named fields of the custom attribute. '
    - id: fieldValues
      type: System.Object[]
      description: 'Values for the named fields of the custom attribute. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The lengths of the <em>namedProperties</em> and <em>propertyValues</em> arrays are different.-or- The lengths of the <em>namedFields</em> and <em>fieldValues</em> arrays are different.-or- <em>con</em> is static or private.-or- The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.-or- The type of supplied argument does not match the type of the parameter declared in the constructor.-or- The types of the property values do not match the types of the named properties.-or- The types of the field values do not match the types of the corresponding field types.-or- A property has no setter.-or- The property or field does not belong to the same class or base class as the constructor. -or-A supplied argument, named property, or named field is a reference type other than <xref href="System.String" data-throw-if-not-resolved="false"></xref> or <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'One of the parameters is null. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object(), System.Reflection.PropertyInfo(), System.Object(), System.Reflection.FieldInfo(), System.Object())
  name.vb: CustomAttributeBuilder(ConstructorInfo, Object(), PropertyInfo(), Object(), FieldInfo(), Object())
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: Reflection.ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.FieldInfo[]
  isExternal: false
  name: FieldInfo[]
  fullName: System.Reflection.FieldInfo[]
  fullname.vb: System.Reflection.FieldInfo()
  name.vb: FieldInfo()
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    fullName: System.Reflection.FieldInfo
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    fullName: System.Reflection.FieldInfo
  - name: ()
    fullName: ()
- uid: System.Reflection.PropertyInfo[]
  isExternal: false
  name: PropertyInfo[]
  fullName: System.Reflection.PropertyInfo[]
  fullname.vb: System.Reflection.PropertyInfo()
  name.vb: PropertyInfo()
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
  - name: ()
    fullName: ()
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
