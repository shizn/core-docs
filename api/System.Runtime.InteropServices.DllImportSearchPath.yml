items:
- uid: System.Runtime.InteropServices.DllImportSearchPath
  commentId: T:System.Runtime.InteropServices.DllImportSearchPath
  id: DllImportSearchPath
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.DllImportSearchPath.ApplicationDirectory
  - System.Runtime.InteropServices.DllImportSearchPath.AssemblyDirectory
  - System.Runtime.InteropServices.DllImportSearchPath.LegacyBehavior
  - System.Runtime.InteropServices.DllImportSearchPath.SafeDirectories
  - System.Runtime.InteropServices.DllImportSearchPath.System32
  - System.Runtime.InteropServices.DllImportSearchPath.UseDllDirectoryForDependencies
  - System.Runtime.InteropServices.DllImportSearchPath.UserDirectories
  langs:
  - csharp
  - vb
  name: DllImportSearchPath
  fullName: System.Runtime.InteropServices.DllImportSearchPath
  type: Enum
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DllImportSearchPath
    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
    startLine: 745
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: 'Specifies the paths that are used to search for DLLs that provide functions for platform invokes. '
  syntax:
    content: 'public enum DllImportSearchPath : int'
    content.vb: Public Enum DllImportSearchPath As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Runtime.InteropServices.DllImportSearchPath.ApplicationDirectory
  commentId: F:System.Runtime.InteropServices.DllImportSearchPath.ApplicationDirectory
  id: ApplicationDirectory
  parent: System.Runtime.InteropServices.DllImportSearchPath
  langs:
  - csharp
  - vb
  name: ApplicationDirectory
  fullName: System.Runtime.InteropServices.DllImportSearchPath.ApplicationDirectory
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ApplicationDirectory
    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
    startLine: 749
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: 'Include the application directory in the DLL search path. '
  syntax:
    content: ApplicationDirectory = null
    content.vb: ApplicationDirectory = Nothing
    return:
      type: System.Runtime.InteropServices.DllImportSearchPath
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Runtime.InteropServices.DllImportSearchPath.AssemblyDirectory
  commentId: F:System.Runtime.InteropServices.DllImportSearchPath.AssemblyDirectory
  id: AssemblyDirectory
  parent: System.Runtime.InteropServices.DllImportSearchPath
  langs:
  - csharp
  - vb
  name: AssemblyDirectory
  fullName: System.Runtime.InteropServices.DllImportSearchPath.AssemblyDirectory
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AssemblyDirectory
    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
    startLine: 753
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: 'When searching for assembly dependencies, include the directory that contains the assembly itself, and search that directory first. This value is used by the .NET Framework, before the paths are passed to the Win32 LoadLibraryEx function. '
  syntax:
    content: AssemblyDirectory = null
    content.vb: AssemblyDirectory = Nothing
    return:
      type: System.Runtime.InteropServices.DllImportSearchPath
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Runtime.InteropServices.DllImportSearchPath.LegacyBehavior
  commentId: F:System.Runtime.InteropServices.DllImportSearchPath.LegacyBehavior
  id: LegacyBehavior
  parent: System.Runtime.InteropServices.DllImportSearchPath
  langs:
  - csharp
  - vb
  name: LegacyBehavior
  fullName: System.Runtime.InteropServices.DllImportSearchPath.LegacyBehavior
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LegacyBehavior
    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
    startLine: 754
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: 'Search the application directory, and then call the Win32 LoadLibraryEx function with the LOAD_WITH_ALTERED_SEARCH_PATH flag. This value is ignored if any other value is specified. Operating systems that do not support the <xref href="System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" data-throw-if-not-resolved="false"></xref> attribute use this value, and ignore other values. '
  syntax:
    content: LegacyBehavior = null
    content.vb: LegacyBehavior = Nothing
    return:
      type: System.Runtime.InteropServices.DllImportSearchPath
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Runtime.InteropServices.DllImportSearchPath.SafeDirectories
  commentId: F:System.Runtime.InteropServices.DllImportSearchPath.SafeDirectories
  id: SafeDirectories
  parent: System.Runtime.InteropServices.DllImportSearchPath
  langs:
  - csharp
  - vb
  name: SafeDirectories
  fullName: System.Runtime.InteropServices.DllImportSearchPath.SafeDirectories
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SafeDirectories
    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
    startLine: 752
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: 'Include the application directory, the %WinDir%\System32 directory, and user directories in the DLL search path. '
  syntax:
    content: SafeDirectories = null
    content.vb: SafeDirectories = Nothing
    return:
      type: System.Runtime.InteropServices.DllImportSearchPath
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Runtime.InteropServices.DllImportSearchPath.System32
  commentId: F:System.Runtime.InteropServices.DllImportSearchPath.System32
  id: System32
  parent: System.Runtime.InteropServices.DllImportSearchPath
  langs:
  - csharp
  - vb
  name: System32
  fullName: System.Runtime.InteropServices.DllImportSearchPath.System32
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System32
    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
    startLine: 751
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: 'Include the %WinDir%\System32 directory in the DLL search path. '
  syntax:
    content: System32 = null
    content.vb: System32 = Nothing
    return:
      type: System.Runtime.InteropServices.DllImportSearchPath
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Runtime.InteropServices.DllImportSearchPath.UseDllDirectoryForDependencies
  commentId: F:System.Runtime.InteropServices.DllImportSearchPath.UseDllDirectoryForDependencies
  id: UseDllDirectoryForDependencies
  parent: System.Runtime.InteropServices.DllImportSearchPath
  langs:
  - csharp
  - vb
  name: UseDllDirectoryForDependencies
  fullName: System.Runtime.InteropServices.DllImportSearchPath.UseDllDirectoryForDependencies
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UseDllDirectoryForDependencies
    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
    startLine: 748
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: 'Search for the dependencies of a DLL in the folder where the DLL is located before searching other folders. '
  syntax:
    content: UseDllDirectoryForDependencies = null
    content.vb: UseDllDirectoryForDependencies = Nothing
    return:
      type: System.Runtime.InteropServices.DllImportSearchPath
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Runtime.InteropServices.DllImportSearchPath.UserDirectories
  commentId: F:System.Runtime.InteropServices.DllImportSearchPath.UserDirectories
  id: UserDirectories
  parent: System.Runtime.InteropServices.DllImportSearchPath
  langs:
  - csharp
  - vb
  name: UserDirectories
  fullName: System.Runtime.InteropServices.DllImportSearchPath.UserDirectories
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UserDirectories
    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs
    startLine: 750
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: 'Include any path that was explicitly added to the process-wide search path by using the Win32 AddDllDirectory function. '
  syntax:
    content: UserDirectories = null
    content.vb: UserDirectories = Nothing
    return:
      type: System.Runtime.InteropServices.DllImportSearchPath
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Runtime.InteropServices.DllImportSearchPath
  parent: System.Runtime.InteropServices
  isExternal: false
  name: DllImportSearchPath
  fullName: System.Runtime.InteropServices.DllImportSearchPath
