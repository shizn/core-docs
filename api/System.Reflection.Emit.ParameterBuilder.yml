items:
- uid: System.Reflection.Emit.ParameterBuilder
  commentId: T:System.Reflection.Emit.ParameterBuilder
  id: ParameterBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.ParameterBuilder.Attributes
  - System.Reflection.Emit.ParameterBuilder.IsIn
  - System.Reflection.Emit.ParameterBuilder.IsOptional
  - System.Reflection.Emit.ParameterBuilder.IsOut
  - System.Reflection.Emit.ParameterBuilder.Name
  - System.Reflection.Emit.ParameterBuilder.Position
  - System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  langs:
  - csharp
  - vb
  name: ParameterBuilder
  fullName: System.Reflection.Emit.ParameterBuilder
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParameterBuilder
    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
    startLine: 21
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Creates or associates parameter information.
  syntax:
    content: 'public class ParameterBuilder : object'
    content.vb: >-
      Public Class ParameterBuilder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.Emit.ParameterBuilder.Attributes
  commentId: P:System.Reflection.Emit.ParameterBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  fullName: System.Reflection.Emit.ParameterBuilder.Attributes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Attributes
    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
    startLine: 151
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Retrieves the attributes for this parameter.
  syntax:
    content: public virtual int Attributes { get; }
    content.vb: Public Overridable ReadOnly Property Attributes As Integer
    parameters: []
    return:
      type: System.Int32
      description: Read-only. Retrieves the attributes for this parameter.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.IsIn
  commentId: P:System.Reflection.Emit.ParameterBuilder.IsIn
  id: IsIn
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsIn
  fullName: System.Reflection.Emit.ParameterBuilder.IsIn
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsIn
    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
    startLine: 155
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Retrieves whether this is an input parameter.
  syntax:
    content: public bool IsIn { get; }
    content.vb: Public ReadOnly Property IsIn As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Read-only. Retrieves whether this is an input parameter.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.IsOptional
  commentId: P:System.Reflection.Emit.ParameterBuilder.IsOptional
  id: IsOptional
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsOptional
  fullName: System.Reflection.Emit.ParameterBuilder.IsOptional
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsOptional
    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
    startLine: 161
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Retrieves whether this parameter is optional.
  syntax:
    content: public bool IsOptional { get; }
    content.vb: Public ReadOnly Property IsOptional As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Read-only. Specifies whether this parameter is optional.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.IsOut
  commentId: P:System.Reflection.Emit.ParameterBuilder.IsOut
  id: IsOut
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsOut
  fullName: System.Reflection.Emit.ParameterBuilder.IsOut
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsOut
    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
    startLine: 158
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Retrieves whether this parameter is an output parameter.
  syntax:
    content: public bool IsOut { get; }
    content.vb: Public ReadOnly Property IsOut As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Read-only. Retrieves whether this parameter is an output parameter.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.Name
  commentId: P:System.Reflection.Emit.ParameterBuilder.Name
  id: Name
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Reflection.Emit.ParameterBuilder.Name
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Name
    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
    startLine: 143
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Retrieves the name of this parameter.
  syntax:
    content: public virtual string Name { get; }
    content.vb: Public Overridable ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: Read-only. Retrieves the name of this parameter.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.Position
  commentId: P:System.Reflection.Emit.ParameterBuilder.Position
  id: Position
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Position
  fullName: System.Reflection.Emit.ParameterBuilder.Position
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Position
    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
    startLine: 147
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Retrieves the signature position for this parameter.
  syntax:
    content: public virtual int Position { get; }
    content.vb: Public Overridable ReadOnly Property Position As Integer
    parameters: []
    return:
      type: System.Int32
      description: Read-only. Retrieves the signature position for this parameter.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  commentId: M:System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  id: SetConstant(System.Object)
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: SetConstant(Object)
  fullName: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetConstant
    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
    startLine: 46
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Sets the default value of the parameter.
  syntax:
    content: public virtual void SetConstant(object defaultValue)
    content.vb: Public Overridable Sub SetConstant(defaultValue As Object)
    parameters:
    - id: defaultValue
      type: System.Object
      description: 'The default value of this parameter. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The parameter is not one of the supported types.-or-The type of <em>defaultValue</em> does not match the type of the parameter.-or-The parameter is of type <xref href="System.Object" data-throw-if-not-resolved="false"></xref> or other reference type, <em>defaultValue</em> is not null, and the value cannot be assigned to the reference type. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  commentId: M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetCustomAttribute
    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
    startLine: 58
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a specified custom attribute blob.
  syntax:
    content: public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: 'The constructor for the custom attribute. '
    - id: binaryAttribute
      type: System.Byte[]
      description: 'A byte blob representing the attributes. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>con</em> or <em>binaryAttribute</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetCustomAttribute
    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs
    startLine: 77
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a custom attribute builder.
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: 'An instance of a helper class to define the custom attribute. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>con</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: Reflection.ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
