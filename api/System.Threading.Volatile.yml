items:
- uid: System.Threading.Volatile
  commentId: T:System.Threading.Volatile
  id: Volatile
  parent: System.Threading
  children:
  - System.Threading.Volatile.Read(System.Boolean@)
  - System.Threading.Volatile.Read(System.Byte@)
  - System.Threading.Volatile.Read(System.Double@)
  - System.Threading.Volatile.Read(System.Int16@)
  - System.Threading.Volatile.Read(System.Int32@)
  - System.Threading.Volatile.Read(System.Int64@)
  - System.Threading.Volatile.Read(System.IntPtr@)
  - System.Threading.Volatile.Read(System.SByte@)
  - System.Threading.Volatile.Read(System.Single@)
  - System.Threading.Volatile.Read(System.UInt16@)
  - System.Threading.Volatile.Read(System.UInt32@)
  - System.Threading.Volatile.Read(System.UInt64@)
  - System.Threading.Volatile.Read(System.UIntPtr@)
  - System.Threading.Volatile.Read``1(``0@)
  - System.Threading.Volatile.Write(System.Boolean@,System.Boolean)
  - System.Threading.Volatile.Write(System.Byte@,System.Byte)
  - System.Threading.Volatile.Write(System.Double@,System.Double)
  - System.Threading.Volatile.Write(System.Int16@,System.Int16)
  - System.Threading.Volatile.Write(System.Int32@,System.Int32)
  - System.Threading.Volatile.Write(System.Int64@,System.Int64)
  - System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)
  - System.Threading.Volatile.Write(System.SByte@,System.SByte)
  - System.Threading.Volatile.Write(System.Single@,System.Single)
  - System.Threading.Volatile.Write(System.UInt16@,System.UInt16)
  - System.Threading.Volatile.Write(System.UInt32@,System.UInt32)
  - System.Threading.Volatile.Write(System.UInt64@,System.UInt64)
  - System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)
  - System.Threading.Volatile.Write``1(``0@,``0)
  langs:
  - csharp
  - vb
  name: Volatile
  fullName: System.Threading.Volatile
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Volatile
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 26
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Contains methods for performing volatile memory operations.
  syntax:
    content: 'public class Volatile : object'
    content.vb: >-
      Public Class Volatile
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Threading.Volatile.Read(System.Boolean@)
  commentId: M:System.Threading.Volatile.Read(System.Boolean@)
  id: Read(System.Boolean@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref Boolean)
  fullName: System.Threading.Volatile.Read(ref System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 28
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method. '
  syntax:
    content: public static bool Read(ref bool location)
    content.vb: Public Shared Function Read(ByRef location As Boolean) As Boolean
    parameters:
    - id: location
      type: System.Boolean
      description: The field to read.
    return:
      type: System.Boolean
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.Boolean)
  name.vb: Read(ByRef Boolean)
- uid: System.Threading.Volatile.Read(System.Byte@)
  commentId: M:System.Threading.Volatile.Read(System.Byte@)
  id: Read(System.Byte@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref Byte)
  fullName: System.Threading.Volatile.Read(ref System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 51
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static byte Read(ref byte location)
    content.vb: Public Shared Function Read(ByRef location As Byte) As Byte
    parameters:
    - id: location
      type: System.Byte
      description: The field to read.
    return:
      type: System.Byte
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.Byte)
  name.vb: Read(ByRef Byte)
- uid: System.Threading.Volatile.Read(System.Double@)
  commentId: M:System.Threading.Volatile.Read(System.Double@)
  id: Read(System.Double@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref Double)
  fullName: System.Threading.Volatile.Read(ref System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 172
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static double Read(ref double location)
    content.vb: Public Shared Function Read(ByRef location As Double) As Double
    parameters:
    - id: location
      type: System.Double
      description: The field to read.
    return:
      type: System.Double
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.Double)
  name.vb: Read(ByRef Double)
- uid: System.Threading.Volatile.Read(System.Int16@)
  commentId: M:System.Threading.Volatile.Read(System.Int16@)
  id: Read(System.Int16@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref Int16)
  fullName: System.Threading.Volatile.Read(ref System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 62
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static short Read(ref short location)
    content.vb: Public Shared Function Read(ByRef location As Short) As Short
    parameters:
    - id: location
      type: System.Int16
      description: The field to read.
    return:
      type: System.Int16
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.Int16)
  name.vb: Read(ByRef Int16)
- uid: System.Threading.Volatile.Read(System.Int32@)
  commentId: M:System.Threading.Volatile.Read(System.Int32@)
  id: Read(System.Int32@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref Int32)
  fullName: System.Threading.Volatile.Read(ref System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 85
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static int Read(ref int location)
    content.vb: Public Shared Function Read(ByRef location As Integer) As Integer
    parameters:
    - id: location
      type: System.Int32
      description: The field to read.
    return:
      type: System.Int32
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.Int32)
  name.vb: Read(ByRef Int32)
- uid: System.Threading.Volatile.Read(System.Int64@)
  commentId: M:System.Threading.Volatile.Read(System.Int64@)
  id: Read(System.Int64@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref Int64)
  fullName: System.Threading.Volatile.Read(ref System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 108
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static long Read(ref long location)
    content.vb: Public Shared Function Read(ByRef location As Long) As Long
    parameters:
    - id: location
      type: System.Int64
      description: The field to read.
    return:
      type: System.Int64
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.Int64)
  name.vb: Read(ByRef Int64)
- uid: System.Threading.Volatile.Read(System.IntPtr@)
  commentId: M:System.Threading.Volatile.Read(System.IntPtr@)
  id: Read(System.IntPtr@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref IntPtr)
  fullName: System.Threading.Volatile.Read(ref System.IntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 138
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static IntPtr Read(ref IntPtr location)
    content.vb: Public Shared Function Read(ByRef location As IntPtr) As IntPtr
    parameters:
    - id: location
      type: System.IntPtr
      description: The field to read.
    return:
      type: System.IntPtr
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.IntPtr)
  name.vb: Read(ByRef IntPtr)
- uid: System.Threading.Volatile.Read(System.SByte@)
  commentId: M:System.Threading.Volatile.Read(System.SByte@)
  id: Read(System.SByte@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref SByte)
  fullName: System.Threading.Volatile.Read(ref System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 39
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static sbyte Read(ref sbyte location)
    content.vb: Public Shared Function Read(ByRef location As SByte) As SByte
    parameters:
    - id: location
      type: System.SByte
      description: The field to read.
    return:
      type: System.SByte
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.SByte)
  name.vb: Read(ByRef SByte)
- uid: System.Threading.Volatile.Read(System.Single@)
  commentId: M:System.Threading.Volatile.Read(System.Single@)
  id: Read(System.Single@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref Single)
  fullName: System.Threading.Volatile.Read(ref System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 161
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static float Read(ref float location)
    content.vb: Public Shared Function Read(ByRef location As Single) As Single
    parameters:
    - id: location
      type: System.Single
      description: The field to read.
    return:
      type: System.Single
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.Single)
  name.vb: Read(ByRef Single)
- uid: System.Threading.Volatile.Read(System.UInt16@)
  commentId: M:System.Threading.Volatile.Read(System.UInt16@)
  id: Read(System.UInt16@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref UInt16)
  fullName: System.Threading.Volatile.Read(ref System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 73
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static ushort Read(ref ushort location)
    content.vb: Public Shared Function Read(ByRef location As UShort) As UShort
    parameters:
    - id: location
      type: System.UInt16
      description: The field to read.
    return:
      type: System.UInt16
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.UInt16)
  name.vb: Read(ByRef UInt16)
- uid: System.Threading.Volatile.Read(System.UInt32@)
  commentId: M:System.Threading.Volatile.Read(System.UInt32@)
  id: Read(System.UInt32@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref UInt32)
  fullName: System.Threading.Volatile.Read(ref System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 96
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static uint Read(ref uint location)
    content.vb: Public Shared Function Read(ByRef location As UInteger) As UInteger
    parameters:
    - id: location
      type: System.UInt32
      description: The field to read.
    return:
      type: System.UInt32
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.UInt32)
  name.vb: Read(ByRef UInt32)
- uid: System.Threading.Volatile.Read(System.UInt64@)
  commentId: M:System.Threading.Volatile.Read(System.UInt64@)
  id: Read(System.UInt64@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref UInt64)
  fullName: System.Threading.Volatile.Read(ref System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 120
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static ulong Read(ref ulong location)
    content.vb: Public Shared Function Read(ByRef location As ULong) As ULong
    parameters:
    - id: location
      type: System.UInt64
      description: The field to read.
    return:
      type: System.UInt64
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.UInt64)
  name.vb: Read(ByRef UInt64)
- uid: System.Threading.Volatile.Read(System.UIntPtr@)
  commentId: M:System.Threading.Volatile.Read(System.UIntPtr@)
  id: Read(System.UIntPtr@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read(ref UIntPtr)
  fullName: System.Threading.Volatile.Read(ref System.UIntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 149
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: public static UIntPtr Read(ref UIntPtr location)
    content.vb: Public Shared Function Read(ByRef location As UIntPtr) As UIntPtr
    parameters:
    - id: location
      type: System.UIntPtr
      description: The field to read.
    return:
      type: System.UIntPtr
      description: 'The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(ByRef System.UIntPtr)
  name.vb: Read(ByRef UIntPtr)
- uid: System.Threading.Volatile.Read``1(``0@)
  commentId: M:System.Threading.Volatile.Read``1(``0@)
  id: Read``1(``0@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Read<T>(ref T)
  fullName: System.Threading.Volatile.Read<T>(ref T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 184
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Reads the object reference from the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  syntax:
    content: 'public static T Read<T>(ref T location)where T : class'
    content.vb: Public Shared Function Read(Of T As Class)(ByRef location As T) As T
    parameters:
    - id: location
      type: '{T}'
      description: The field to read.
    typeParameters:
    - id: T
      description: The type of field to read. This must be a reference type, not a value type.
    return:
      type: '{T}'
      description: 'The reference to <em>T</em> that was read. This reference is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Read(Of T)(ByRef T)
  name.vb: Read(Of T)(ByRef T)
- uid: System.Threading.Volatile.Write(System.Boolean@,System.Boolean)
  commentId: M:System.Threading.Volatile.Write(System.Boolean@,System.Boolean)
  id: Write(System.Boolean@,System.Boolean)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref Boolean, Boolean)
  fullName: System.Threading.Volatile.Write(ref System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 199
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref bool location, bool value)
    content.vb: Public Shared Sub Write(ByRef location As Boolean, value As Boolean)
    parameters:
    - id: location
      type: System.Boolean
      description: The field where the value is written.
    - id: value
      type: System.Boolean
      description: 'The value to write. The value is written immediately so that it is visible to all processors in the computer. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.Boolean, System.Boolean)
  name.vb: Write(ByRef Boolean, Boolean)
- uid: System.Threading.Volatile.Write(System.Byte@,System.Byte)
  commentId: M:System.Threading.Volatile.Write(System.Byte@,System.Byte)
  id: Write(System.Byte@,System.Byte)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref Byte, Byte)
  fullName: System.Threading.Volatile.Write(ref System.Byte, System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 220
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref byte location, byte value)
    content.vb: Public Shared Sub Write(ByRef location As Byte, value As Byte)
    parameters:
    - id: location
      type: System.Byte
      description: The field where the value is written.
    - id: value
      type: System.Byte
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.Byte, System.Byte)
  name.vb: Write(ByRef Byte, Byte)
- uid: System.Threading.Volatile.Write(System.Double@,System.Double)
  commentId: M:System.Threading.Volatile.Write(System.Double@,System.Double)
  id: Write(System.Double@,System.Double)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref Double, Double)
  fullName: System.Threading.Volatile.Write(ref System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 339
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref double location, double value)
    content.vb: Public Shared Sub Write(ByRef location As Double, value As Double)
    parameters:
    - id: location
      type: System.Double
      description: The field where the value is written.
    - id: value
      type: System.Double
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.Double, System.Double)
  name.vb: Write(ByRef Double, Double)
- uid: System.Threading.Volatile.Write(System.Int16@,System.Int16)
  commentId: M:System.Threading.Volatile.Write(System.Int16@,System.Int16)
  id: Write(System.Int16@,System.Int16)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref Int16, Int16)
  fullName: System.Threading.Volatile.Write(ref System.Int16, System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 230
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref short location, short value)
    content.vb: Public Shared Sub Write(ByRef location As Short, value As Short)
    parameters:
    - id: location
      type: System.Int16
      description: The field where the value is written.
    - id: value
      type: System.Int16
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.Int16, System.Int16)
  name.vb: Write(ByRef Int16, Int16)
- uid: System.Threading.Volatile.Write(System.Int32@,System.Int32)
  commentId: M:System.Threading.Volatile.Write(System.Int32@,System.Int32)
  id: Write(System.Int32@,System.Int32)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref Int32, Int32)
  fullName: System.Threading.Volatile.Write(ref System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 251
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref int location, int value)
    content.vb: Public Shared Sub Write(ByRef location As Integer, value As Integer)
    parameters:
    - id: location
      type: System.Int32
      description: The field where the value is written.
    - id: value
      type: System.Int32
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.Int32, System.Int32)
  name.vb: Write(ByRef Int32, Int32)
- uid: System.Threading.Volatile.Write(System.Int64@,System.Int64)
  commentId: M:System.Threading.Volatile.Write(System.Int64@,System.Int64)
  id: Write(System.Int64@,System.Int64)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref Int64, Int64)
  fullName: System.Threading.Volatile.Write(ref System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 272
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a memory operation appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref long location, long value)
    content.vb: Public Shared Sub Write(ByRef location As Long, value As Long)
    parameters:
    - id: location
      type: System.Int64
      description: The field where the value is written.
    - id: value
      type: System.Int64
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.Int64, System.Int64)
  name.vb: Write(ByRef Int64, Int64)
- uid: System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)
  commentId: M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)
  id: Write(System.IntPtr@,System.IntPtr)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref IntPtr, IntPtr)
  fullName: System.Threading.Volatile.Write(ref System.IntPtr, System.IntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 308
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref IntPtr location, IntPtr value)
    content.vb: Public Shared Sub Write(ByRef location As IntPtr, value As IntPtr)
    parameters:
    - id: location
      type: System.IntPtr
      description: The field where the value is written.
    - id: value
      type: System.IntPtr
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.IntPtr, System.IntPtr)
  name.vb: Write(ByRef IntPtr, IntPtr)
- uid: System.Threading.Volatile.Write(System.SByte@,System.SByte)
  commentId: M:System.Threading.Volatile.Write(System.SByte@,System.SByte)
  id: Write(System.SByte@,System.SByte)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref SByte, SByte)
  fullName: System.Threading.Volatile.Write(ref System.SByte, System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 209
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref sbyte location, sbyte value)
    content.vb: Public Shared Sub Write(ByRef location As SByte, value As SByte)
    parameters:
    - id: location
      type: System.SByte
      description: The field where the value is written.
    - id: value
      type: System.SByte
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.SByte, System.SByte)
  name.vb: Write(ByRef SByte, SByte)
- uid: System.Threading.Volatile.Write(System.Single@,System.Single)
  commentId: M:System.Threading.Volatile.Write(System.Single@,System.Single)
  id: Write(System.Single@,System.Single)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref Single, Single)
  fullName: System.Threading.Volatile.Write(ref System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 329
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref float location, float value)
    content.vb: Public Shared Sub Write(ByRef location As Single, value As Single)
    parameters:
    - id: location
      type: System.Single
      description: The field where the value is written.
    - id: value
      type: System.Single
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.Single, System.Single)
  name.vb: Write(ByRef Single, Single)
- uid: System.Threading.Volatile.Write(System.UInt16@,System.UInt16)
  commentId: M:System.Threading.Volatile.Write(System.UInt16@,System.UInt16)
  id: Write(System.UInt16@,System.UInt16)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref UInt16, UInt16)
  fullName: System.Threading.Volatile.Write(ref System.UInt16, System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 240
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref ushort location, ushort value)
    content.vb: Public Shared Sub Write(ByRef location As UShort, value As UShort)
    parameters:
    - id: location
      type: System.UInt16
      description: The field where the value is written.
    - id: value
      type: System.UInt16
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.UInt16, System.UInt16)
  name.vb: Write(ByRef UInt16, UInt16)
- uid: System.Threading.Volatile.Write(System.UInt32@,System.UInt32)
  commentId: M:System.Threading.Volatile.Write(System.UInt32@,System.UInt32)
  id: Write(System.UInt32@,System.UInt32)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref UInt32, UInt32)
  fullName: System.Threading.Volatile.Write(ref System.UInt32, System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 261
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref uint location, uint value)
    content.vb: Public Shared Sub Write(ByRef location As UInteger, value As UInteger)
    parameters:
    - id: location
      type: System.UInt32
      description: The field where the value is written.
    - id: value
      type: System.UInt32
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.UInt32, System.UInt32)
  name.vb: Write(ByRef UInt32, UInt32)
- uid: System.Threading.Volatile.Write(System.UInt64@,System.UInt64)
  commentId: M:System.Threading.Volatile.Write(System.UInt64@,System.UInt64)
  id: Write(System.UInt64@,System.UInt64)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref UInt64, UInt64)
  fullName: System.Threading.Volatile.Write(ref System.UInt64, System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 284
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref ulong location, ulong value)
    content.vb: Public Shared Sub Write(ByRef location As ULong, value As ULong)
    parameters:
    - id: location
      type: System.UInt64
      description: The field where the value is written.
    - id: value
      type: System.UInt64
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.UInt64, System.UInt64)
  name.vb: Write(ByRef UInt64, UInt64)
- uid: System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)
  commentId: M:System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)
  id: Write(System.UIntPtr@,System.UIntPtr)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write(ref UIntPtr, UIntPtr)
  fullName: System.Threading.Volatile.Write(ref System.UIntPtr, System.UIntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 318
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  syntax:
    content: public static void Write(ref UIntPtr location, UIntPtr value)
    content.vb: Public Shared Sub Write(ByRef location As UIntPtr, value As UIntPtr)
    parameters:
    - id: location
      type: System.UIntPtr
      description: The field where the value is written.
    - id: value
      type: System.UIntPtr
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(ByRef System.UIntPtr, System.UIntPtr)
  name.vb: Write(ByRef UIntPtr, UIntPtr)
- uid: System.Threading.Volatile.Write``1(``0@,``0)
  commentId: M:System.Threading.Volatile.Write``1(``0@,``0)
  id: Write``1(``0@,``0)
  parent: System.Threading.Volatile
  langs:
  - csharp
  - vb
  name: Write<T>(ref T, T)
  fullName: System.Threading.Volatile.Write<T>(ref T, T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Volatile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/Threading/Volatile.cs
    startLine: 351
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: 'Writes the specified object reference to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method. '
  syntax:
    content: 'public static void Write<T>(ref T location, T value)where T : class'
    content.vb: Public Shared Sub Write(Of T As Class)(ByRef location As T, value As T)
    parameters:
    - id: location
      type: '{T}'
      description: The field where the object reference is written.
    - id: value
      type: '{T}'
      description: The object reference to write. The reference is written immediately so that it is visible to all processors in the computer.
    typeParameters:
    - id: T
      description: 'The type of field to write. This must be a reference type, not a value type. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Volatile.Write(Of T)(ByRef T, T)
  name.vb: Write(Of T)(ByRef T, T)
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  fullName: System.IntPtr
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  fullName: System.UIntPtr
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
