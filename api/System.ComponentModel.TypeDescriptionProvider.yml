items:
- uid: System.ComponentModel.TypeDescriptionProvider
  commentId: T:System.ComponentModel.TypeDescriptionProvider
  id: TypeDescriptionProvider
  parent: System.ComponentModel
  children:
  - System.ComponentModel.TypeDescriptionProvider.#ctor
  - System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  - System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  langs:
  - csharp
  - vb
  name: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeDescriptionProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
    startLine: 14
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Provides supplemental metadata to the <xref href="System.ComponentModel.TypeDescriptor" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: 'public abstract class TypeDescriptionProvider : object'
    content.vb: >-
      Public MustInherit Class TypeDescriptionProvider
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor
  commentId: M:System.ComponentModel.TypeDescriptionProvider.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: TypeDescriptionProvider()
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
    startLine: 27
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected TypeDescriptionProvider()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  id: '#ctor(System.ComponentModel.TypeDescriptionProvider)'
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: TypeDescriptionProvider(TypeDescriptionProvider)
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider(System.ComponentModel.TypeDescriptionProvider)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
    startLine: 39
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.TypeDescriptionProvider" data-throw-if-not-resolved="false"></xref> class using a parent type description provider.
  syntax:
    content: protected TypeDescriptionProvider(TypeDescriptionProvider parent)
    content.vb: Protected Sub New(parent As TypeDescriptionProvider)
    parameters:
    - id: parent
      type: System.ComponentModel.TypeDescriptionProvider
      description: The parent type description provider.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  commentId: M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: CreateInstance(IServiceProvider, Type, Type[], Object[])
  fullName: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider, System.Type, System.Type[], System.Object[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateInstance
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 537
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Creates an object that can substitute for another data type.
  syntax:
    content: public virtual object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, object[] args)
    content.vb: Public Overridable Function CreateInstance(provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: An optional service provider.
    - id: objectType
      type: System.Type
      description: The type of object to create. This parameter is never null.
    - id: argTypes
      type: System.Type[]
      description: An optional array of types that represent the parameter types to be passed to the object's constructor. This array can be null or of zero length.
    - id: args
      type: System.Object[]
      description: An optional array of parameter values to pass to the object's constructor.
    return:
      type: System.Object
      description: The substitute <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider, System.Type, System.Type(), System.Object())
  name.vb: CreateInstance(IServiceProvider, Type, Type(), Object())
- uid: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  id: GetCache(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetCache(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCache
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
    startLine: 79
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets a per-object cache, accessed as an <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> of key/value pairs.
  syntax:
    content: public virtual Collections.IDictionary GetCache(object instance)
    content.vb: Public Overridable Function GetCache(instance As Object) As Collections.IDictionary
    parameters:
    - id: instance
      type: System.Object
      description: The object for which to get the cache.
    return:
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> if the provided object supports caching; otherwise, null.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  id: GetExtendedTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetExtendedTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetExtendedTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
    startLine: 103
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets an extended custom type descriptor for the given object.
  syntax:
    content: public virtual ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance)
    content.vb: Public Overridable Function GetExtendedTypeDescriptor(instance As Object) As ICustomTypeDescriptor
    parameters:
    - id: instance
      type: System.Object
      description: The object for which to get the extended type descriptor.
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: An <xref href="System.ComponentModel.ICustomTypeDescriptor" data-throw-if-not-resolved="false"></xref> that can provide extended metadata for the object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  id: GetExtenderProviders(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetExtenderProviders(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetExtenderProviders
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
    startLine: 118
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets the extender providers for the specified object.
  syntax:
    content: protected virtual IExtenderProvider[] GetExtenderProviders(object instance)
    content.vb: Protected Overridable Function GetExtenderProviders(instance As Object) As IExtenderProvider()
    parameters:
    - id: instance
      type: System.Object
      description: The object to get extender providers for.
    return:
      type: System.ComponentModel.IExtenderProvider[]
      description: An array of extender providers for <em>instance</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>instance</em> is null."
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  id: GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFullComponentName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
    startLine: 142
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets the name of the specified component, or null if the component has no name.
  syntax:
    content: public virtual string GetFullComponentName(object component)
    content.vb: Public Overridable Function GetFullComponentName(component As Object) As String
    parameters:
    - id: component
      type: System.Object
      description: The specified component.
    return:
      type: System.String
      description: The name of the specified component.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>component</em> is null."
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  id: GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetReflectionType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
    startLine: 171
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Performs normal reflection against the given object.
  syntax:
    content: public Type GetReflectionType(object instance)
    content.vb: Public Function GetReflectionType(instance As Object) As Type
    parameters:
    - id: instance
      type: System.Object
      description: An instance of the type (should not be null).
    return:
      type: System.Type
      description: The type of reflection for this <em>instance</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>instance</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetReflectionType
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 543
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Performs normal reflection against a type.
  syntax:
    content: public Type GetReflectionType(Type objectType)
    content.vb: Public Function GetReflectionType(objectType As Type) As Type
    parameters:
    - id: objectType
      type: System.Type
      description: The type of object for which to retrieve the <xref href="System.Reflection.IReflect" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Type
      description: The type of reflection for this <em>objectType</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>objectType</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  id: GetReflectionType(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetReflectionType(Type, Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetReflectionType
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 544
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Performs normal reflection against the given object with the given type.
  syntax:
    content: public virtual Type GetReflectionType(Type objectType, object instance)
    content.vb: Public Overridable Function GetReflectionType(objectType As Type, instance As Object) As Type
    parameters:
    - id: objectType
      type: System.Type
      description: The type of object for which to retrieve the <xref href="System.Reflection.IReflect" data-throw-if-not-resolved="false"></xref>.
    - id: instance
      type: System.Object
      description: An instance of the type. Can be null.
    return:
      type: System.Type
      description: The type of reflection for this <em>objectType</em>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetRuntimeType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRuntimeType
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 545
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Converts a reflection type into a runtime type.
  syntax:
    content: public virtual Type GetRuntimeType(Type reflectionType)
    content.vb: Public Overridable Function GetRuntimeType(reflectionType As Type) As Type
    parameters:
    - id: reflectionType
      type: System.Type
      description: The type to convert to its runtime equivalent.
    return:
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the runtime equivalent of <em>reflectionType</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>reflectionType</em> is null."
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  id: GetTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptionProvider.cs
    startLine: 247
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets a custom type descriptor for the given object.
  syntax:
    content: public ICustomTypeDescriptor GetTypeDescriptor(object instance)
    content.vb: Public Function GetTypeDescriptor(instance As Object) As ICustomTypeDescriptor
    parameters:
    - id: instance
      type: System.Object
      description: An instance of the type. Can be null if no instance was passed to the <xref href="System.ComponentModel.TypeDescriptor" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: An <xref href="System.ComponentModel.ICustomTypeDescriptor" data-throw-if-not-resolved="false"></xref> that can provide metadata for the type.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>instance</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  id: GetTypeDescriptor(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetTypeDescriptor(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 547
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets a custom type descriptor for the given type.
  syntax:
    content: public ICustomTypeDescriptor GetTypeDescriptor(Type objectType)
    content.vb: Public Function GetTypeDescriptor(objectType As Type) As ICustomTypeDescriptor
    parameters:
    - id: objectType
      type: System.Type
      description: The type of object for which to retrieve the type descriptor.
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: An <xref href="System.ComponentModel.ICustomTypeDescriptor" data-throw-if-not-resolved="false"></xref> that can provide metadata for the type.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  id: GetTypeDescriptor(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetTypeDescriptor(Type, Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 548
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets a custom type descriptor for the given type and object.
  syntax:
    content: public virtual ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance)
    content.vb: Public Overridable Function GetTypeDescriptor(objectType As Type, instance As Object) As ICustomTypeDescriptor
    parameters:
    - id: objectType
      type: System.Type
      description: The type of object for which to retrieve the type descriptor.
    - id: instance
      type: System.Object
      description: An instance of the type. Can be null if no instance was passed to the <xref href="System.ComponentModel.TypeDescriptor" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: An <xref href="System.ComponentModel.ICustomTypeDescriptor" data-throw-if-not-resolved="false"></xref> that can provide metadata for the type.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  - vb
  name: IsSupportedType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSupportedType
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 549
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: 'Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers. '
  syntax:
    content: public virtual bool IsSupportedType(Type type)
    content.vb: Public Overridable Function IsSupportedType(type As Type) As Boolean
    parameters:
    - id: type
      type: System.Type
      description: The type to test for compatibility.
    return:
      type: System.Boolean
      description: 'true if <em>type</em> is compatible with the type description and its chain of type description providers; otherwise, false. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>type</em> is null."
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.IServiceProvider
  isExternal: false
  name: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Type[]
  isExternal: false
  name: Type[]
  fullName: System.Type[]
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ()
    fullName: ()
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.ComponentModel.IExtenderProvider[]
  isExternal: false
  name: IExtenderProvider[]
  fullName: System.ComponentModel.IExtenderProvider[]
  fullname.vb: System.ComponentModel.IExtenderProvider()
  name.vb: IExtenderProvider()
  spec.csharp:
  - uid: System.ComponentModel.IExtenderProvider
    name: IExtenderProvider
    fullName: System.ComponentModel.IExtenderProvider
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.ComponentModel.IExtenderProvider
    name: IExtenderProvider
    fullName: System.ComponentModel.IExtenderProvider
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
