items:
- uid: System.Security.Principal.WindowsPrincipal
  commentId: T:System.Security.Principal.WindowsPrincipal
  id: WindowsPrincipal
  parent: System.Security.Principal
  children:
  - System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)
  - System.Security.Principal.WindowsPrincipal.Identity
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.String)
  langs:
  - csharp
  - vb
  name: WindowsPrincipal
  fullName: System.Security.Principal.WindowsPrincipal
  type: Class
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WindowsPrincipal
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 25
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Enables code to check the Windows group membership of a Windows user.
  syntax:
    content: 'public class WindowsPrincipal : Claims.ClaimsPrincipal'
    content.vb: >-
      Public Class WindowsPrincipal
          Inherits Claims.ClaimsPrincipal
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)
  commentId: M:System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)
  id: '#ctor(System.Security.Principal.WindowsIdentity)'
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: WindowsPrincipal(WindowsIdentity)
  fullName: System.Security.Principal.WindowsPrincipal.WindowsPrincipal(System.Security.Principal.WindowsIdentity)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 35
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Initializes a new instance of the <xref href="System.Security.Principal.WindowsPrincipal" data-throw-if-not-resolved="false"></xref> class by using the specified <xref href="System.Security.Principal.WindowsIdentity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public WindowsPrincipal(WindowsIdentity ntIdentity)
    content.vb: Public Sub New(ntIdentity As WindowsIdentity)
    parameters:
    - id: ntIdentity
      type: System.Security.Principal.WindowsIdentity
      description: 'The object from which to construct the new instance of <xref href="System.Security.Principal.WindowsPrincipal" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>ntIdentity</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.WindowsPrincipal.Identity
  commentId: P:System.Security.Principal.WindowsPrincipal.Identity
  id: Identity
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: Identity
  fullName: System.Security.Principal.WindowsPrincipal.Identity
  type: Property
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Identity
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 48
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Gets the identity of the current principal.
  syntax:
    content: public override IIdentity Identity { get; }
    content.vb: Public Overrides ReadOnly Property Identity As IIdentity
    parameters: []
    return:
      type: System.Security.Principal.IIdentity
      description: The <xref href="System.Security.Principal.WindowsIdentity" data-throw-if-not-resolved="false"></xref> object of the current principal.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  commentId: M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  id: IsInRole(System.Int32)
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: IsInRole(Int32)
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInRole
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 138
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).
  syntax:
    content: public virtual bool IsInRole(int rid)
    content.vb: Public Overridable Function IsInRole(rid As Integer) As Boolean
    parameters:
    - id: rid
      type: System.Int32
      description: "The RID of the Windows user group in which to check for the principalâ€™s membership status. "
    return:
      type: System.Boolean
      description: true if the current principal is a member of the specified Windows user group, that is, in a particular role; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  commentId: M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  id: IsInRole(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: IsInRole(SecurityIdentifier)
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInRole
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 151
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).
  syntax:
    content: public virtual bool IsInRole(SecurityIdentifier sid)
    content.vb: Public Overridable Function IsInRole(sid As SecurityIdentifier) As Boolean
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: A <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref>  that uniquely identifies a Windows user group.
    return:
      type: System.Boolean
      description: true if the current principal is a member of the specified Windows user group; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>sid</em> is null."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Windows returned a Win32 error.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  commentId: M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  id: IsInRole(System.Security.Principal.WindowsBuiltInRole)
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: IsInRole(WindowsBuiltInRole)
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInRole
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 129
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Determines whether the current principal belongs to the Windows user group with the specified <xref href="System.Security.Principal.WindowsBuiltInRole" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual bool IsInRole(WindowsBuiltInRole role)
    content.vb: Public Overridable Function IsInRole(role As WindowsBuiltInRole) As Boolean
    parameters:
    - id: role
      type: System.Security.Principal.WindowsBuiltInRole
      description: 'One of the <xref href="System.Security.Principal.WindowsBuiltInRole" data-throw-if-not-resolved="false"></xref> values. '
    return:
      type: System.Boolean
      description: true if the current principal is a member of the specified Windows user group; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>role</em> is not a valid <xref href=\"System.Security.Principal.WindowsBuiltInRole\" data-throw-if-not-resolved=\"false\"></xref> value."
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.String)
  commentId: M:System.Security.Principal.WindowsPrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: IsInRole(String)
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInRole
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 61
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: Determines whether the current principal belongs to the Windows user group with the specified name.
  syntax:
    content: public override bool IsInRole(string role)
    content.vb: Public Overrides Function IsInRole(role As String) As Boolean
    parameters:
    - id: role
      type: System.String
      description: 'The name of the Windows user group for which to check membership. '
    return:
      type: System.Boolean
      description: true if the current principal is a member of the specified Windows user group; otherwise, false.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: Principal.SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.Principal.WindowsBuiltInRole
  parent: System.Security.Principal
  isExternal: false
  name: WindowsBuiltInRole
  fullName: System.Security.Principal.WindowsBuiltInRole
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
