items:
- uid: System.Text.Decoder
  commentId: T:System.Text.Decoder
  id: Decoder
  parent: System.Text
  children:
  - System.Text.Decoder.#ctor
  - System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  - System.Text.Decoder.Fallback
  - System.Text.Decoder.FallbackBuffer
  - System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)
  - System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)
  - System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  - System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)
  - System.Text.Decoder.Reset
  langs:
  - csharp
  - vb
  name: Decoder
  fullName: System.Text.Decoder
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Text/Decoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Decoder
    path: src/mscorlib/src/System/Text/Decoder.cs
    startLine: 21
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Converts a sequence of encoded bytes into a set of characters.
  syntax:
    content: 'public abstract class Decoder : object'
    content.vb: >-
      Public MustInherit Class Decoder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Text.Decoder.#ctor
  commentId: M:System.Text.Decoder.#ctor
  id: '#ctor'
  parent: System.Text.Decoder
  langs:
  - csharp
  - vb
  name: Decoder()
  fullName: System.Text.Decoder.Decoder()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/Decoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/Decoder.cs
    startLine: 35
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Initializes a new instance of the <xref href="System.Text.Decoder" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected Decoder()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.Decoder.Fallback
  commentId: P:System.Text.Decoder.Fallback
  id: Fallback
  parent: System.Text.Decoder
  langs:
  - csharp
  - vb
  name: Fallback
  fullName: System.Text.Decoder.Fallback
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Decoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Fallback
    path: src/mscorlib/src/System/Text/Decoder.cs
    startLine: 40
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets or sets a <xref href="System.Text.DecoderFallback" data-throw-if-not-resolved="false"></xref> object for the current <xref href="System.Text.Decoder" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public DecoderFallback Fallback { get; set; }
    content.vb: Public Property Fallback As DecoderFallback
    parameters: []
    return:
      type: System.Text.DecoderFallback
      description: A <xref href="System.Text.DecoderFallback" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value in a set operation is null (Nothing).
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'A new value cannot be assigned in a set operation because the current <xref href="System.Text.DecoderFallbackBuffer" data-throw-if-not-resolved="false"></xref> object contains data that has not been decoded yet. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Text.Decoder.FallbackBuffer
  commentId: P:System.Text.Decoder.FallbackBuffer
  id: FallbackBuffer
  parent: System.Text.Decoder
  langs:
  - csharp
  - vb
  name: FallbackBuffer
  fullName: System.Text.Decoder.FallbackBuffer
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Decoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FallbackBuffer
    path: src/mscorlib/src/System/Text/Decoder.cs
    startLine: 66
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets the <xref href="System.Text.DecoderFallbackBuffer" data-throw-if-not-resolved="false"></xref> object associated with the current <xref href="System.Text.Decoder" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public DecoderFallbackBuffer FallbackBuffer { get; }
    content.vb: Public ReadOnly Property FallbackBuffer As DecoderFallbackBuffer
    parameters: []
    return:
      type: System.Text.DecoderFallbackBuffer
      description: A <xref href="System.Text.DecoderFallbackBuffer" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  commentId: M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  id: Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  parent: System.Text.Decoder
  langs:
  - csharp
  - vb
  name: Convert(Byte[], Int32, Int32, Char[], Int32, Int32, Boolean, out Int32, out Int32, out Boolean)
  fullName: System.Text.Decoder.Convert(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32, System.Int32, System.Boolean, out System.Int32, out System.Int32, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Decoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Convert
    path: src/mscorlib/src/System/Text/Decoder.cs
    startLine: 251
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Converts an array of encoded bytes to UTF-16 encoded characters and stores the result in a character array.
  syntax:
    content: public virtual void Convert(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, int charCount, bool flush, out int bytesUsed, out int charsUsed, out bool completed)
    content.vb: Public Overridable Sub Convert(bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer, charCount As Integer, flush As Boolean, ByRef bytesUsed As Integer, ByRef charsUsed As Integer, ByRef completed As Boolean)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: A byte array to convert.
    - id: byteIndex
      type: System.Int32
      description: The first element of <em>bytes</em> to convert.
    - id: byteCount
      type: System.Int32
      description: The number of elements of <em>bytes</em> to convert.
    - id: chars
      type: System.Char[]
      description: An array to store the converted characters.
    - id: charIndex
      type: System.Int32
      description: The first element of <em>chars</em> in which data is stored.
    - id: charCount
      type: System.Int32
      description: The maximum number of elements of <em>chars</em> to use in the conversion.
    - id: flush
      type: System.Boolean
      description: true to indicate that no further data is to be converted; otherwise, false.
    - id: bytesUsed
      type: System.Int32
      description: When this method returns, contains the number of bytes that were used in the conversion. This parameter is passed uninitialized.
    - id: charsUsed
      type: System.Int32
      description: When this method returns, contains the number of characters from <em>chars</em> that were produced by the conversion. This parameter is passed uninitialized.
    - id: completed
      type: System.Boolean
      description: When this method returns, contains true if all the characters specified by <em>byteCount</em> were converted; otherwise, false. This parameter is passed uninitialized.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> or <em>bytes</em> is null (Nothing)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>charIndex</em>, <em>charCount</em>, <em>byteIndex</em>, or <em>byteCount</em> is less than zero.-or-The length of <em>chars</em> - <em>charIndex</em> is less than <em>charCount</em>.-or-The length of <em>bytes</em> - <em>byteIndex</em> is less than <em>byteCount</em>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The output buffer is too small to contain any of the converted input. The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount"></see> method.
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-<xref href="System.Text.Decoder.Fallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Decoder.Convert(System.Byte(), System.Int32, System.Int32, System.Char(), System.Int32, System.Int32, System.Boolean, ByRef System.Int32, ByRef System.Int32, ByRef System.Boolean)
  name.vb: Convert(Byte(), Int32, Int32, Char(), Int32, Int32, Boolean, ByRef Int32, ByRef Int32, ByRef Boolean)
- uid: System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)
  id: GetCharCount(System.Byte[],System.Int32,System.Int32)
  parent: System.Text.Decoder
  langs:
  - csharp
  - vb
  name: GetCharCount(Byte[], Int32, Int32)
  fullName: System.Text.Decoder.GetCharCount(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Decoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCharCount
    path: src/mscorlib/src/System/Text/Decoder.cs
    startLine: 116
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
  syntax:
    content: public abstract int GetCharCount(byte[] bytes, int index, int count)
    content.vb: Public MustOverride Function GetCharCount(bytes As Byte(), index As Integer, count As Integer) As Integer
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    - id: index
      type: System.Int32
      description: 'The index of the first byte to decode. '
    - id: count
      type: System.Int32
      description: 'The number of bytes to decode. '
    return:
      type: System.Int32
      description: The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null (Nothing). "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> or <em>count</em> is less than zero.-or- <em>index</em> and <em>count</em> do not denote a valid range in <em>bytes</em>. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-<xref href="System.Text.Decoder.Fallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.Decoder.GetCharCount(System.Byte(), System.Int32, System.Int32)
  name.vb: GetCharCount(Byte(), Int32, Int32)
- uid: System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)
  commentId: M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)
  id: GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)
  parent: System.Text.Decoder
  langs:
  - csharp
  - vb
  name: GetCharCount(Byte[], Int32, Int32, Boolean)
  fullName: System.Text.Decoder.GetCharCount(System.Byte[], System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Decoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCharCount
    path: src/mscorlib/src/System/Text/Decoder.cs
    startLine: 118
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array. A parameter indicates whether to clear the internal state of the decoder after the calculation.
  syntax:
    content: public virtual int GetCharCount(byte[] bytes, int index, int count, bool flush)
    content.vb: Public Overridable Function GetCharCount(bytes As Byte(), index As Integer, count As Integer, flush As Boolean) As Integer
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    - id: index
      type: System.Int32
      description: 'The index of the first byte to decode. '
    - id: count
      type: System.Int32
      description: 'The number of bytes to decode. '
    - id: flush
      type: System.Boolean
      description: 'true to simulate clearing the internal state of the encoder after the calculation; otherwise, false. '
    return:
      type: System.Int32
      description: The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null (Nothing). "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> or <em>count</em> is less than zero.-or- <em>index</em> and <em>count</em> do not denote a valid range in <em>bytes</em>. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-<xref href="System.Text.Decoder.Fallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Decoder.GetCharCount(System.Byte(), System.Int32, System.Int32, System.Boolean)
  name.vb: GetCharCount(Byte(), Int32, Int32, Boolean)
- uid: System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  commentId: M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  id: GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  parent: System.Text.Decoder
  langs:
  - csharp
  - vb
  name: GetChars(Byte[], Int32, Int32, Char[], Int32)
  fullName: System.Text.Decoder.GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Decoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetChars
    path: src/mscorlib/src/System/Text/Decoder.cs
    startLine: 166
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.
  syntax:
    content: public abstract int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex)
    content.vb: Public MustOverride Function GetChars(bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    - id: byteIndex
      type: System.Int32
      description: 'The index of the first byte to decode. '
    - id: byteCount
      type: System.Int32
      description: 'The number of bytes to decode. '
    - id: chars
      type: System.Char[]
      description: 'The character array to contain the resulting set of characters. '
    - id: charIndex
      type: System.Int32
      description: 'The index at which to start writing the resulting set of characters. '
    return:
      type: System.Int32
      description: The actual number of characters written into <em>chars</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null (Nothing).-or- <em>chars</em> is null (Nothing). "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>byteIndex</em> or <em>byteCount</em> or <em>charIndex</em> is less than zero.-or- <em>byteindex</em> and <em>byteCount</em> do not denote a valid range in <em>bytes</em>.-or- <em>charIndex</em> is not a valid index in <em>chars</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>chars</em> does not have enough capacity from <em>charIndex</em> to the end of the array to accommodate the resulting characters. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-<xref href="System.Text.Decoder.Fallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.Decoder.GetChars(System.Byte(), System.Int32, System.Int32, System.Char(), System.Int32)
  name.vb: GetChars(Byte(), Int32, Int32, Char(), Int32)
- uid: System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)
  commentId: M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)
  id: GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)
  parent: System.Text.Decoder
  langs:
  - csharp
  - vb
  name: GetChars(Byte[], Int32, Int32, Char[], Int32, Boolean)
  fullName: System.Text.Decoder.GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Decoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetChars
    path: src/mscorlib/src/System/Text/Decoder.cs
    startLine: 169
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array. A parameter indicates whether to clear the internal state of the decoder after the conversion.
  syntax:
    content: public virtual int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, bool flush)
    content.vb: Public Overridable Function GetChars(bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer, flush As Boolean) As Integer
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    - id: byteIndex
      type: System.Int32
      description: 'The index of the first byte to decode. '
    - id: byteCount
      type: System.Int32
      description: 'The number of bytes to decode. '
    - id: chars
      type: System.Char[]
      description: 'The character array to contain the resulting set of characters. '
    - id: charIndex
      type: System.Int32
      description: 'The index at which to start writing the resulting set of characters. '
    - id: flush
      type: System.Boolean
      description: 'true to clear the internal state of the decoder after the conversion; otherwise, false. '
    return:
      type: System.Int32
      description: The actual number of characters written into the <em>chars</em> parameter.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null (Nothing).-or- <em>chars</em> is null (Nothing). "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>byteIndex</em> or <em>byteCount</em> or <em>charIndex</em> is less than zero.-or- <em>byteindex</em> and <em>byteCount</em> do not denote a valid range in <em>bytes</em>.-or- <em>charIndex</em> is not a valid index in <em>chars</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>chars</em> does not have enough capacity from <em>charIndex</em> to the end of the array to accommodate the resulting characters. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-<xref href="System.Text.Decoder.Fallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Decoder.GetChars(System.Byte(), System.Int32, System.Int32, System.Char(), System.Int32, System.Boolean)
  name.vb: GetChars(Byte(), Int32, Int32, Char(), Int32, Boolean)
- uid: System.Text.Decoder.Reset
  commentId: M:System.Text.Decoder.Reset
  id: Reset
  parent: System.Text.Decoder
  langs:
  - csharp
  - vb
  name: Reset()
  fullName: System.Text.Decoder.Reset()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Decoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Reset
    path: src/mscorlib/src/System/Text/Decoder.cs
    startLine: 100
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, sets the decoder back to its initial state.
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Text.DecoderFallback
  parent: System.Text
  isExternal: false
  name: DecoderFallback
  fullName: System.Text.DecoderFallback
- uid: System.Text.DecoderFallbackBuffer
  parent: System.Text
  isExternal: false
  name: DecoderFallbackBuffer
  fullName: System.Text.DecoderFallbackBuffer
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Char[]
  isExternal: false
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: ()
    fullName: ()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Text.DecoderFallbackException
  isExternal: false
  name: DecoderFallbackException
  fullName: System.Text.DecoderFallbackException
