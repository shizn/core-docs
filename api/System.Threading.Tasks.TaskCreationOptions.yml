items:
- uid: System.Threading.Tasks.TaskCreationOptions
  commentId: T:System.Threading.Tasks.TaskCreationOptions
  id: TaskCreationOptions
  parent: System.Threading.Tasks
  children:
  - System.Threading.Tasks.TaskCreationOptions.AttachedToParent
  - System.Threading.Tasks.TaskCreationOptions.DenyChildAttach
  - System.Threading.Tasks.TaskCreationOptions.HideScheduler
  - System.Threading.Tasks.TaskCreationOptions.LongRunning
  - System.Threading.Tasks.TaskCreationOptions.None
  - System.Threading.Tasks.TaskCreationOptions.PreferFairness
  - System.Threading.Tasks.TaskCreationOptions.RunContinuationsAsynchronously
  langs:
  - csharp
  - vb
  name: TaskCreationOptions
  fullName: System.Threading.Tasks.TaskCreationOptions
  type: Enum
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Task.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TaskCreationOptions
    path: src/mscorlib/src/System/Threading/Tasks/Task.cs
    startLine: 6811
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: 'Specifies flags that control optional behavior for the creation and execution of tasks. '
  syntax:
    content: 'public enum TaskCreationOptions : int'
    content.vb: Public Enum TaskCreationOptions As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Threading.Tasks.TaskCreationOptions.AttachedToParent
  commentId: F:System.Threading.Tasks.TaskCreationOptions.AttachedToParent
  id: AttachedToParent
  parent: System.Threading.Tasks.TaskCreationOptions
  langs:
  - csharp
  - vb
  name: AttachedToParent
  fullName: System.Threading.Tasks.TaskCreationOptions.AttachedToParent
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Task.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AttachedToParent
    path: src/mscorlib/src/System/Threading/Tasks/Task.cs
    startLine: 6837
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: 'Specifies that a task is attached to a parent in the task hierarchy. By default, a child task (that is, an inner task created by an outer task) executes independently of its parent. You can use the <xref href="System.Threading.Tasks.TaskContinuationOptions.AttachedToParent" data-throw-if-not-resolved="false"></xref> option so that the parent and child tasks are synchronized. Note that if a parent task is configured with the <xref href="System.Threading.Tasks.TaskCreationOptions.DenyChildAttach" data-throw-if-not-resolved="false"></xref> option, the <xref href="System.Threading.Tasks.TaskCreationOptions.AttachedToParent" data-throw-if-not-resolved="false"></xref> option in the child task has no effect, and the child task will execute as a detached child task. For more information, see Attached and Detached Child Tasks. '
  syntax:
    content: AttachedToParent = null
    content.vb: AttachedToParent = Nothing
    return:
      type: System.Threading.Tasks.TaskCreationOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Threading.Tasks.TaskCreationOptions.DenyChildAttach
  commentId: F:System.Threading.Tasks.TaskCreationOptions.DenyChildAttach
  id: DenyChildAttach
  parent: System.Threading.Tasks.TaskCreationOptions
  langs:
  - csharp
  - vb
  name: DenyChildAttach
  fullName: System.Threading.Tasks.TaskCreationOptions.DenyChildAttach
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Task.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DenyChildAttach
    path: src/mscorlib/src/System/Threading/Tasks/Task.cs
    startLine: 6842
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: 'Specifies that any child task that attempts to execute as an attached child task (that is, it is created with the <xref href="System.Threading.Tasks.TaskCreationOptions.AttachedToParent" data-throw-if-not-resolved="false"></xref> option) will not be able to attach to the parent task and will execute instead as a detached child task. For more information, see Attached and Detached Child Tasks. '
  syntax:
    content: DenyChildAttach = null
    content.vb: DenyChildAttach = Nothing
    return:
      type: System.Threading.Tasks.TaskCreationOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Threading.Tasks.TaskCreationOptions.HideScheduler
  commentId: F:System.Threading.Tasks.TaskCreationOptions.HideScheduler
  id: HideScheduler
  parent: System.Threading.Tasks.TaskCreationOptions
  langs:
  - csharp
  - vb
  name: HideScheduler
  fullName: System.Threading.Tasks.TaskCreationOptions.HideScheduler
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Task.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: HideScheduler
    path: src/mscorlib/src/System/Threading/Tasks/Task.cs
    startLine: 6848
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: Prevents the ambient scheduler from being seen as the current scheduler in the created task. This means that operations like StartNew or ContinueWith that are performed in the created task will see <xref href="System.Threading.Tasks.TaskScheduler.Default" data-throw-if-not-resolved="false"></xref> as the current scheduler.
  syntax:
    content: HideScheduler = null
    content.vb: HideScheduler = Nothing
    return:
      type: System.Threading.Tasks.TaskCreationOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Threading.Tasks.TaskCreationOptions.LongRunning
  commentId: F:System.Threading.Tasks.TaskCreationOptions.LongRunning
  id: LongRunning
  parent: System.Threading.Tasks.TaskCreationOptions
  langs:
  - csharp
  - vb
  name: LongRunning
  fullName: System.Threading.Tasks.TaskCreationOptions.LongRunning
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Task.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LongRunning
    path: src/mscorlib/src/System/Threading/Tasks/Task.cs
    startLine: 6832
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: Specifies that a task will be a long-running, coarse-grained operation involving fewer, larger components than fine-grained systems. It provides a hint to the <xref href="System.Threading.Tasks.TaskScheduler" data-throw-if-not-resolved="false"></xref> that oversubscription may be warranted. Oversubscription lets you create more threads than the available number of hardware threads.
  syntax:
    content: LongRunning = null
    content.vb: LongRunning = Nothing
    return:
      type: System.Threading.Tasks.TaskCreationOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Threading.Tasks.TaskCreationOptions.None
  commentId: F:System.Threading.Tasks.TaskCreationOptions.None
  id: None
  parent: System.Threading.Tasks.TaskCreationOptions
  langs:
  - csharp
  - vb
  name: None
  fullName: System.Threading.Tasks.TaskCreationOptions.None
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Task.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: None
    path: src/mscorlib/src/System/Threading/Tasks/Task.cs
    startLine: 6818
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: Specifies that the default behavior should be used.
  syntax:
    content: None = null
    content.vb: None = Nothing
    return:
      type: System.Threading.Tasks.TaskCreationOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Threading.Tasks.TaskCreationOptions.PreferFairness
  commentId: F:System.Threading.Tasks.TaskCreationOptions.PreferFairness
  id: PreferFairness
  parent: System.Threading.Tasks.TaskCreationOptions
  langs:
  - csharp
  - vb
  name: PreferFairness
  fullName: System.Threading.Tasks.TaskCreationOptions.PreferFairness
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Task.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PreferFairness
    path: src/mscorlib/src/System/Threading/Tasks/Task.cs
    startLine: 6825
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: A hint to a <xref href="System.Threading.Tasks.TaskScheduler" data-throw-if-not-resolved="false"></xref> to schedule a task in as fair a manner as possible, meaning that tasks scheduled sooner will be more likely to be run sooner, and tasks scheduled later will be more likely to be run later.
  syntax:
    content: PreferFairness = null
    content.vb: PreferFairness = Nothing
    return:
      type: System.Threading.Tasks.TaskCreationOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Threading.Tasks.TaskCreationOptions.RunContinuationsAsynchronously
  commentId: F:System.Threading.Tasks.TaskCreationOptions.RunContinuationsAsynchronously
  id: RunContinuationsAsynchronously
  parent: System.Threading.Tasks.TaskCreationOptions
  langs:
  - csharp
  - vb
  name: RunContinuationsAsynchronously
  fullName: System.Threading.Tasks.TaskCreationOptions.RunContinuationsAsynchronously
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Task.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RunContinuationsAsynchronously
    path: src/mscorlib/src/System/Threading/Tasks/Task.cs
    startLine: 6856
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: 'Forces continuations added to the current task to be executed asynchronously. '
  syntax:
    content: RunContinuationsAsynchronously = null
    content.vb: RunContinuationsAsynchronously = Nothing
    return:
      type: System.Threading.Tasks.TaskCreationOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.TaskCreationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskCreationOptions
  fullName: System.Threading.Tasks.TaskCreationOptions
