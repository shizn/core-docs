items:
- uid: System.Security.AccessControl.AccessRule`1
  commentId: T:System.Security.AccessControl.AccessRule`1
  id: AccessRule`1
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.AccessRule`1.Rights
  langs:
  - csharp
  - vb
  name: AccessRule<T>
  fullName: System.Security.AccessControl.AccessRule<T>
  type: Class
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 46
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Represents a combination of a user's identity, an access mask, and an access control type (allow or deny). An AccessRule`1 object also contains information about the how the rule is inherited by child objects and how that inheritance is propagated.
  syntax:
    content: 'public class AccessRule<T> : AccessRule where T : struct'
    content.vb: >-
      Public Class AccessRule(Of T As Structure)
          Inherits AccessRule
    typeParameters:
    - id: T
      description: The access rights type for the access rule.
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AccessRule
  inheritedMembers:
  - System.Security.AccessControl.AccessRule.AccessControlType
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Security.AccessControl.AccessRule(Of T)
  name.vb: AccessRule(Of T)
- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.AccessRule`1
  langs:
  - csharp
  - vb
  name: AccessRule(Principal.IdentityReference, T, AccessControlType)
  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 48
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the AccessRule’1 class by using the specified values."
  syntax:
    content: public AccessRule(Principal.IdentityReference identity, T rights, AccessControlType type)
    content.vb: Public Sub New(identity As Principal.IdentityReference, rights As T, type As AccessControlType)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The identity to which the access rule applies.
    - id: rights
      type: '{T}'
      description: The rights of the access rule.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: The valid access control type.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.AccessControl.AccessRule(Of T).AccessRule(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.AccessControlType)
- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.AccessRule`1
  langs:
  - csharp
  - vb
  name: AccessRule(Principal.IdentityReference, T, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 49
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the AccessRule’1 class by using the specified values."
  syntax:
    content: public AccessRule(Principal.IdentityReference identity, T rights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
    content.vb: Public Sub New(identity As Principal.IdentityReference, rights As T, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The identity to which the access rule applies.
    - id: rights
      type: '{T}'
      description: The rights of the access rule.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: The inheritance properties of the access rule.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Whether inherited access rules are automatically propagated. The propagation flags are ignored if <em>inheritanceFlags</em> is set to <xref href="System.Security.AccessControl.InheritanceFlags.None" data-throw-if-not-resolved="false"></xref>.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: The valid access control type.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.AccessControl.AccessRule(Of T).AccessRule(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,`0,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.AccessRule`1
  langs:
  - csharp
  - vb
  name: AccessRule(String, T, AccessControlType)
  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(System.String, T, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 50
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the AccessRule’1 class by using the specified values."
  syntax:
    content: public AccessRule(string identity, T rights, AccessControlType type)
    content.vb: Public Sub New(identity As String, rights As T, type As AccessControlType)
    parameters:
    - id: identity
      type: System.String
      description: The identity to which the access rule applies.
    - id: rights
      type: '{T}'
      description: The rights of the access rule.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: The valid access control type.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.AccessControl.AccessRule(Of T).AccessRule(System.String, T, System.Security.AccessControl.AccessControlType)
- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.AccessRule`1
  langs:
  - csharp
  - vb
  name: AccessRule(String, T, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(System.String, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 51
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the AccessRule’1 class by using the specified values."
  syntax:
    content: public AccessRule(string identity, T rights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
    content.vb: Public Sub New(identity As String, rights As T, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType)
    parameters:
    - id: identity
      type: System.String
      description: The identity to which the access rule applies.
    - id: rights
      type: '{T}'
      description: The rights of the access rule.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: The inheritance properties of the access rule.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Whether inherited access rules are automatically propagated. The propagation flags are ignored if <em>inheritanceFlags</em> is set to <xref href="System.Security.AccessControl.InheritanceFlags.None" data-throw-if-not-resolved="false"></xref>.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: The valid access control type.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.AccessControl.AccessRule(Of T).AccessRule(System.String, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
- uid: System.Security.AccessControl.AccessRule`1.Rights
  commentId: P:System.Security.AccessControl.AccessRule`1.Rights
  id: Rights
  parent: System.Security.AccessControl.AccessRule`1
  langs:
  - csharp
  - vb
  name: Rights
  fullName: System.Security.AccessControl.AccessRule<T>.Rights
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Rights
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 52
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the rights of the current instance.
  syntax:
    content: public T Rights { get; }
    content.vb: Public ReadOnly Property Rights As T
    parameters: []
    return:
      type: '{T}'
      description: The rights, cast as type <T>, of the current instance.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Security.AccessControl.AccessRule(Of T).Rights
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.AccessControl.AuthorizationRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuthorizationRule
  fullName: System.Security.AccessControl.AuthorizationRule
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.AccessControl.AccessRule.AccessControlType
  parent: System.Security.AccessControl.AccessRule
  isExternal: false
  name: AccessControlType
  fullName: System.Security.AccessControl.AccessRule.AccessControlType
- uid: System.Security.AccessControl.AuthorizationRule.AccessMask
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: AccessMask
  fullName: System.Security.AccessControl.AuthorizationRule.AccessMask
- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: IdentityReference
  fullName: System.Security.AccessControl.AuthorizationRule.IdentityReference
- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: InheritanceFlags
  fullName: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
- uid: System.Security.AccessControl.AuthorizationRule.IsInherited
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: IsInherited
  fullName: System.Security.AccessControl.AuthorizationRule.IsInherited
- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: PropagationFlags
  fullName: System.Security.AccessControl.AuthorizationRule.PropagationFlags
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
