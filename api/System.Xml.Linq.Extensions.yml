items:
- uid: System.Xml.Linq.Extensions
  commentId: T:System.Xml.Linq.Extensions
  id: Extensions
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})
  langs:
  - csharp
  - vb
  name: Extensions
  fullName: System.Xml.Linq.Extensions
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Extensions
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 13
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Contains the LINQ to XML extension methods.
  syntax:
    content: 'public class Extensions : object'
    content.vb: >-
      Public Class Extensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  id: Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Ancestors<T>(Collections.Generic.IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Ancestors<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Ancestors
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 12
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a collection of elements that contains the ancestors of every node in the source collection.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<XElement> Ancestors<T>(this Collections.Generic.IEnumerable<T> source)where T : XNode'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Ancestors(Of T As XNode)(source As Collections.Generic.IEnumerable(Of T)) As Collections.Generic.IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    typeParameters:
    - id: T
      description: The type of the objects in <em>source</em>, constrained to <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the ancestors of every node in the source collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Ancestors(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Ancestors(Of T)(Collections.Generic.IEnumerable(Of T))
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  id: Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Ancestors<T>(Collections.Generic.IEnumerable<T>, XName)
  fullName: System.Xml.Linq.Extensions.Ancestors<T>(System.Collections.Generic.IEnumerable<T>, System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Ancestors
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 13
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a filtered collection of elements that contains the ancestors of every node in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<XElement> Ancestors<T>(this Collections.Generic.IEnumerable<T> source, XName name)where T : XNode'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Ancestors(Of T As XNode)(source As Collections.Generic.IEnumerable(Of T), name As XName) As Collections.Generic.IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    - id: name
      type: System.Xml.Linq.XName
      description: The <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> to match.
    typeParameters:
    - id: T
      description: The type of the objects in <em>source</em>, constrained to <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the ancestors of every node in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Ancestors(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Xml.Linq.XName)
  name.vb: Ancestors(Of T)(Collections.Generic.IEnumerable(Of T), XName)
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  commentId: M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  id: AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: AncestorsAndSelf(Collections.Generic.IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AncestorsAndSelf
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 14
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.
  syntax:
    content: public static Collections.Generic.IEnumerable<XElement> AncestorsAndSelf(this Collections.Generic.IEnumerable<XElement> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AncestorsAndSelf(source As Collections.Generic.IEnumerable(Of XElement)) As Collections.Generic.IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains every element in the source collection, and the ancestors of every element in the source collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement))
  name.vb: AncestorsAndSelf(Collections.Generic.IEnumerable(Of XElement))
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  id: AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: AncestorsAndSelf(Collections.Generic.IEnumerable<XElement>, XName)
  fullName: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>, System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AncestorsAndSelf
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 15
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  syntax:
    content: public static Collections.Generic.IEnumerable<XElement> AncestorsAndSelf(this Collections.Generic.IEnumerable<XElement> source, XName name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AncestorsAndSelf(source As Collections.Generic.IEnumerable(Of XElement), name As XName) As Collections.Generic.IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    - id: name
      type: System.Xml.Linq.XName
      description: The <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> to match.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement), System.Xml.Linq.XName)
  name.vb: AncestorsAndSelf(Collections.Generic.IEnumerable(Of XElement), XName)
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  commentId: M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  id: Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Attributes(Collections.Generic.IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 16
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a collection of the attributes of every element in the source collection.
  syntax:
    content: public static Collections.Generic.IEnumerable<XAttribute> Attributes(this Collections.Generic.IEnumerable<XElement> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Attributes(source As Collections.Generic.IEnumerable(Of XElement)) As Collections.Generic.IEnumerable(Of XAttribute)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref> that contains the attributes of every element in the source collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement))
  name.vb: Attributes(Collections.Generic.IEnumerable(Of XElement))
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  id: Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Attributes(Collections.Generic.IEnumerable<XElement>, XName)
  fullName: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>, System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 17
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a filtered collection of the attributes of every element in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  syntax:
    content: public static Collections.Generic.IEnumerable<XAttribute> Attributes(this Collections.Generic.IEnumerable<XElement> source, XName name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Attributes(source As Collections.Generic.IEnumerable(Of XElement), name As XName) As Collections.Generic.IEnumerable(Of XAttribute)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    - id: name
      type: System.Xml.Linq.XName
      description: The <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> to match.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref> that contains a filtered collection of the attributes of every element in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement), System.Xml.Linq.XName)
  name.vb: Attributes(Collections.Generic.IEnumerable(Of XElement), XName)
- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  id: DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: DescendantNodes<T>(Collections.Generic.IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.DescendantNodes<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DescendantNodes
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 18
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a collection of the descendant nodes of every document and element in the source collection.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<XNode> DescendantNodes<T>(this Collections.Generic.IEnumerable<T> source)where T : XContainer'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DescendantNodes(Of T As XContainer)(source As Collections.Generic.IEnumerable(Of T)) As Collections.Generic.IEnumerable(Of XNode)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XContainer" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    typeParameters:
    - id: T
      description: The type of the objects in <em>source</em>, constrained to <xref href="System.Xml.Linq.XContainer" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref> of the descendant nodes of every document and element in the source collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.DescendantNodes(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: DescendantNodes(Of T)(Collections.Generic.IEnumerable(Of T))
- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  commentId: M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  id: DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: DescendantNodesAndSelf(Collections.Generic.IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DescendantNodesAndSelf
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 19
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.
  syntax:
    content: public static Collections.Generic.IEnumerable<XNode> DescendantNodesAndSelf(this Collections.Generic.IEnumerable<XElement> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DescendantNodesAndSelf(source As Collections.Generic.IEnumerable(Of XElement)) As Collections.Generic.IEnumerable(Of XNode)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref> that contains every element in the source collection, and the descendant nodes of every element in the source collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement))
  name.vb: DescendantNodesAndSelf(Collections.Generic.IEnumerable(Of XElement))
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})
  id: Descendants``1(System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Descendants<T>(Collections.Generic.IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Descendants<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Descendants
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 20
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a collection of elements that contains the descendant elements of every element and document in the source collection.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<XElement> Descendants<T>(this Collections.Generic.IEnumerable<T> source)where T : XContainer'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Descendants(Of T As XContainer)(source As Collections.Generic.IEnumerable(Of T)) As Collections.Generic.IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XContainer" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    typeParameters:
    - id: T
      description: The type of the objects in <em>source</em>, constrained to <xref href="System.Xml.Linq.XContainer" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the descendant elements of every element and document in the source collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Descendants(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Descendants(Of T)(Collections.Generic.IEnumerable(Of T))
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  id: Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Descendants<T>(Collections.Generic.IEnumerable<T>, XName)
  fullName: System.Xml.Linq.Extensions.Descendants<T>(System.Collections.Generic.IEnumerable<T>, System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Descendants
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 21
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<XElement> Descendants<T>(this Collections.Generic.IEnumerable<T> source, XName name)where T : XContainer'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Descendants(Of T As XContainer)(source As Collections.Generic.IEnumerable(Of T), name As XName) As Collections.Generic.IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XContainer" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    - id: name
      type: System.Xml.Linq.XName
      description: The <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> to match.
    typeParameters:
    - id: T
      description: The type of the objects in <em>source</em>, constrained to <xref href="System.Xml.Linq.XContainer" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the descendant elements of every element and document in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Descendants(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Xml.Linq.XName)
  name.vb: Descendants(Of T)(Collections.Generic.IEnumerable(Of T), XName)
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  commentId: M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  id: DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: DescendantsAndSelf(Collections.Generic.IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DescendantsAndSelf
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 22
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.
  syntax:
    content: public static Collections.Generic.IEnumerable<XElement> DescendantsAndSelf(this Collections.Generic.IEnumerable<XElement> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DescendantsAndSelf(source As Collections.Generic.IEnumerable(Of XElement)) As Collections.Generic.IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains every element in the source collection, and the descendent elements of every element in the source collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement))
  name.vb: DescendantsAndSelf(Collections.Generic.IEnumerable(Of XElement))
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  id: DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: DescendantsAndSelf(Collections.Generic.IEnumerable<XElement>, XName)
  fullName: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>, System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DescendantsAndSelf
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 23
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  syntax:
    content: public static Collections.Generic.IEnumerable<XElement> DescendantsAndSelf(this Collections.Generic.IEnumerable<XElement> source, XName name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DescendantsAndSelf(source As Collections.Generic.IEnumerable(Of XElement), name As XName) As Collections.Generic.IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    - id: name
      type: System.Xml.Linq.XName
      description: The <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> to match.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement), System.Xml.Linq.XName)
  name.vb: DescendantsAndSelf(Collections.Generic.IEnumerable(Of XElement), XName)
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})
  id: Elements``1(System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Elements<T>(Collections.Generic.IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Elements<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Elements
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 24
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a collection of the child elements of every element and document in the source collection.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<XElement> Elements<T>(this Collections.Generic.IEnumerable<T> source)where T : XContainer'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Elements(Of T As XContainer)(source As Collections.Generic.IEnumerable(Of T)) As Collections.Generic.IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    typeParameters:
    - id: T
      description: The type of the objects in <em>source</em>, constrained to <xref href="System.Xml.Linq.XContainer" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> of the child elements of every element or document in the source collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Elements(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Elements(Of T)(Collections.Generic.IEnumerable(Of T))
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  id: Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Elements<T>(Collections.Generic.IEnumerable<T>, XName)
  fullName: System.Xml.Linq.Extensions.Elements<T>(System.Collections.Generic.IEnumerable<T>, System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Elements
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 25
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a filtered collection of the child elements of every element and document in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<XElement> Elements<T>(this Collections.Generic.IEnumerable<T> source, XName name)where T : XContainer'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Elements(Of T As XContainer)(source As Collections.Generic.IEnumerable(Of T), name As XName) As Collections.Generic.IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    - id: name
      type: System.Xml.Linq.XName
      description: The <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> to match.
    typeParameters:
    - id: T
      description: The type of the objects in <em>source</em>, constrained to <xref href="System.Xml.Linq.XContainer" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> of the child elements of every element and document in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> are included in the collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Elements(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Xml.Linq.XName)
  name.vb: Elements(Of T)(Collections.Generic.IEnumerable(Of T), XName)
- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  id: InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: InDocumentOrder<T>(Collections.Generic.IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.InDocumentOrder<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InDocumentOrder
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 26
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<T> InDocumentOrder<T>(this Collections.Generic.IEnumerable<T> source)where T : XNode'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InDocumentOrder(Of T As XNode)(source As Collections.Generic.IEnumerable(Of T)) As Collections.Generic.IEnumerable(Of T)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    typeParameters:
    - id: T
      description: The type of the objects in <em>source</em>, constrained to <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref> that contains all nodes in the source collection, sorted in document order.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.InDocumentOrder(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: InDocumentOrder(Of T)(Collections.Generic.IEnumerable(Of T))
- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})
  id: Nodes``1(System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Nodes<T>(Collections.Generic.IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Nodes<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Nodes
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 27
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a collection of the child nodes of every document and element in the source collection.
  syntax:
    content: 'public static Collections.Generic.IEnumerable<XNode> Nodes<T>(this Collections.Generic.IEnumerable<T> source)where T : XContainer'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Nodes(Of T As XContainer)(source As Collections.Generic.IEnumerable(Of T)) As Collections.Generic.IEnumerable(Of XNode)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    typeParameters:
    - id: T
      description: The type of the objects in <em>source</em>, constrained to <xref href="System.Xml.Linq.XContainer" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref> of the child nodes of every document and element in the source collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Nodes(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Nodes(Of T)(Collections.Generic.IEnumerable(Of T))
- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  commentId: M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  id: Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Remove(Collections.Generic.IEnumerable<XAttribute>)
  fullName: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 28
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Removes every attribute in the source collection from its parent element.
  syntax:
    content: public static void Remove(this Collections.Generic.IEnumerable<XAttribute> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Remove(source As Collections.Generic.IEnumerable(Of XAttribute))
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref> that contains the source collection.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XAttribute))
  name.vb: Remove(Collections.Generic.IEnumerable(Of XAttribute))
- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})
  id: Remove``1(System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  - vb
  name: Remove<T>(Collections.Generic.IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Remove<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 29
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Removes every node in the source collection from its parent node.
  syntax:
    content: 'public static void Remove<T>(this Collections.Generic.IEnumerable<T> source)where T : XNode'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Remove(Of T As XNode)(source As Collections.Generic.IEnumerable(Of T))
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref> of <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref> that contains the source collection.
    typeParameters:
    - id: T
      description: The type of the objects in <em>source</em>, constrained to <xref href="System.Xml.Linq.XNode" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.Extensions.Remove(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Remove(Of T)(Collections.Generic.IEnumerable(Of T))
references:
- uid: System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: Generic.IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<Linq.XElement>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement)
  name.vb: Collections.Generic.IEnumerable(Of Linq.XElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: Linq.XElement
    fullName: System.Xml.Linq.XElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: Linq.XElement
    fullName: System.Xml.Linq.XElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: false
  name: XName
  fullName: System.Xml.Linq.XName
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<XAttribute>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XAttribute)
  name.vb: Collections.Generic.IEnumerable(Of XAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    fullName: System.Xml.Linq.XAttribute
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    fullName: System.Xml.Linq.XAttribute
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<XNode>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XNode)
  name.vb: Collections.Generic.IEnumerable(Of XNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
