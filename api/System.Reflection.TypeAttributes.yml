items:
- uid: System.Reflection.TypeAttributes
  commentId: T:System.Reflection.TypeAttributes
  id: TypeAttributes
  parent: System.Reflection
  children:
  - System.Reflection.TypeAttributes.Abstract
  - System.Reflection.TypeAttributes.AnsiClass
  - System.Reflection.TypeAttributes.AutoClass
  - System.Reflection.TypeAttributes.AutoLayout
  - System.Reflection.TypeAttributes.BeforeFieldInit
  - System.Reflection.TypeAttributes.Class
  - System.Reflection.TypeAttributes.ClassSemanticsMask
  - System.Reflection.TypeAttributes.CustomFormatClass
  - System.Reflection.TypeAttributes.CustomFormatMask
  - System.Reflection.TypeAttributes.ExplicitLayout
  - System.Reflection.TypeAttributes.HasSecurity
  - System.Reflection.TypeAttributes.Import
  - System.Reflection.TypeAttributes.Interface
  - System.Reflection.TypeAttributes.LayoutMask
  - System.Reflection.TypeAttributes.NestedAssembly
  - System.Reflection.TypeAttributes.NestedFamANDAssem
  - System.Reflection.TypeAttributes.NestedFamily
  - System.Reflection.TypeAttributes.NestedFamORAssem
  - System.Reflection.TypeAttributes.NestedPrivate
  - System.Reflection.TypeAttributes.NestedPublic
  - System.Reflection.TypeAttributes.NotPublic
  - System.Reflection.TypeAttributes.Public
  - System.Reflection.TypeAttributes.RTSpecialName
  - System.Reflection.TypeAttributes.Sealed
  - System.Reflection.TypeAttributes.SequentialLayout
  - System.Reflection.TypeAttributes.Serializable
  - System.Reflection.TypeAttributes.SpecialName
  - System.Reflection.TypeAttributes.StringFormatMask
  - System.Reflection.TypeAttributes.UnicodeClass
  - System.Reflection.TypeAttributes.VisibilityMask
  - System.Reflection.TypeAttributes.WindowsRuntime
  langs:
  - csharp
  - vb
  name: TypeAttributes
  fullName: System.Reflection.TypeAttributes
  type: Enum
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TypeAttributes
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 8
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies type attributes.
  syntax:
    content: 'public enum TypeAttributes : int'
    content.vb: Public Enum TypeAttributes As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Reflection.TypeAttributes.Abstract
  commentId: F:System.Reflection.TypeAttributes.Abstract
  id: Abstract
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: Abstract
  fullName: System.Reflection.TypeAttributes.Abstract
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Abstract
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 37
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the type is abstract.
  syntax:
    content: Abstract = null
    content.vb: Abstract = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.AnsiClass
  commentId: F:System.Reflection.TypeAttributes.AnsiClass
  id: AnsiClass
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: AnsiClass
  fullName: System.Reflection.TypeAttributes.AnsiClass
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AnsiClass
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 50
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: LPTSTR is interpreted as ANSI.
  syntax:
    content: AnsiClass = null
    content.vb: AnsiClass = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.AutoClass
  commentId: F:System.Reflection.TypeAttributes.AutoClass
  id: AutoClass
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: AutoClass
  fullName: System.Reflection.TypeAttributes.AutoClass
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AutoClass
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 52
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: LPTSTR is interpreted automatically.
  syntax:
    content: AutoClass = null
    content.vb: AutoClass = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.AutoLayout
  commentId: F:System.Reflection.TypeAttributes.AutoLayout
  id: AutoLayout
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: AutoLayout
  fullName: System.Reflection.TypeAttributes.AutoLayout
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AutoLayout
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 26
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that class fields are automatically laid out by the common language runtime.
  syntax:
    content: AutoLayout = null
    content.vb: AutoLayout = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.BeforeFieldInit
  commentId: F:System.Reflection.TypeAttributes.BeforeFieldInit
  id: BeforeFieldInit
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: BeforeFieldInit
  fullName: System.Reflection.TypeAttributes.BeforeFieldInit
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BeforeFieldInit
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 58
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that calling static methods of the type does not force the system to initialize the type.
  syntax:
    content: BeforeFieldInit = null
    content.vb: BeforeFieldInit = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.Class
  commentId: F:System.Reflection.TypeAttributes.Class
  id: Class
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: Class
  fullName: System.Reflection.TypeAttributes.Class
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Class
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 33
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the type is a class.
  syntax:
    content: Class = null
    content.vb: Class = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.ClassSemanticsMask
  commentId: F:System.Reflection.TypeAttributes.ClassSemanticsMask
  id: ClassSemanticsMask
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: ClassSemanticsMask
  fullName: System.Reflection.TypeAttributes.ClassSemanticsMask
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ClassSemanticsMask
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 32
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies class semantics information; the current class is contextful (else agile).
  syntax:
    content: ClassSemanticsMask = null
    content.vb: ClassSemanticsMask = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.CustomFormatClass
  commentId: F:System.Reflection.TypeAttributes.CustomFormatClass
  id: CustomFormatClass
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: CustomFormatClass
  fullName: System.Reflection.TypeAttributes.CustomFormatClass
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CustomFormatClass
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 53
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: LPSTR is interpreted by some implementation-specific means, which includes the possibility of throwing a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>. Not used in the Microsoft implementation of the .NET Framework.
  syntax:
    content: CustomFormatClass = null
    content.vb: CustomFormatClass = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.CustomFormatMask
  commentId: F:System.Reflection.TypeAttributes.CustomFormatMask
  id: CustomFormatMask
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: CustomFormatMask
  fullName: System.Reflection.TypeAttributes.CustomFormatMask
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CustomFormatMask
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 54
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Used to retrieve non-standard encoding information for native interop. The meaning of the values of these 2 bits is unspecified. Not used in the Microsoft implementation of the .NET Framework.
  syntax:
    content: CustomFormatMask = null
    content.vb: CustomFormatMask = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.ExplicitLayout
  commentId: F:System.Reflection.TypeAttributes.ExplicitLayout
  id: ExplicitLayout
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: ExplicitLayout
  fullName: System.Reflection.TypeAttributes.ExplicitLayout
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ExplicitLayout
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 28
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that class fields are laid out at the specified offsets.
  syntax:
    content: ExplicitLayout = null
    content.vb: ExplicitLayout = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.HasSecurity
  commentId: F:System.Reflection.TypeAttributes.HasSecurity
  id: HasSecurity
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: HasSecurity
  fullName: System.Reflection.TypeAttributes.HasSecurity
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: HasSecurity
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 63
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Type has security associate with it.
  syntax:
    content: HasSecurity = null
    content.vb: HasSecurity = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.Import
  commentId: F:System.Reflection.TypeAttributes.Import
  id: Import
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: Import
  fullName: System.Reflection.TypeAttributes.Import
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Import
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 42
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class or interface is imported from another module.
  syntax:
    content: Import = null
    content.vb: Import = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.Interface
  commentId: F:System.Reflection.TypeAttributes.Interface
  id: Interface
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: Interface
  fullName: System.Reflection.TypeAttributes.Interface
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Interface
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 34
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the type is an interface.
  syntax:
    content: Interface = null
    content.vb: Interface = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.LayoutMask
  commentId: F:System.Reflection.TypeAttributes.LayoutMask
  id: LayoutMask
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: LayoutMask
  fullName: System.Reflection.TypeAttributes.LayoutMask
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LayoutMask
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 25
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies class layout information.
  syntax:
    content: LayoutMask = null
    content.vb: LayoutMask = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.NestedAssembly
  commentId: F:System.Reflection.TypeAttributes.NestedAssembly
  id: NestedAssembly
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: NestedAssembly
  fullName: System.Reflection.TypeAttributes.NestedAssembly
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NestedAssembly
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 19
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class is nested with assembly visibility, and is thus accessible only by methods within its assembly.
  syntax:
    content: NestedAssembly = null
    content.vb: NestedAssembly = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.NestedFamANDAssem
  commentId: F:System.Reflection.TypeAttributes.NestedFamANDAssem
  id: NestedFamANDAssem
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: NestedFamANDAssem
  fullName: System.Reflection.TypeAttributes.NestedFamANDAssem
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NestedFamANDAssem
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 20
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class is nested with assembly and family visibility, and is thus accessible only by methods lying in the intersection of its family and assembly.
  syntax:
    content: NestedFamANDAssem = null
    content.vb: NestedFamANDAssem = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.NestedFamily
  commentId: F:System.Reflection.TypeAttributes.NestedFamily
  id: NestedFamily
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: NestedFamily
  fullName: System.Reflection.TypeAttributes.NestedFamily
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NestedFamily
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 18
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class is nested with family visibility, and is thus accessible only by methods within its own type and any derived types.
  syntax:
    content: NestedFamily = null
    content.vb: NestedFamily = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.NestedFamORAssem
  commentId: F:System.Reflection.TypeAttributes.NestedFamORAssem
  id: NestedFamORAssem
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: NestedFamORAssem
  fullName: System.Reflection.TypeAttributes.NestedFamORAssem
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NestedFamORAssem
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 21
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class is nested with family or assembly visibility, and is thus accessible only by methods lying in the union of its family and assembly.
  syntax:
    content: NestedFamORAssem = null
    content.vb: NestedFamORAssem = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.NestedPrivate
  commentId: F:System.Reflection.TypeAttributes.NestedPrivate
  id: NestedPrivate
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: NestedPrivate
  fullName: System.Reflection.TypeAttributes.NestedPrivate
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NestedPrivate
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 17
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class is nested with private visibility.
  syntax:
    content: NestedPrivate = null
    content.vb: NestedPrivate = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.NestedPublic
  commentId: F:System.Reflection.TypeAttributes.NestedPublic
  id: NestedPublic
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: NestedPublic
  fullName: System.Reflection.TypeAttributes.NestedPublic
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NestedPublic
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 16
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class is nested with public visibility.
  syntax:
    content: NestedPublic = null
    content.vb: NestedPublic = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.NotPublic
  commentId: F:System.Reflection.TypeAttributes.NotPublic
  id: NotPublic
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: NotPublic
  fullName: System.Reflection.TypeAttributes.NotPublic
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NotPublic
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 14
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class is not public.
  syntax:
    content: NotPublic = null
    content.vb: NotPublic = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.Public
  commentId: F:System.Reflection.TypeAttributes.Public
  id: Public
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: Public
  fullName: System.Reflection.TypeAttributes.Public
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Public
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 15
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class is public.
  syntax:
    content: Public = null
    content.vb: Public = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.RTSpecialName
  commentId: F:System.Reflection.TypeAttributes.RTSpecialName
  id: RTSpecialName
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: RTSpecialName
  fullName: System.Reflection.TypeAttributes.RTSpecialName
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RTSpecialName
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 62
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Runtime should check name encoding.
  syntax:
    content: RTSpecialName = null
    content.vb: RTSpecialName = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.Sealed
  commentId: F:System.Reflection.TypeAttributes.Sealed
  id: Sealed
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: Sealed
  fullName: System.Reflection.TypeAttributes.Sealed
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Sealed
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 38
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class is concrete and cannot be extended.
  syntax:
    content: Sealed = null
    content.vb: Sealed = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.SequentialLayout
  commentId: F:System.Reflection.TypeAttributes.SequentialLayout
  id: SequentialLayout
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: SequentialLayout
  fullName: System.Reflection.TypeAttributes.SequentialLayout
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SequentialLayout
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 27
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that class fields are laid out sequentially, in the order that the fields were emitted to the metadata.
  syntax:
    content: SequentialLayout = null
    content.vb: SequentialLayout = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.Serializable
  commentId: F:System.Reflection.TypeAttributes.Serializable
  id: Serializable
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: Serializable
  fullName: System.Reflection.TypeAttributes.Serializable
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Serializable
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 43
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class can be serialized.
  syntax:
    content: Serializable = null
    content.vb: Serializable = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.SpecialName
  commentId: F:System.Reflection.TypeAttributes.SpecialName
  id: SpecialName
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: SpecialName
  fullName: System.Reflection.TypeAttributes.SpecialName
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SpecialName
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 39
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the class is special in a way denoted by the name.
  syntax:
    content: SpecialName = null
    content.vb: SpecialName = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.StringFormatMask
  commentId: F:System.Reflection.TypeAttributes.StringFormatMask
  id: StringFormatMask
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: StringFormatMask
  fullName: System.Reflection.TypeAttributes.StringFormatMask
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StringFormatMask
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 49
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Used to retrieve string information for native interoperability.
  syntax:
    content: StringFormatMask = null
    content.vb: StringFormatMask = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.UnicodeClass
  commentId: F:System.Reflection.TypeAttributes.UnicodeClass
  id: UnicodeClass
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: UnicodeClass
  fullName: System.Reflection.TypeAttributes.UnicodeClass
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UnicodeClass
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 51
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: LPTSTR is interpreted as UNICODE.
  syntax:
    content: UnicodeClass = null
    content.vb: UnicodeClass = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.VisibilityMask
  commentId: F:System.Reflection.TypeAttributes.VisibilityMask
  id: VisibilityMask
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: VisibilityMask
  fullName: System.Reflection.TypeAttributes.VisibilityMask
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: VisibilityMask
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 13
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies type visibility information.
  syntax:
    content: VisibilityMask = null
    content.vb: VisibilityMask = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.TypeAttributes.WindowsRuntime
  commentId: F:System.Reflection.TypeAttributes.WindowsRuntime
  id: WindowsRuntime
  parent: System.Reflection.TypeAttributes
  langs:
  - csharp
  - vb
  name: WindowsRuntime
  fullName: System.Reflection.TypeAttributes.WindowsRuntime
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WindowsRuntime
    path: src/mscorlib/src/System/Reflection/TypeAttributes.cs
    startLine: 45
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies a Windows Runtime type.
  syntax:
    content: WindowsRuntime = null
    content.vb: WindowsRuntime = Nothing
    return:
      type: System.Reflection.TypeAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  fullName: System.Reflection.TypeAttributes
