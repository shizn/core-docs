items:
- uid: System.Numerics.Vector
  commentId: T:System.Numerics.Vector
  id: Vector
  parent: System.Numerics
  children:
  - System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.IsHardwareAccelerated
  - System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})
  - System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)
  - System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  langs:
  - csharp
  - vb
  name: Vector
  fullName: System.Numerics.Vector
  type: Class
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Vector
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 11
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public class Vector : object'
    content.vb: >-
      Public Class Vector
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Numerics.Vector.IsHardwareAccelerated
  commentId: P:System.Numerics.Vector.IsHardwareAccelerated
  id: IsHardwareAccelerated
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: IsHardwareAccelerated
  fullName: System.Numerics.Vector.IsHardwareAccelerated
  type: Property
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsHardwareAccelerated
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 526
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static bool IsHardwareAccelerated { get; }
    content.vb: Public Shared ReadOnly Property IsHardwareAccelerated As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})
  id: Abs``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Abs<T>(Vector<T>)
  fullName: System.Numerics.Vector.Abs<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Abs
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 544
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Abs<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function Abs(Of T As Structure)(value As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Abs(Of T)(System.Numerics.Vector(Of T))
  name.vb: Abs(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Add<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Add<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 607
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Add<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function Add(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Add(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: Add(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AndNot<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.AndNot<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AndNot
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 740
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> AndNot<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function AndNot(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AndNot(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: AndNot(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})
  id: AsVectorByte``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AsVectorByte<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorByte<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsVectorByte
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 753
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<byte> AsVectorByte<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function AsVectorByte(Of T As Structure)(value As Vector(Of T)) As Vector(Of Byte)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{System.Byte}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AsVectorByte(Of T)(System.Numerics.Vector(Of T))
  name.vb: AsVectorByte(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})
  id: AsVectorDouble``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AsVectorDouble<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorDouble<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsVectorDouble
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 857
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<double> AsVectorDouble<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function AsVectorDouble(Of T As Structure)(value As Vector(Of T)) As Vector(Of Double)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{System.Double}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AsVectorDouble(Of T)(System.Numerics.Vector(Of T))
  name.vb: AsVectorDouble(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})
  id: AsVectorInt16``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AsVectorInt16<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorInt16<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsVectorInt16
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 788
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<short> AsVectorInt16<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function AsVectorInt16(Of T As Structure)(value As Vector(Of T)) As Vector(Of Short)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{System.Int16}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AsVectorInt16(Of T)(System.Numerics.Vector(Of T))
  name.vb: AsVectorInt16(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})
  id: AsVectorInt32``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AsVectorInt32<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorInt32<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsVectorInt32
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 811
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<int> AsVectorInt32<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function AsVectorInt32(Of T As Structure)(value As Vector(Of T)) As Vector(Of Integer)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AsVectorInt32(Of T)(System.Numerics.Vector(Of T))
  name.vb: AsVectorInt32(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})
  id: AsVectorInt64``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AsVectorInt64<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorInt64<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsVectorInt64
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 835
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<long> AsVectorInt64<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function AsVectorInt64(Of T As Structure)(value As Vector(Of T)) As Vector(Of Long)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AsVectorInt64(Of T)(System.Numerics.Vector(Of T))
  name.vb: AsVectorInt64(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})
  id: AsVectorSByte``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AsVectorSByte<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorSByte<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsVectorSByte
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 764
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<sbyte> AsVectorSByte<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function AsVectorSByte(Of T As Structure)(value As Vector(Of T)) As Vector(Of SByte)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{System.SByte}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AsVectorSByte(Of T)(System.Numerics.Vector(Of T))
  name.vb: AsVectorSByte(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})
  id: AsVectorSingle``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AsVectorSingle<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorSingle<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsVectorSingle
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 846
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<float> AsVectorSingle<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function AsVectorSingle(Of T As Structure)(value As Vector(Of T)) As Vector(Of Single)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{System.Single}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AsVectorSingle(Of T)(System.Numerics.Vector(Of T))
  name.vb: AsVectorSingle(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})
  id: AsVectorUInt16``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AsVectorUInt16<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorUInt16<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsVectorUInt16
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 776
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<ushort> AsVectorUInt16<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function AsVectorUInt16(Of T As Structure)(value As Vector(Of T)) As Vector(Of UShort)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{System.UInt16}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AsVectorUInt16(Of T)(System.Numerics.Vector(Of T))
  name.vb: AsVectorUInt16(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})
  id: AsVectorUInt32``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AsVectorUInt32<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorUInt32<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsVectorUInt32
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 799
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<uint> AsVectorUInt32<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function AsVectorUInt32(Of T As Structure)(value As Vector(Of T)) As Vector(Of UInteger)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{System.UInt32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AsVectorUInt32(Of T)(System.Numerics.Vector(Of T))
  name.vb: AsVectorUInt32(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})
  id: AsVectorUInt64``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: AsVectorUInt64<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorUInt64<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsVectorUInt64
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 822
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<ulong> AsVectorUInt64<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function AsVectorUInt64(Of T As Structure)(value As Vector(Of T)) As Vector(Of ULong)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{System.UInt64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.AsVectorUInt64(Of T)(System.Numerics.Vector(Of T))
  name.vb: AsVectorUInt64(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: BitwiseAnd<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.BitwiseAnd<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BitwiseAnd
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 693
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> BitwiseAnd<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function BitwiseAnd(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.BitwiseAnd(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: BitwiseAnd(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: BitwiseOr<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.BitwiseOr<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BitwiseOr
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 705
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> BitwiseOr<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function BitwiseOr(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.BitwiseOr(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: BitwiseOr(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: ConditionalSelect(Vector<Int32>, Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector<System.Int32>, System.Numerics.Vector<System.Single>, System.Numerics.Vector<System.Single>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConditionalSelect
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 216
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<float> ConditionalSelect(Vector<int> condition, Vector<float> left, Vector<float> right)
    content.vb: Public Shared Function ConditionalSelect(condition As Vector(Of Integer), left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)
    parameters:
    - id: condition
      type: System.Numerics.Vector{System.Int32}
    - id: left
      type: System.Numerics.Vector{System.Single}
    - id: right
      type: System.Numerics.Vector{System.Single}
    return:
      type: System.Numerics.Vector{System.Single}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector(Of System.Int32), System.Numerics.Vector(Of System.Single), System.Numerics.Vector(Of System.Single))
  name.vb: ConditionalSelect(Vector(Of Int32), Vector(Of Single), Vector(Of Single))
- uid: System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: ConditionalSelect(Vector<Int64>, Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector<System.Int64>, System.Numerics.Vector<System.Double>, System.Numerics.Vector<System.Double>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConditionalSelect
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 36
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<double> ConditionalSelect(Vector<long> condition, Vector<double> left, Vector<double> right)
    content.vb: Public Shared Function ConditionalSelect(condition As Vector(Of Long), left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)
    parameters:
    - id: condition
      type: System.Numerics.Vector{System.Int64}
    - id: left
      type: System.Numerics.Vector{System.Double}
    - id: right
      type: System.Numerics.Vector{System.Double}
    return:
      type: System.Numerics.Vector{System.Double}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector(Of System.Int64), System.Numerics.Vector(Of System.Double), System.Numerics.Vector(Of System.Double))
  name.vb: ConditionalSelect(Vector(Of Int64), Vector(Of Double), Vector(Of Double))
- uid: System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: ConditionalSelect<T>(Vector<T>, Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.ConditionalSelect<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConditionalSelect
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 49
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> ConditionalSelect<T>(Vector<T> condition, Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function ConditionalSelect(Of T As Structure)(condition As Vector(Of T), left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: condition
      type: System.Numerics.Vector{{T}}
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.ConditionalSelect(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: ConditionalSelect(Of T)(Vector(Of T), Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Divide<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Divide<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Divide
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 668
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Divide<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function Divide(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Divide(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: Divide(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Dot<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Dot<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dot
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 582
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static T Dot<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function Dot(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As T
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Dot(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: Dot(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Equals(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.Equals(System.Numerics.Vector<System.Double>, System.Numerics.Vector<System.Double>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 100
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<long> Equals(Vector<double> left, Vector<double> right)
    content.vb: Public Shared Function Equals(left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Long)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Double}
    - id: right
      type: System.Numerics.Vector{System.Double}
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Equals(System.Numerics.Vector(Of System.Double), System.Numerics.Vector(Of System.Double))
  name.vb: Equals(Vector(Of Double), Vector(Of Double))
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  id: Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Equals(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.Equals(System.Numerics.Vector<System.Int32>, System.Numerics.Vector<System.Int32>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 88
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<int> Equals(Vector<int> left, Vector<int> right)
    content.vb: Public Shared Function Equals(left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int32}
    - id: right
      type: System.Numerics.Vector{System.Int32}
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Equals(System.Numerics.Vector(Of System.Int32), System.Numerics.Vector(Of System.Int32))
  name.vb: Equals(Vector(Of Int32), Vector(Of Int32))
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  id: Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Equals(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.Equals(System.Numerics.Vector<System.Int64>, System.Numerics.Vector<System.Int64>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 112
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<long> Equals(Vector<long> left, Vector<long> right)
    content.vb: Public Shared Function Equals(left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int64}
    - id: right
      type: System.Numerics.Vector{System.Int64}
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Equals(System.Numerics.Vector(Of System.Int64), System.Numerics.Vector(Of System.Int64))
  name.vb: Equals(Vector(Of Int64), Vector(Of Int64))
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Equals(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.Equals(System.Numerics.Vector<System.Single>, System.Numerics.Vector<System.Single>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 224
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<int> Equals(Vector<float> left, Vector<float> right)
    content.vb: Public Shared Function Equals(left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Integer)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Single}
    - id: right
      type: System.Numerics.Vector{System.Single}
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Equals(System.Numerics.Vector(Of System.Single), System.Numerics.Vector(Of System.Single))
  name.vb: Equals(Vector(Of Single), Vector(Of Single))
- uid: System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Equals<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Equals<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 64
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Equals<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function Equals(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Equals(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: Equals(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: EqualsAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.EqualsAll<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EqualsAll
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 124
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static bool EqualsAll<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function EqualsAll(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.EqualsAll(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: EqualsAll(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: EqualsAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.EqualsAny<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EqualsAny
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 136
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static bool EqualsAny<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function EqualsAny(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.EqualsAny(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: EqualsAny(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThan(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.GreaterThan(System.Numerics.Vector<System.Double>, System.Numerics.Vector<System.Double>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 376
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<long> GreaterThan(Vector<double> left, Vector<double> right)
    content.vb: Public Shared Function GreaterThan(left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Long)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Double}
    - id: right
      type: System.Numerics.Vector{System.Double}
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThan(System.Numerics.Vector(Of System.Double), System.Numerics.Vector(Of System.Double))
  name.vb: GreaterThan(Vector(Of Double), Vector(Of Double))
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  id: GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThan(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.GreaterThan(System.Numerics.Vector<System.Int32>, System.Numerics.Vector<System.Int32>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 363
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<int> GreaterThan(Vector<int> left, Vector<int> right)
    content.vb: Public Shared Function GreaterThan(left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int32}
    - id: right
      type: System.Numerics.Vector{System.Int32}
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThan(System.Numerics.Vector(Of System.Int32), System.Numerics.Vector(Of System.Int32))
  name.vb: GreaterThan(Vector(Of Int32), Vector(Of Int32))
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  id: GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThan(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.GreaterThan(System.Numerics.Vector<System.Int64>, System.Numerics.Vector<System.Int64>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 389
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<long> GreaterThan(Vector<long> left, Vector<long> right)
    content.vb: Public Shared Function GreaterThan(left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int64}
    - id: right
      type: System.Numerics.Vector{System.Int64}
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThan(System.Numerics.Vector(Of System.Int64), System.Numerics.Vector(Of System.Int64))
  name.vb: GreaterThan(Vector(Of Int64), Vector(Of Int64))
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThan(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.GreaterThan(System.Numerics.Vector<System.Single>, System.Numerics.Vector<System.Single>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 231
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<int> GreaterThan(Vector<float> left, Vector<float> right)
    content.vb: Public Shared Function GreaterThan(left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Integer)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Single}
    - id: right
      type: System.Numerics.Vector{System.Single}
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThan(System.Numerics.Vector(Of System.Single), System.Numerics.Vector(Of System.Single))
  name.vb: GreaterThan(Vector(Of Single), Vector(Of Single))
- uid: System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThan<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThan<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 337
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> GreaterThan<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function GreaterThan(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThan(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: GreaterThan(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThanAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanAll<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanAll
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 402
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static bool GreaterThanAll<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function GreaterThanAll(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThanAll(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: GreaterThanAll(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThanAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanAny<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanAny
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 415
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static bool GreaterThanAny<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function GreaterThanAny(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThanAny(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: GreaterThanAny(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector<System.Double>, System.Numerics.Vector<System.Double>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 483
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<long> GreaterThanOrEqual(Vector<double> left, Vector<double> right)
    content.vb: Public Shared Function GreaterThanOrEqual(left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Long)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Double}
    - id: right
      type: System.Numerics.Vector{System.Double}
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector(Of System.Double), System.Numerics.Vector(Of System.Double))
  name.vb: GreaterThanOrEqual(Vector(Of Double), Vector(Of Double))
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  id: GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector<System.Int32>, System.Numerics.Vector<System.Int32>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 457
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<int> GreaterThanOrEqual(Vector<int> left, Vector<int> right)
    content.vb: Public Shared Function GreaterThanOrEqual(left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int32}
    - id: right
      type: System.Numerics.Vector{System.Int32}
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector(Of System.Int32), System.Numerics.Vector(Of System.Int32))
  name.vb: GreaterThanOrEqual(Vector(Of Int32), Vector(Of Int32))
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  id: GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector<System.Int64>, System.Numerics.Vector<System.Int64>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 470
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<long> GreaterThanOrEqual(Vector<long> left, Vector<long> right)
    content.vb: Public Shared Function GreaterThanOrEqual(left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int64}
    - id: right
      type: System.Numerics.Vector{System.Int64}
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector(Of System.Int64), System.Numerics.Vector(Of System.Int64))
  name.vb: GreaterThanOrEqual(Vector(Of Int64), Vector(Of Int64))
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector<System.Single>, System.Numerics.Vector<System.Single>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 238
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<int> GreaterThanOrEqual(Vector<float> left, Vector<float> right)
    content.vb: Public Shared Function GreaterThanOrEqual(left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Integer)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Single}
    - id: right
      type: System.Numerics.Vector{System.Single}
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector(Of System.Single), System.Numerics.Vector(Of System.Single))
  name.vb: GreaterThanOrEqual(Vector(Of Single), Vector(Of Single))
- uid: System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 431
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> GreaterThanOrEqual<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function GreaterThanOrEqual(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThanOrEqual(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: GreaterThanOrEqual(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqualAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanOrEqualAll<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqualAll
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 496
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static bool GreaterThanOrEqualAll<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function GreaterThanOrEqualAll(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThanOrEqualAll(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: GreaterThanOrEqualAll(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqualAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanOrEqualAny<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqualAny
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 509
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static bool GreaterThanOrEqualAny<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function GreaterThanOrEqualAny(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.GreaterThanOrEqualAny(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: GreaterThanOrEqualAny(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThan(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.LessThan(System.Numerics.Vector<System.Double>, System.Numerics.Vector<System.Double>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 190
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<long> LessThan(Vector<double> left, Vector<double> right)
    content.vb: Public Shared Function LessThan(left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Long)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Double}
    - id: right
      type: System.Numerics.Vector{System.Double}
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThan(System.Numerics.Vector(Of System.Double), System.Numerics.Vector(Of System.Double))
  name.vb: LessThan(Vector(Of Double), Vector(Of Double))
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  id: LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThan(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.LessThan(System.Numerics.Vector<System.Int32>, System.Numerics.Vector<System.Int32>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 177
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<int> LessThan(Vector<int> left, Vector<int> right)
    content.vb: Public Shared Function LessThan(left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int32}
    - id: right
      type: System.Numerics.Vector{System.Int32}
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThan(System.Numerics.Vector(Of System.Int32), System.Numerics.Vector(Of System.Int32))
  name.vb: LessThan(Vector(Of Int32), Vector(Of Int32))
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  id: LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThan(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.LessThan(System.Numerics.Vector<System.Int64>, System.Numerics.Vector<System.Int64>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 203
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<long> LessThan(Vector<long> left, Vector<long> right)
    content.vb: Public Shared Function LessThan(left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int64}
    - id: right
      type: System.Numerics.Vector{System.Int64}
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThan(System.Numerics.Vector(Of System.Int64), System.Numerics.Vector(Of System.Int64))
  name.vb: LessThan(Vector(Of Int64), Vector(Of Int64))
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThan(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.LessThan(System.Numerics.Vector<System.Single>, System.Numerics.Vector<System.Single>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 245
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<int> LessThan(Vector<float> left, Vector<float> right)
    content.vb: Public Shared Function LessThan(left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Integer)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Single}
    - id: right
      type: System.Numerics.Vector{System.Single}
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThan(System.Numerics.Vector(Of System.Single), System.Numerics.Vector(Of System.Single))
  name.vb: LessThan(Vector(Of Single), Vector(Of Single))
- uid: System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThan<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThan<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 151
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> LessThan<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function LessThan(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThan(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: LessThan(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThanAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanAll<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanAll
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 215
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static bool LessThanAll<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function LessThanAll(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThanAll(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: LessThanAll(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThanAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanAny<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanAny
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 228
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static bool LessThanAny<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function LessThanAny(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThanAny(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: LessThanAny(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector<System.Double>, System.Numerics.Vector<System.Double>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 296
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<long> LessThanOrEqual(Vector<double> left, Vector<double> right)
    content.vb: Public Shared Function LessThanOrEqual(left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Long)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Double}
    - id: right
      type: System.Numerics.Vector{System.Double}
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector(Of System.Double), System.Numerics.Vector(Of System.Double))
  name.vb: LessThanOrEqual(Vector(Of Double), Vector(Of Double))
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  id: LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector<System.Int32>, System.Numerics.Vector<System.Int32>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 270
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<int> LessThanOrEqual(Vector<int> left, Vector<int> right)
    content.vb: Public Shared Function LessThanOrEqual(left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int32}
    - id: right
      type: System.Numerics.Vector{System.Int32}
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector(Of System.Int32), System.Numerics.Vector(Of System.Int32))
  name.vb: LessThanOrEqual(Vector(Of Int32), Vector(Of Int32))
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  id: LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector<System.Int64>, System.Numerics.Vector<System.Int64>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 283
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<long> LessThanOrEqual(Vector<long> left, Vector<long> right)
    content.vb: Public Shared Function LessThanOrEqual(left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int64}
    - id: right
      type: System.Numerics.Vector{System.Int64}
    return:
      type: System.Numerics.Vector{System.Int64}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector(Of System.Int64), System.Numerics.Vector(Of System.Int64))
  name.vb: LessThanOrEqual(Vector(Of Int64), Vector(Of Int64))
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector<System.Single>, System.Numerics.Vector<System.Single>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 252
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: public static Vector<int> LessThanOrEqual(Vector<float> left, Vector<float> right)
    content.vb: Public Shared Function LessThanOrEqual(left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Integer)
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Single}
    - id: right
      type: System.Numerics.Vector{System.Single}
    return:
      type: System.Numerics.Vector{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector(Of System.Single), System.Numerics.Vector(Of System.Single))
  name.vb: LessThanOrEqual(Vector(Of Single), Vector(Of Single))
- uid: System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThanOrEqual<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanOrEqual<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 244
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> LessThanOrEqual<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function LessThanOrEqual(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThanOrEqual(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: LessThanOrEqual(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThanOrEqualAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanOrEqualAll<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqualAll
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 308
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static bool LessThanOrEqualAll<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function LessThanOrEqualAll(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThanOrEqualAll(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: LessThanOrEqualAll(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: LessThanOrEqualAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanOrEqualAny<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqualAny
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 321
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static bool LessThanOrEqualAny<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function LessThanOrEqualAny(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.LessThanOrEqualAny(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: LessThanOrEqualAny(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Max<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Max<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Max
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 568
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Max<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function Max(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Max(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: Max(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Min<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Min<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Min
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 556
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Min<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function Min(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Min(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: Min(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})
  id: Multiply``1(``0,System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Multiply<T>(T, Vector<T>)
  fullName: System.Numerics.Vector.Multiply<T>(T, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 655
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Multiply<T>(T left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function Multiply(Of T As Structure)(left As T, right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: '{T}'
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Multiply(Of T)(T, System.Numerics.Vector(Of T))
  name.vb: Multiply(Of T)(T, Vector(Of T))
- uid: System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)
  commentId: M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)
  id: Multiply``1(System.Numerics.Vector{``0},``0)
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Multiply<T>(Vector<T>, T)
  fullName: System.Numerics.Vector.Multiply<T>(System.Numerics.Vector<T>, T)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 643
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Multiply<T>(Vector<T> left, T right)where T : struct'
    content.vb: Public Shared Function Multiply(Of T As Structure)(left As Vector(Of T), right As T) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Multiply(Of T)(System.Numerics.Vector(Of T), T)
  name.vb: Multiply(Of T)(Vector(Of T), T)
- uid: System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Multiply<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Multiply<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 631
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Multiply<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function Multiply(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Multiply(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: Multiply(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})
  id: Negate``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Negate<T>(Vector<T>)
  fullName: System.Numerics.Vector.Negate<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Negate
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 679
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Negate<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function Negate(Of T As Structure)(value As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Negate(Of T)(System.Numerics.Vector(Of T))
  name.vb: Negate(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})
  id: OnesComplement``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: OnesComplement<T>(Vector<T>)
  fullName: System.Numerics.Vector.OnesComplement<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnesComplement
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 716
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> OnesComplement<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function OnesComplement(Of T As Structure)(value As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.OnesComplement(Of T)(System.Numerics.Vector(Of T))
  name.vb: OnesComplement(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})
  id: SquareRoot``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: SquareRoot<T>(Vector<T>)
  fullName: System.Numerics.Vector.SquareRoot<T>(System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SquareRoot
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 593
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> SquareRoot<T>(Vector<T> value)where T : struct'
    content.vb: Public Shared Function SquareRoot(Of T As Structure)(value As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: value
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.SquareRoot(Of T)(System.Numerics.Vector(Of T))
  name.vb: SquareRoot(Of T)(Vector(Of T))
- uid: System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Subtract<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Subtract<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 619
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Subtract<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function Subtract(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Subtract(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: Subtract(Of T)(Vector(Of T), Vector(Of T))
- uid: System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  - vb
  name: Xor<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Xor<T>(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Xor
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector_Operations.cs
    startLine: 728
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  syntax:
    content: 'public static Vector<T> Xor<T>(Vector<T> left, Vector<T> right)where T : struct'
    content.vb: Public Shared Function Xor(Of T As Structure)(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector{{T}}
    - id: right
      type: System.Numerics.Vector{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Numerics.Vector{{T}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Vector.Xor(Of T)(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  name.vb: Xor(Of T)(Vector(Of T), Vector(Of T))
references:
- uid: System.Numerics
  isExternal: false
  name: System.Numerics
  fullName: System.Numerics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Vector{{T}}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<T>
  fullName: System.Numerics.Vector<T>
  fullname.vb: System.Numerics.Vector(Of T)
  name.vb: Vector(Of T)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Numerics.Vector`1
  parent: System.Numerics
  isExternal: false
  name: Vector<T>
  fullName: System.Numerics.Vector<T>
  fullname.vb: System.Numerics.Vector(Of T)
  name.vb: Vector(Of T)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Byte}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<Byte>
  fullName: System.Numerics.Vector<System.Byte>
  fullname.vb: System.Numerics.Vector(Of System.Byte)
  name.vb: Vector(Of Byte)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Double}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<Double>
  fullName: System.Numerics.Vector<System.Double>
  fullname.vb: System.Numerics.Vector(Of System.Double)
  name.vb: Vector(Of Double)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Int16}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<Int16>
  fullName: System.Numerics.Vector<System.Int16>
  fullname.vb: System.Numerics.Vector(Of System.Int16)
  name.vb: Vector(Of Int16)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Int32}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<Int32>
  fullName: System.Numerics.Vector<System.Int32>
  fullname.vb: System.Numerics.Vector(Of System.Int32)
  name.vb: Vector(Of Int32)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Int64}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<Int64>
  fullName: System.Numerics.Vector<System.Int64>
  fullname.vb: System.Numerics.Vector(Of System.Int64)
  name.vb: Vector(Of Int64)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.SByte}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<SByte>
  fullName: System.Numerics.Vector<System.SByte>
  fullname.vb: System.Numerics.Vector(Of System.SByte)
  name.vb: Vector(Of SByte)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - uid: System.SByte
    name: SByte
    fullName: System.SByte
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - uid: System.SByte
    name: SByte
    fullName: System.SByte
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Single}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<Single>
  fullName: System.Numerics.Vector<System.Single>
  fullname.vb: System.Numerics.Vector(Of System.Single)
  name.vb: Vector(Of Single)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.UInt16}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<UInt16>
  fullName: System.Numerics.Vector<System.UInt16>
  fullname.vb: System.Numerics.Vector(Of System.UInt16)
  name.vb: Vector(Of UInt16)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - uid: System.UInt16
    name: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt16
    name: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.UInt32}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<UInt32>
  fullName: System.Numerics.Vector<System.UInt32>
  fullname.vb: System.Numerics.Vector(Of System.UInt32)
  name.vb: Vector(Of UInt32)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.UInt64}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<UInt64>
  fullName: System.Numerics.Vector<System.UInt64>
  fullname.vb: System.Numerics.Vector(Of System.UInt64)
  name.vb: Vector(Of UInt64)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
