items:
- uid: System.ComponentModel.AsyncOperationManager
  commentId: T:System.ComponentModel.AsyncOperationManager
  id: AsyncOperationManager
  parent: System.ComponentModel
  children:
  - System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)
  - System.ComponentModel.AsyncOperationManager.SynchronizationContext
  langs:
  - csharp
  - vb
  name: AsyncOperationManager
  fullName: System.ComponentModel.AsyncOperationManager
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsyncOperationManager
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
    startLine: 10
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Provides concurrency management for classes that support asynchronous method calls. This class cannot be inherited.
  syntax:
    content: 'public class AsyncOperationManager : object'
    content.vb: >-
      Public Class AsyncOperationManager
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.AsyncOperationManager.SynchronizationContext
  commentId: P:System.ComponentModel.AsyncOperationManager.SynchronizationContext
  id: SynchronizationContext
  parent: System.ComponentModel.AsyncOperationManager
  langs:
  - csharp
  - vb
  name: SynchronizationContext
  fullName: System.ComponentModel.AsyncOperationManager.SynchronizationContext
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SynchronizationContext
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
    startLine: 17
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Gets or sets the synchronization context for the asynchronous operation.
  syntax:
    content: public static Threading.SynchronizationContext SynchronizationContext { get; set; }
    content.vb: Public Shared Property SynchronizationContext As Threading.SynchronizationContext
    parameters: []
    return:
      type: System.Threading.SynchronizationContext
      description: The synchronization context for the asynchronous operation.
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)
  commentId: M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)
  id: CreateOperation(System.Object)
  parent: System.ComponentModel.AsyncOperationManager
  langs:
  - csharp
  - vb
  name: CreateOperation(Object)
  fullName: System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateOperation
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
    startLine: 12
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: Returns an <xref href="System.ComponentModel.AsyncOperation" data-throw-if-not-resolved="false"></xref> for tracking the duration of a particular asynchronous operation.
  syntax:
    content: public static AsyncOperation CreateOperation(object userSuppliedState)
    content.vb: Public Shared Function CreateOperation(userSuppliedState As Object) As AsyncOperation
    parameters:
    - id: userSuppliedState
      type: System.Object
      description: 'An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation. '
    return:
      type: System.ComponentModel.AsyncOperation
      description: An <xref href="System.ComponentModel.AsyncOperation" data-throw-if-not-resolved="false"></xref> that you can use to track the duration of an asynchronous method invocation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: false
  name: Threading.SynchronizationContext
  fullName: System.Threading.SynchronizationContext
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.ComponentModel.AsyncOperation
  parent: System.ComponentModel
  isExternal: false
  name: AsyncOperation
  fullName: System.ComponentModel.AsyncOperation
