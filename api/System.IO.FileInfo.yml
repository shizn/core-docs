items:
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  id: FileInfo
  parent: System.IO
  children:
  - System.IO.FileInfo.#ctor(System.String)
  - System.IO.FileInfo.AppendText
  - System.IO.FileInfo.CopyTo(System.String)
  - System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  - System.IO.FileInfo.Create
  - System.IO.FileInfo.CreateText
  - System.IO.FileInfo.Delete
  - System.IO.FileInfo.Directory
  - System.IO.FileInfo.DirectoryName
  - System.IO.FileInfo.Exists
  - System.IO.FileInfo.IsReadOnly
  - System.IO.FileInfo.Length
  - System.IO.FileInfo.MoveTo(System.String)
  - System.IO.FileInfo.Name
  - System.IO.FileInfo.Open(System.IO.FileMode)
  - System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  - System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.FileInfo.OpenRead
  - System.IO.FileInfo.OpenText
  - System.IO.FileInfo.OpenWrite
  - System.IO.FileInfo.ToString
  langs:
  - csharp
  - vb
  name: FileInfo
  fullName: System.IO.FileInfo
  type: Class
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileInfo
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.Windows.cs
    startLine: 9
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <xref href="System.IO.FileStream" data-throw-if-not-resolved="false"></xref> objects. This class cannot be inherited.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public sealed class FileInfo : FileSystemInfo'
    content.vb: >-
      Public NotInheritable Class FileInfo
          Inherits FileSystemInfo
  inheritance:
  - System.Object
  - System.IO.FileSystemInfo
  inheritedMembers:
  - System.IO.FileSystemInfo.FullPath
  - System.IO.FileSystemInfo.OriginalPath
  - System.IO.FileSystemInfo.Attributes
  - System.IO.FileSystemInfo.CreationTime
  - System.IO.FileSystemInfo.CreationTimeUtc
  - System.IO.FileSystemInfo.Extension
  - System.IO.FileSystemInfo.FullName
  - System.IO.FileSystemInfo.LastAccessTime
  - System.IO.FileSystemInfo.LastAccessTimeUtc
  - System.IO.FileSystemInfo.LastWriteTime
  - System.IO.FileSystemInfo.LastWriteTimeUtc
  - System.IO.FileSystemInfo.Refresh
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.IO.FileInfo.#ctor(System.String)
  commentId: M:System.IO.FileInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: FileInfo(String)
  fullName: System.IO.FileInfo.FileInfo(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 145
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileInfo" data-throw-if-not-resolved="false"></xref> class, which acts as a wrapper for a file path.
  syntax:
    content: public FileInfo(string fileName)
    content.vb: Public Sub New(fileName As String)
    parameters:
    - id: fileName
      type: System.String
      description: The fully qualified name of the new file, or the relative file name. Do not end the path with the directory separator character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>fileName</em> is null. "
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The file name is empty, contains only white spaces, or contains invalid characters. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'Access to <em>fileName</em> is denied. '
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: 'The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>fileName</em> contains a colon (:) in the middle of the string. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.Directory
  commentId: P:System.IO.FileInfo.Directory
  id: Directory
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: Directory
  fullName: System.IO.FileInfo.Directory
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Directory
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 90
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets an instance of the parent directory.
  syntax:
    content: public DirectoryInfo Directory { get; }
    content.vb: Public ReadOnly Property Directory As DirectoryInfo
    parameters: []
    return:
      type: System.IO.DirectoryInfo
      description: A <xref href="System.IO.DirectoryInfo" data-throw-if-not-resolved="false"></xref> object representing the parent directory of this file.
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: 'The specified path is invalid, such as being on an unmapped drive. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.FileInfo.DirectoryName
  commentId: P:System.IO.FileInfo.DirectoryName
  id: DirectoryName
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: DirectoryName
  fullName: System.IO.FileInfo.DirectoryName
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DirectoryName
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 80
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets a string representing the directory's full path.
  syntax:
    content: public string DirectoryName { get; }
    content.vb: Public ReadOnly Property DirectoryName As String
    parameters: []
    return:
      type: System.String
      description: A string representing the directory's full path.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'null was passed in for the directory name. '
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: The fully qualified path is 260 or more characters.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.FileInfo.Exists
  commentId: P:System.IO.FileInfo.Exists
  id: Exists
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: Exists
  fullName: System.IO.FileInfo.Exists
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Exists
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 205
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets a value indicating whether a file exists.
  syntax:
    content: public override bool Exists { get; }
    content.vb: Public Overrides ReadOnly Property Exists As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the file exists; false if the file does not exist or if the file is a directory.
  overridden: System.IO.FileSystemInfo.Exists
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.FileInfo.IsReadOnly
  commentId: P:System.IO.FileInfo.IsReadOnly
  id: IsReadOnly
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.IO.FileInfo.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 101
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets or sets a value that determines if the current file is read only.
  syntax:
    content: public bool IsReadOnly { get; set; }
    content.vb: Public Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current file is read only; otherwise, false.
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The file described by the current <xref href="System.IO.FileInfo" data-throw-if-not-resolved="false"></xref> object could not be found.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurred while opening the file.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: This operation is not supported on the current platform.-or- The caller does not have the required permission.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The user does not have write permission, but attempted to set this property to false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.Length
  commentId: P:System.IO.FileInfo.Length
  id: Length
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: Length
  fullName: System.IO.FileInfo.Length
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 66
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets the size, in bytes, of the current file.
  syntax:
    content: public long Length { get; }
    content.vb: Public ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: The size of the current file in bytes.
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<xref href=\"System.IO.FileSystemInfo.Refresh\" data-throw-if-not-resolved=\"false\"></xref> cannot update the state of the file or directory. "
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: 'The file does not exist.-or- The Length property is called for a directory. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.FileInfo.Name
  commentId: P:System.IO.FileInfo.Name
  id: Name
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.IO.FileInfo.Name
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 60
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Gets the name of the file.
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The name of the file.
  overridden: System.IO.FileSystemInfo.Name
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.FileInfo.AppendText
  commentId: M:System.IO.FileInfo.AppendText
  id: AppendText
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: AppendText()
  fullName: System.IO.FileInfo.AppendText()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AppendText
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 129
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Creates a <xref href="System.IO.StreamWriter" data-throw-if-not-resolved="false"></xref> that appends text to the file represented by this instance of the <xref href="System.IO.FileInfo" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public StreamWriter AppendText()
    content.vb: Public Function AppendText As StreamWriter
    return:
      type: System.IO.StreamWriter
      description: A new StreamWriter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.CopyTo(System.String)
  commentId: M:System.IO.FileInfo.CopyTo(System.String)
  id: CopyTo(System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: CopyTo(String)
  fullName: System.IO.FileInfo.CopyTo(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 153
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Copies an existing file to a new file, disallowing the overwriting of an existing file.
  syntax:
    content: public FileInfo CopyTo(string destFileName)
    content.vb: Public Function CopyTo(destFileName As String) As FileInfo
    parameters:
    - id: destFileName
      type: System.String
      description: 'The name of the new file to copy to. '
    return:
      type: System.IO.FileInfo
      description: A new file with a fully qualified path.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>destFileName</em> is empty, contains only white spaces, or contains invalid characters. "
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An error occurs, or the destination file already exists. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>destFileName</em> is null. "
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'A directory path is passed in, or the file is being moved to a different drive. '
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The directory specified in <em>destFileName</em> does not exist.
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: 'The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>destFileName</em> contains a colon (:) within the string but does not specify the volume. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  commentId: M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  id: CopyTo(System.String,System.Boolean)
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: CopyTo(String, Boolean)
  fullName: System.IO.FileInfo.CopyTo(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 154
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Copies an existing file to a new file, allowing the overwriting of an existing file.
  syntax:
    content: public FileInfo CopyTo(string destFileName, bool overwrite)
    content.vb: Public Function CopyTo(destFileName As String, overwrite As Boolean) As FileInfo
    parameters:
    - id: destFileName
      type: System.String
      description: 'The name of the new file to copy to. '
    - id: overwrite
      type: System.Boolean
      description: 'true to allow an existing file to be overwritten; otherwise, false. '
    return:
      type: System.IO.FileInfo
      description: A new file, or an overwrite of an existing file if <em>overwrite</em> is true. If the file exists and <em>overwrite</em> is false, an <xref href="System.IO.IOException" data-throw-if-not-resolved="false"></xref> is thrown.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>destFileName</em> is empty, contains only white spaces, or contains invalid characters. "
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An error occurs, or the destination file already exists and <em>overwrite</em> is false. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>destFileName</em> is null. "
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The directory specified in <em>destFileName</em> does not exist.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'A directory path is passed in, or the file is being moved to a different drive. '
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: 'The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>destFileName</em> contains a colon (:) in the middle of the string. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.Create
  commentId: M:System.IO.FileInfo.Create
  id: Create
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: Create()
  fullName: System.IO.FileInfo.Create()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 179
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Creates a file.
  syntax:
    content: public FileStream Create()
    content.vb: Public Function Create As FileStream
    return:
      type: System.IO.FileStream
      description: A new file.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.CreateText
  commentId: M:System.IO.FileInfo.CreateText
  id: CreateText
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: CreateText()
  fullName: System.IO.FileInfo.CreateText()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateText
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 123
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Creates a <xref href="System.IO.StreamWriter" data-throw-if-not-resolved="false"></xref> that writes a new text file.
  syntax:
    content: public StreamWriter CreateText()
    content.vb: Public Function CreateText As StreamWriter
    return:
      type: System.IO.StreamWriter
      description: A new StreamWriter.
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The file name is a directory. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The disk is read-only. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.Delete
  commentId: M:System.IO.FileInfo.Delete
  id: Delete
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: Delete()
  fullName: System.IO.FileInfo.Delete()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delete
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 194
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Permanently deletes a file.
  syntax:
    content: public override void Delete()
    content.vb: Public Overrides Sub Delete
  overridden: System.IO.FileSystemInfo.Delete
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The target file is open or memory-mapped on a computer running Microsoft Windows NT.-or-There is an open handle on the file, and the operating system is Windows XP or earlier. This open handle can result from enumerating directories and files. For more information, see How to: Enumerate Directories and Files. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The path is a directory. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.FileInfo.MoveTo(System.String)
  commentId: M:System.IO.FileInfo.MoveTo(System.String)
  id: MoveTo(System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: MoveTo(String)
  fullName: System.IO.FileInfo.MoveTo(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveTo
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 158
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Moves a specified file to a new location, providing the option to specify a new file name.
  syntax:
    content: public void MoveTo(string destFileName)
    content.vb: Public Sub MoveTo(destFileName As String)
    parameters:
    - id: destFileName
      type: System.String
      description: 'The path to move the file to, which can specify a different file name. '
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs, such as the destination file already exists or the destination device is not ready. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>destFileName</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>destFileName</em> is empty, contains only white spaces, or contains invalid characters. "
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>destFileName</em> is read-only or is a directory. "
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: 'The file is not found. '
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: 'The specified path is invalid, such as being on an unmapped drive. '
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: 'The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>destFileName</em> contains a colon (:) in the middle of the string. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.Open(System.IO.FileMode)
  commentId: M:System.IO.FileInfo.Open(System.IO.FileMode)
  id: Open(System.IO.FileMode)
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: Open(FileMode)
  fullName: System.IO.FileInfo.Open(System.IO.FileMode)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 159
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Opens a file in the specified mode.
  syntax:
    content: public FileStream Open(FileMode mode)
    content.vb: Public Function Open(mode As FileMode) As FileStream
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: 'A <xref href="System.IO.FileMode" data-throw-if-not-resolved="false"></xref> constant specifying the mode (for example, Open or Append) in which to open the file. '
    return:
      type: System.IO.FileStream
      description: A file opened in the specified mode, with read/write access and unshared.
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: 'The file is not found. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The file is read-only or is a directory. '
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: 'The specified path is invalid, such as being on an unmapped drive. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The file is already open. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  commentId: M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: Open(FileMode, FileAccess)
  fullName: System.IO.FileInfo.Open(System.IO.FileMode, System.IO.FileAccess)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 160
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Opens a file in the specified mode with read, write, or read/write access.
  syntax:
    content: public FileStream Open(FileMode mode, FileAccess access)
    content.vb: Public Function Open(mode As FileMode, access As FileAccess) As FileStream
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: 'A <xref href="System.IO.FileMode" data-throw-if-not-resolved="false"></xref> constant specifying the mode (for example, Open or Append) in which to open the file. '
    - id: access
      type: System.IO.FileAccess
      description: 'A <xref href="System.IO.FileAccess" data-throw-if-not-resolved="false"></xref> constant specifying whether to open the file with Read, Write, or ReadWrite file access. '
    return:
      type: System.IO.FileStream
      description: A <xref href="System.IO.FileStream" data-throw-if-not-resolved="false"></xref> object opened in the specified mode and access, and unshared.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: 'The file is not found. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>path</em> is read-only or is a directory. "
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: 'The specified path is invalid, such as being on an unmapped drive. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The file is already open. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  commentId: M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: Open(FileMode, FileAccess, FileShare)
  fullName: System.IO.FileInfo.Open(System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.FileSystem/ref/System.IO.FileSystem.cs
    startLine: 161
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.
  syntax:
    content: public FileStream Open(FileMode mode, FileAccess access, FileShare share)
    content.vb: Public Function Open(mode As FileMode, access As FileAccess, share As FileShare) As FileStream
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: 'A <xref href="System.IO.FileMode" data-throw-if-not-resolved="false"></xref> constant specifying the mode (for example, Open or Append) in which to open the file. '
    - id: access
      type: System.IO.FileAccess
      description: 'A <xref href="System.IO.FileAccess" data-throw-if-not-resolved="false"></xref> constant specifying whether to open the file with Read, Write, or ReadWrite file access. '
    - id: share
      type: System.IO.FileShare
      description: 'A <xref href="System.IO.FileShare" data-throw-if-not-resolved="false"></xref> constant specifying the type of access other FileStream objects have to this file. '
    return:
      type: System.IO.FileStream
      description: A <xref href="System.IO.FileStream" data-throw-if-not-resolved="false"></xref> object opened with the specified mode, access, and sharing options.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: 'The file is not found. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>path</em> is read-only or is a directory. "
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: 'The specified path is invalid, such as being on an unmapped drive. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The file is already open. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.OpenRead
  commentId: M:System.IO.FileInfo.OpenRead
  id: OpenRead
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: OpenRead()
  fullName: System.IO.FileInfo.OpenRead()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenRead
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 238
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Creates a read-only <xref href="System.IO.FileStream" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public FileStream OpenRead()
    content.vb: Public Function OpenRead As FileStream
    return:
      type: System.IO.FileStream
      description: A new read-only <xref href="System.IO.FileStream" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>path</em> is read-only or is a directory. "
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: 'The specified path is invalid, such as being on an unmapped drive. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The file is already open. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.OpenText
  commentId: M:System.IO.FileInfo.OpenText
  id: OpenText
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: OpenText()
  fullName: System.IO.FileInfo.OpenText()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenText
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 116
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Creates a <xref href="System.IO.StreamReader" data-throw-if-not-resolved="false"></xref> with UTF8 encoding that reads from an existing text file.
  syntax:
    content: public StreamReader OpenText()
    content.vb: Public Function OpenText As StreamReader
    return:
      type: System.IO.StreamReader
      description: A new StreamReader with UTF8 encoding.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The caller does not have the required permission. '
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: 'The file is not found. '
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>path</em> is read-only or is a directory. "
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: 'The specified path is invalid, such as being on an unmapped drive. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.OpenWrite
  commentId: M:System.IO.FileInfo.OpenWrite
  id: OpenWrite
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: OpenWrite()
  fullName: System.IO.FileInfo.OpenWrite()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenWrite
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 246
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Creates a write-only <xref href="System.IO.FileStream" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public FileStream OpenWrite()
    content.vb: Public Function OpenWrite As FileStream
    return:
      type: System.IO.FileStream
      description: A write-only unshared <xref href="System.IO.FileStream" data-throw-if-not-resolved="false"></xref> object for a new or existing file.
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The path specified when creating an instance of the <xref href="System.IO.FileInfo" data-throw-if-not-resolved="false"></xref> object is read-only or is a directory.  '
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: 'The path specified when creating an instance of the <xref href="System.IO.FileInfo" data-throw-if-not-resolved="false"></xref> object is invalid, such as being on an unmapped drive. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileInfo.ToString
  commentId: M:System.IO.FileInfo.ToString
  id: ToString
  parent: System.IO.FileInfo
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.IO.FileInfo.ToString()
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.IO.FileSystem/src/System/IO/FileInfo.cs
    startLine: 294
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: Returns the path as a string.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representing the path.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IO.FileSystemInfo
  parent: System.IO
  isExternal: false
  name: FileSystemInfo
  fullName: System.IO.FileSystemInfo
- uid: System.IO.FileSystemInfo.FullPath
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullPath
  fullName: System.IO.FileSystemInfo.FullPath
- uid: System.IO.FileSystemInfo.OriginalPath
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: OriginalPath
  fullName: System.IO.FileSystemInfo.OriginalPath
- uid: System.IO.FileSystemInfo.Attributes
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Attributes
  fullName: System.IO.FileSystemInfo.Attributes
- uid: System.IO.FileSystemInfo.CreationTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTime
  fullName: System.IO.FileSystemInfo.CreationTime
- uid: System.IO.FileSystemInfo.CreationTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTimeUtc
  fullName: System.IO.FileSystemInfo.CreationTimeUtc
- uid: System.IO.FileSystemInfo.Extension
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Extension
  fullName: System.IO.FileSystemInfo.Extension
- uid: System.IO.FileSystemInfo.FullName
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullName
  fullName: System.IO.FileSystemInfo.FullName
- uid: System.IO.FileSystemInfo.LastAccessTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTime
  fullName: System.IO.FileSystemInfo.LastAccessTime
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTimeUtc
  fullName: System.IO.FileSystemInfo.LastAccessTimeUtc
- uid: System.IO.FileSystemInfo.LastWriteTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTime
  fullName: System.IO.FileSystemInfo.LastWriteTime
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTimeUtc
  fullName: System.IO.FileSystemInfo.LastWriteTimeUtc
- uid: System.IO.FileSystemInfo.Refresh
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Refresh()
  fullName: System.IO.FileSystemInfo.Refresh()
  spec.csharp:
  - uid: System.IO.FileSystemInfo.Refresh
    name: Refresh
    fullName: System.IO.FileSystemInfo.Refresh
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.FileSystemInfo.Refresh
    name: Refresh
    fullName: System.IO.FileSystemInfo.Refresh
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO.FileSystemInfo.Exists
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Exists
  fullName: System.IO.FileSystemInfo.Exists
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.IO.FileSystemInfo.Name
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Name
  fullName: System.IO.FileSystemInfo.Name
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: false
  name: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  fullName: System.IO.FileInfo
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.FileSystemInfo.Delete
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Delete()
  fullName: System.IO.FileSystemInfo.Delete()
  spec.csharp:
  - uid: System.IO.FileSystemInfo.Delete
    name: Delete
    fullName: System.IO.FileSystemInfo.Delete
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.FileSystemInfo.Delete
    name: Delete
    fullName: System.IO.FileSystemInfo.Delete
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: false
  name: StreamReader
  fullName: System.IO.StreamReader
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: false
  name: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.IO.PathTooLongException
  isExternal: false
  name: PathTooLongException
  fullName: System.IO.PathTooLongException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IO.DirectoryNotFoundException
  isExternal: false
  name: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: false
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
