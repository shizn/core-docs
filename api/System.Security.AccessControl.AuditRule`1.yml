items:
- uid: System.Security.AccessControl.AuditRule`1
  commentId: T:System.Security.AccessControl.AuditRule`1
  id: AuditRule`1
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.AuditRule`1.Rights
  langs:
  - csharp
  - vb
  name: AuditRule<T>
  fullName: System.Security.AccessControl.AuditRule<T>
  type: Class
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AuditRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 116
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "Represents a combination of a userâ€™s identity and an access mask."
  syntax:
    content: 'public class AuditRule<T> : AuditRule where T : struct'
    content.vb: >-
      Public Class AuditRule(Of T As Structure)
          Inherits AuditRule
    typeParameters:
    - id: T
      description: The type of the audit rule.
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Security.AccessControl.AuditRule(Of T)
  name.vb: AuditRule(Of T)
- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.AuditRule`1
  langs:
  - csharp
  - vb
  name: AuditRule(Principal.IdentityReference, T, AuditFlags)
  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.AuditFlags)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 118
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.AuditRule`1" data-throw-if-not-resolved="false"></xref> class by using the specified values.
  syntax:
    content: public AuditRule(Principal.IdentityReference identity, T rights, AuditFlags flags)
    content.vb: Public Sub New(identity As Principal.IdentityReference, rights As T, flags As AuditFlags)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The identity to which this audit rule applies.
    - id: rights
      type: '{T}'
      description: The rights of the audit rule.
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: The conditions for which the rule is audited.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.AccessControl.AuditRule(Of T).AuditRule(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.AuditFlags)
- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.AuditRule`1
  langs:
  - csharp
  - vb
  name: AuditRule(Principal.IdentityReference, T, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 119
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.AuditRule`1" data-throw-if-not-resolved="false"></xref> class by using the specified values.
  syntax:
    content: public AuditRule(Principal.IdentityReference identity, T rights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
    content.vb: Public Sub New(identity As Principal.IdentityReference, rights As T, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: 'The identity to which the audit rule applies. '
    - id: rights
      type: '{T}'
      description: The rights of the audit rule.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: The inheritance properties of the audit rule.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Whether inherited audit rules are automatically propagated.
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: The conditions for which the rule is audited.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.AccessControl.AuditRule(Of T).AuditRule(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.AuditRule`1
  langs:
  - csharp
  - vb
  name: AuditRule(String, T, AuditFlags)
  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(System.String, T, System.Security.AccessControl.AuditFlags)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 120
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.AuditRule`1" data-throw-if-not-resolved="false"></xref> class by using the specified values.
  syntax:
    content: public AuditRule(string identity, T rights, AuditFlags flags)
    content.vb: Public Sub New(identity As String, rights As T, flags As AuditFlags)
    parameters:
    - id: identity
      type: System.String
      description: The identity to which the audit rule applies.
    - id: rights
      type: '{T}'
      description: The rights of the audit rule.
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: The properties of the audit rule.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.AccessControl.AuditRule(Of T).AuditRule(System.String, T, System.Security.AccessControl.AuditFlags)
- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.AuditRule`1
  langs:
  - csharp
  - vb
  name: AuditRule(String, T, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(System.String, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 121
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.AuditRule`1" data-throw-if-not-resolved="false"></xref>class by using the specified values.
  syntax:
    content: public AuditRule(string identity, T rights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
    content.vb: Public Sub New(identity As String, rights As T, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags)
    parameters:
    - id: identity
      type: System.String
      description: The identity to which the audit rule applies.
    - id: rights
      type: '{T}'
      description: The rights of the audit rule.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: The inheritance properties of the audit rule.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Whether inherited audit rules are automatically propagated.
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: The conditions for which the rule is audited.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.AccessControl.AuditRule(Of T).AuditRule(System.String, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
- uid: System.Security.AccessControl.AuditRule`1.Rights
  commentId: P:System.Security.AccessControl.AuditRule`1.Rights
  id: Rights
  parent: System.Security.AccessControl.AuditRule`1
  langs:
  - csharp
  - vb
  name: Rights
  fullName: System.Security.AccessControl.AuditRule<T>.Rights
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Rights
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 122
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the rights of the audit rule.
  syntax:
    content: public T Rights { get; }
    content.vb: Public ReadOnly Property Rights As T
    parameters: []
    return:
      type: '{T}'
      description: The rights of the audit rule.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Security.AccessControl.AuditRule(Of T).Rights
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.AccessControl.AuthorizationRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuthorizationRule
  fullName: System.Security.AccessControl.AuthorizationRule
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditRule.AuditFlags
  parent: System.Security.AccessControl.AuditRule
  isExternal: false
  name: AuditFlags
  fullName: System.Security.AccessControl.AuditRule.AuditFlags
- uid: System.Security.AccessControl.AuthorizationRule.AccessMask
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: AccessMask
  fullName: System.Security.AccessControl.AuthorizationRule.AccessMask
- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: IdentityReference
  fullName: System.Security.AccessControl.AuthorizationRule.IdentityReference
- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: InheritanceFlags
  fullName: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
- uid: System.Security.AccessControl.AuthorizationRule.IsInherited
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: IsInherited
  fullName: System.Security.AccessControl.AuthorizationRule.IsInherited
- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: PropagationFlags
  fullName: System.Security.AccessControl.AuthorizationRule.PropagationFlags
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
