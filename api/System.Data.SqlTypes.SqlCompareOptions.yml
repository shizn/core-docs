items:
- uid: System.Data.SqlTypes.SqlCompareOptions
  commentId: T:System.Data.SqlTypes.SqlCompareOptions
  id: SqlCompareOptions
  parent: System.Data.SqlTypes
  children:
  - System.Data.SqlTypes.SqlCompareOptions.BinarySort
  - System.Data.SqlTypes.SqlCompareOptions.BinarySort2
  - System.Data.SqlTypes.SqlCompareOptions.IgnoreCase
  - System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType
  - System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace
  - System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth
  - System.Data.SqlTypes.SqlCompareOptions.None
  langs:
  - csharp
  - vb
  name: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
  type: Enum
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlCompareOptions
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 18
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Specifies the compare option values for a <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> structure.
  syntax:
    content: 'public enum SqlCompareOptions : int'
    content.vb: Public Enum SqlCompareOptions As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Data.SqlTypes.SqlCompareOptions.BinarySort
  commentId: F:System.Data.SqlTypes.SqlCompareOptions.BinarySort
  id: BinarySort
  parent: System.Data.SqlTypes.SqlCompareOptions
  langs:
  - csharp
  - vb
  name: BinarySort
  fullName: System.Data.SqlTypes.SqlCompareOptions.BinarySort
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinarySort
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 26
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.
  syntax:
    content: BinarySort = null
    content.vb: BinarySort = Nothing
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlTypes.SqlCompareOptions.BinarySort2
  commentId: F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2
  id: BinarySort2
  parent: System.Data.SqlTypes.SqlCompareOptions
  langs:
  - csharp
  - vb
  name: BinarySort2
  fullName: System.Data.SqlTypes.SqlCompareOptions.BinarySort2
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinarySort2
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 27
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a binary sort.
  syntax:
    content: BinarySort2 = null
    content.vb: BinarySort2 = Nothing
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlTypes.SqlCompareOptions.IgnoreCase
  commentId: F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase
  id: IgnoreCase
  parent: System.Data.SqlTypes.SqlCompareOptions
  langs:
  - csharp
  - vb
  name: IgnoreCase
  fullName: System.Data.SqlTypes.SqlCompareOptions.IgnoreCase
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreCase
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 22
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Specifies that <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> comparisons must ignore case.
  syntax:
    content: IgnoreCase = null
    content.vb: IgnoreCase = Nothing
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType
  commentId: F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType
  id: IgnoreKanaType
  parent: System.Data.SqlTypes.SqlCompareOptions
  langs:
  - csharp
  - vb
  name: IgnoreKanaType
  fullName: System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreKanaType
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 24
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Specifies that <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> comparisons must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as "computer" or "Internet". A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.
  syntax:
    content: IgnoreKanaType = null
    content.vb: IgnoreKanaType = Nothing
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace
  commentId: F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace
  id: IgnoreNonSpace
  parent: System.Data.SqlTypes.SqlCompareOptions
  langs:
  - csharp
  - vb
  name: IgnoreNonSpace
  fullName: System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreNonSpace
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 23
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Specifies that <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> comparisons must ignore nonspace combining characters, such as diacritics. The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at http://www.unicode.org.
  syntax:
    content: IgnoreNonSpace = null
    content.vb: IgnoreNonSpace = Nothing
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth
  commentId: F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth
  id: IgnoreWidth
  parent: System.Data.SqlTypes.SqlCompareOptions
  langs:
  - csharp
  - vb
  name: IgnoreWidth
  fullName: System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreWidth
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 25
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Specifies that <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> comparisons must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.
  syntax:
    content: IgnoreWidth = null
    content.vb: IgnoreWidth = Nothing
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlTypes.SqlCompareOptions.None
  commentId: F:System.Data.SqlTypes.SqlCompareOptions.None
  id: None
  parent: System.Data.SqlTypes.SqlCompareOptions
  langs:
  - csharp
  - vb
  name: None
  fullName: System.Data.SqlTypes.SqlCompareOptions.None
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: None
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 21
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Specifies the default option settings for <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> comparisons.
  syntax:
    content: None = null
    content.vb: None = Nothing
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Data.SqlTypes.SqlCompareOptions
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
