items:
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  id: IComparer`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.IComparer`1.Compare(`0,`0)
  langs:
  - csharp
  - vb
  name: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IComparer
    path: src/mscorlib/src/System/Collections/Generic/IComparer.cs
    startLine: 21
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: Defines a method that a type implements to compare two objects.
  syntax:
    content: public interface IComparer<in T>
    content.vb: Public Interface IComparer(Of In T)
    typeParameters:
    - id: T
      description: The type of objects to compare.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  id: Compare(`0,`0)
  parent: System.Collections.Generic.IComparer`1
  langs:
  - csharp
  - vb
  name: Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/Collections/Generic/IComparer.cs
    startLine: 27
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
  syntax:
    content: int Compare(T x, T y)
    content.vb: Function Compare(x As T, y As T) As Integer
    parameters:
    - id: x
      type: '{T}'
      description: The first object to compare.
    - id: y
      type: '{T}'
      description: The second object to compare.
    return:
      type: System.Int32
      description: A signed integer that indicates the relative values of <em>x</em> and <em>y</em>, as shown in the following table.Value Meaning Less than zero<em>x</em> is less than <em>y</em>.Zero<em>x</em> equals <em>y</em>.Greater than zero<em>x</em> is greater than <em>y</em>.
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System
  isExternal: false
  name: System
  fullName: System
