items:
- uid: System.Threading.AutoResetEvent
  commentId: T:System.Threading.AutoResetEvent
  id: AutoResetEvent
  parent: System.Threading
  children:
  - System.Threading.AutoResetEvent.#ctor(System.Boolean)
  langs:
  - csharp
  - vb
  name: AutoResetEvent
  fullName: System.Threading.AutoResetEvent
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/AutoResetEvent.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AutoResetEvent
    path: src/mscorlib/src/System/Threading/AutoResetEvent.cs
    startLine: 19
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Notifies a waiting thread that an event has occurred. This class cannot be inherited.
  syntax:
    content: 'public sealed class AutoResetEvent : EventWaitHandle'
    content.vb: >-
      Public NotInheritable Class AutoResetEvent
          Inherits EventWaitHandle
  inheritance:
  - System.Object
  - System.Threading.EventWaitHandle
  inheritedMembers:
  - System.Threading.EventWaitHandle.OpenExisting(System.String)
  - System.Threading.EventWaitHandle.Reset
  - System.Threading.EventWaitHandle.Set
  - System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Threading.AutoResetEvent.#ctor(System.Boolean)
  commentId: M:System.Threading.AutoResetEvent.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Threading.AutoResetEvent
  langs:
  - csharp
  - vb
  name: AutoResetEvent(Boolean)
  fullName: System.Threading.AutoResetEvent.AutoResetEvent(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/AutoResetEvent.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/AutoResetEvent.cs
    startLine: 23
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.AutoResetEvent" data-throw-if-not-resolved="false"></xref> class with a Boolean value indicating whether to set the initial state to signaled.
  syntax:
    content: public AutoResetEvent(bool initialState)
    content.vb: Public Sub New(initialState As Boolean)
    parameters:
    - id: initialState
      type: System.Boolean
      description: 'true to set the initial state to signaled; false to set the initial state to non-signaled. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Threading.EventWaitHandle
  parent: System.Threading
  isExternal: false
  name: EventWaitHandle
  fullName: System.Threading.EventWaitHandle
- uid: System.Threading.EventWaitHandle.OpenExisting(System.String)
  parent: System.Threading.EventWaitHandle
  isExternal: true
  name: OpenExisting(String)
  fullName: System.Threading.EventWaitHandle.OpenExisting(System.String)
  spec.csharp:
  - uid: System.Threading.EventWaitHandle.OpenExisting(System.String)
    name: OpenExisting
    fullName: System.Threading.EventWaitHandle.OpenExisting
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.EventWaitHandle.OpenExisting(System.String)
    name: OpenExisting
    fullName: System.Threading.EventWaitHandle.OpenExisting
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.EventWaitHandle.Reset
  parent: System.Threading.EventWaitHandle
  isExternal: false
  name: Reset()
  fullName: System.Threading.EventWaitHandle.Reset()
  spec.csharp:
  - uid: System.Threading.EventWaitHandle.Reset
    name: Reset
    fullName: System.Threading.EventWaitHandle.Reset
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.EventWaitHandle.Reset
    name: Reset
    fullName: System.Threading.EventWaitHandle.Reset
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Threading.EventWaitHandle.Set
  parent: System.Threading.EventWaitHandle
  isExternal: false
  name: Set()
  fullName: System.Threading.EventWaitHandle.Set()
  spec.csharp:
  - uid: System.Threading.EventWaitHandle.Set
    name: Set
    fullName: System.Threading.EventWaitHandle.Set
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.EventWaitHandle.Set
    name: Set
    fullName: System.Threading.EventWaitHandle.Set
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)
  parent: System.Threading.EventWaitHandle
  isExternal: true
  name: TryOpenExisting(String, EventWaitHandle)
  fullName: System.Threading.EventWaitHandle.TryOpenExisting(System.String, System.Threading.EventWaitHandle)
  spec.csharp:
  - uid: System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)
    name: TryOpenExisting
    fullName: System.Threading.EventWaitHandle.TryOpenExisting
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.EventWaitHandle
    name: EventWaitHandle
    fullName: System.Threading.EventWaitHandle
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)
    name: TryOpenExisting
    fullName: System.Threading.EventWaitHandle.TryOpenExisting
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.EventWaitHandle
    name: EventWaitHandle
    fullName: System.Threading.EventWaitHandle
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
