items:
- uid: System.Tuple
  commentId: T:System.Tuple
  id: Tuple
  parent: System
  children:
  - System.Tuple.Create``1(``0)
  - System.Tuple.Create``2(``0,``1)
  - System.Tuple.Create``3(``0,``1,``2)
  - System.Tuple.Create``4(``0,``1,``2,``3)
  - System.Tuple.Create``5(``0,``1,``2,``3,``4)
  - System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)
  - System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)
  - System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  langs:
  - csharp
  - vb
  name: Tuple
  fullName: System.Tuple
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Tuple.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Tuple
    path: src/mscorlib/src/System/Tuple.cs
    startLine: 21
  assemblies:
  - System.Runtime
  namespace: System
  summary: Provides static methods for creating tuple objects. To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: public class Tuple
    content.vb: Public Class Tuple
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Tuple.Create``1(``0)
  commentId: M:System.Tuple.Create``1(``0)
  id: Create``1(``0)
  parent: System.Tuple
  langs:
  - csharp
  - vb
  name: Create<T1>(T1)
  fullName: System.Tuple.Create<T1>(T1)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Tuple.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Create
    path: src/mscorlib/src/System/Tuple.cs
    startLine: 22
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates a new 1-tuple, or singleton.
  syntax:
    content: public static Tuple<T1> Create<T1>(T1 item1)
    content.vb: Public Shared Function Create(Of T1)(item1 As T1) As Tuple(Of T1)
    parameters:
    - id: item1
      type: '{T1}'
      description: The value of the only component of the tuple.
    typeParameters:
    - id: T1
      description: The type of the only component of the tuple.
    return:
      type: System.Tuple{{T1}}
      description: A tuple whose value is (<em>item1</em>).
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Tuple.Create(Of T1)(T1)
  name.vb: Create(Of T1)(T1)
- uid: System.Tuple.Create``2(``0,``1)
  commentId: M:System.Tuple.Create``2(``0,``1)
  id: Create``2(``0,``1)
  parent: System.Tuple
  langs:
  - csharp
  - vb
  name: Create<T1, T2>(T1, T2)
  fullName: System.Tuple.Create<T1, T2>(T1, T2)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Tuple.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Create
    path: src/mscorlib/src/System/Tuple.cs
    startLine: 26
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates a new 2-tuple, or pair.
  syntax:
    content: public static Tuple<T1, T2> Create<T1, T2>(T1 item1, T2 item2)
    content.vb: Public Shared Function Create(Of T1, T2)(item1 As T1, item2 As T2) As Tuple(Of T1, T2)
    parameters:
    - id: item1
      type: '{T1}'
      description: The value of the first component of the tuple.
    - id: item2
      type: '{T2}'
      description: The value of the second component of the tuple.
    typeParameters:
    - id: T1
      description: The type of the first component of the tuple.
    - id: T2
      description: The type of the second component of the tuple.
    return:
      type: System.Tuple{{T1},{T2}}
      description: A 2-tuple whose value is (<em>item1</em>, <em>item2</em>).
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Tuple.Create(Of T1, T2)(T1, T2)
  name.vb: Create(Of T1, T2)(T1, T2)
- uid: System.Tuple.Create``3(``0,``1,``2)
  commentId: M:System.Tuple.Create``3(``0,``1,``2)
  id: Create``3(``0,``1,``2)
  parent: System.Tuple
  langs:
  - csharp
  - vb
  name: Create<T1, T2, T3>(T1, T2, T3)
  fullName: System.Tuple.Create<T1, T2, T3>(T1, T2, T3)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Tuple.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Create
    path: src/mscorlib/src/System/Tuple.cs
    startLine: 30
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates a new 3-tuple, or triple.
  syntax:
    content: public static Tuple<T1, T2, T3> Create<T1, T2, T3>(T1 item1, T2 item2, T3 item3)
    content.vb: Public Shared Function Create(Of T1, T2, T3)(item1 As T1, item2 As T2, item3 As T3) As Tuple(Of T1, T2, T3)
    parameters:
    - id: item1
      type: '{T1}'
      description: The value of the first component of the tuple.
    - id: item2
      type: '{T2}'
      description: The value of the second component of the tuple.
    - id: item3
      type: '{T3}'
      description: The value of the third component of the tuple.
    typeParameters:
    - id: T1
      description: The type of the first component of the tuple.
    - id: T2
      description: The type of the second component of the tuple.
    - id: T3
      description: The type of the third component of the tuple.
    return:
      type: System.Tuple{{T1},{T2},{T3}}
      description: A 3-tuple whose value is (<em>item1</em>, <em>item2</em>, <em>item3</em>).
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Tuple.Create(Of T1, T2, T3)(T1, T2, T3)
  name.vb: Create(Of T1, T2, T3)(T1, T2, T3)
- uid: System.Tuple.Create``4(``0,``1,``2,``3)
  commentId: M:System.Tuple.Create``4(``0,``1,``2,``3)
  id: Create``4(``0,``1,``2,``3)
  parent: System.Tuple
  langs:
  - csharp
  - vb
  name: Create<T1, T2, T3, T4>(T1, T2, T3, T4)
  fullName: System.Tuple.Create<T1, T2, T3, T4>(T1, T2, T3, T4)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Tuple.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Create
    path: src/mscorlib/src/System/Tuple.cs
    startLine: 34
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates a new 4-tuple, or quadruple.
  syntax:
    content: public static Tuple<T1, T2, T3, T4> Create<T1, T2, T3, T4>(T1 item1, T2 item2, T3 item3, T4 item4)
    content.vb: Public Shared Function Create(Of T1, T2, T3, T4)(item1 As T1, item2 As T2, item3 As T3, item4 As T4) As Tuple(Of T1, T2, T3, T4)
    parameters:
    - id: item1
      type: '{T1}'
      description: The value of the first component of the tuple.
    - id: item2
      type: '{T2}'
      description: The value of the second component of the tuple.
    - id: item3
      type: '{T3}'
      description: The value of the third component of the tuple.
    - id: item4
      type: '{T4}'
      description: The value of the fourth component of the tuple.
    typeParameters:
    - id: T1
      description: The type of the first component of the tuple.
    - id: T2
      description: The type of the second component of the tuple.
    - id: T3
      description: The type of the third component of the tuple.
    - id: T4
      description: 'The type of the fourth component of the tuple.  '
    return:
      type: System.Tuple{{T1},{T2},{T3},{T4}}
      description: A 4-tuple whose value is (<em>item1</em>, <em>item2</em>, <em>item3</em>, <em>item4</em>).
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Tuple.Create(Of T1, T2, T3, T4)(T1, T2, T3, T4)
  name.vb: Create(Of T1, T2, T3, T4)(T1, T2, T3, T4)
- uid: System.Tuple.Create``5(``0,``1,``2,``3,``4)
  commentId: M:System.Tuple.Create``5(``0,``1,``2,``3,``4)
  id: Create``5(``0,``1,``2,``3,``4)
  parent: System.Tuple
  langs:
  - csharp
  - vb
  name: Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5)
  fullName: System.Tuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Tuple.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Create
    path: src/mscorlib/src/System/Tuple.cs
    startLine: 38
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates a new 5-tuple, or quintuple.
  syntax:
    content: public static Tuple<T1, T2, T3, T4, T5> Create<T1, T2, T3, T4, T5>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5)
    content.vb: Public Shared Function Create(Of T1, T2, T3, T4, T5)(item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5) As Tuple(Of T1, T2, T3, T4, T5)
    parameters:
    - id: item1
      type: '{T1}'
      description: The value of the first component of the tuple.
    - id: item2
      type: '{T2}'
      description: The value of the second component of the tuple.
    - id: item3
      type: '{T3}'
      description: The value of the third component of the tuple.
    - id: item4
      type: '{T4}'
      description: The value of the fourth component of the tuple.
    - id: item5
      type: '{T5}'
      description: The value of the fifth component of the tuple.
    typeParameters:
    - id: T1
      description: The type of the first component of the tuple.
    - id: T2
      description: The type of the second component of the tuple.
    - id: T3
      description: The type of the third component of the tuple.
    - id: T4
      description: The type of the fourth component of the tuple.
    - id: T5
      description: The type of the fifth component of the tuple.
    return:
      type: System.Tuple{{T1},{T2},{T3},{T4},{T5}}
      description: A 5-tuple whose value is (<em>item1</em>, <em>item2</em>, <em>item3</em>, <em>item4</em>, <em>item5</em>).
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Tuple.Create(Of T1, T2, T3, T4, T5)(T1, T2, T3, T4, T5)
  name.vb: Create(Of T1, T2, T3, T4, T5)(T1, T2, T3, T4, T5)
- uid: System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)
  commentId: M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)
  id: Create``6(``0,``1,``2,``3,``4,``5)
  parent: System.Tuple
  langs:
  - csharp
  - vb
  name: Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6)
  fullName: System.Tuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Tuple.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Create
    path: src/mscorlib/src/System/Tuple.cs
    startLine: 42
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates a new 6-tuple, or sextuple.
  syntax:
    content: public static Tuple<T1, T2, T3, T4, T5, T6> Create<T1, T2, T3, T4, T5, T6>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6)
    content.vb: Public Shared Function Create(Of T1, T2, T3, T4, T5, T6)(item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6) As Tuple(Of T1, T2, T3, T4, T5, T6)
    parameters:
    - id: item1
      type: '{T1}'
      description: The value of the first component of the tuple.
    - id: item2
      type: '{T2}'
      description: The value of the second component of the tuple.
    - id: item3
      type: '{T3}'
      description: The value of the third component of the tuple.
    - id: item4
      type: '{T4}'
      description: The value of the fourth component of the tuple.
    - id: item5
      type: '{T5}'
      description: The value of the fifth component of the tuple.
    - id: item6
      type: '{T6}'
      description: The value of the sixth component of the tuple.
    typeParameters:
    - id: T1
      description: The type of the first component of the tuple.
    - id: T2
      description: The type of the second component of the tuple.
    - id: T3
      description: The type of the third component of the tuple.
    - id: T4
      description: The type of the fourth component of the tuple.
    - id: T5
      description: The type of the fifth component of the tuple.
    - id: T6
      description: The type of the sixth component of the tuple.
    return:
      type: System.Tuple{{T1},{T2},{T3},{T4},{T5},{T6}}
      description: A 6-tuple whose value is (<em>item1</em>, <em>item2</em>, <em>item3</em>, <em>item4</em>, <em>item5</em>, <em>item6</em>).
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Tuple.Create(Of T1, T2, T3, T4, T5, T6)(T1, T2, T3, T4, T5, T6)
  name.vb: Create(Of T1, T2, T3, T4, T5, T6)(T1, T2, T3, T4, T5, T6)
- uid: System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)
  commentId: M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)
  id: Create``7(``0,``1,``2,``3,``4,``5,``6)
  parent: System.Tuple
  langs:
  - csharp
  - vb
  name: Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7)
  fullName: System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Tuple.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Create
    path: src/mscorlib/src/System/Tuple.cs
    startLine: 46
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates a new 7-tuple, or septuple.
  syntax:
    content: public static Tuple<T1, T2, T3, T4, T5, T6, T7> Create<T1, T2, T3, T4, T5, T6, T7>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7)
    content.vb: Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7)(item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7) As Tuple(Of T1, T2, T3, T4, T5, T6, T7)
    parameters:
    - id: item1
      type: '{T1}'
      description: The value of the first component of the tuple.
    - id: item2
      type: '{T2}'
      description: The value of the second component of the tuple.
    - id: item3
      type: '{T3}'
      description: The value of the third component of the tuple.
    - id: item4
      type: '{T4}'
      description: The value of the fourth component of the tuple.
    - id: item5
      type: '{T5}'
      description: The value of the fifth component of the tuple.
    - id: item6
      type: '{T6}'
      description: The value of the sixth component of the tuple.
    - id: item7
      type: '{T7}'
      description: The value of the seventh component of the tuple.
    typeParameters:
    - id: T1
      description: The type of the first component of the tuple.
    - id: T2
      description: The type of the second component of the tuple.
    - id: T3
      description: The type of the third component of the tuple.
    - id: T4
      description: The type of the fourth component of the tuple.
    - id: T5
      description: The type of the fifth component of the tuple.
    - id: T6
      description: The type of the sixth component of the tuple.
    - id: T7
      description: The type of the seventh component of the tuple.
    return:
      type: System.Tuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7}}
      description: A 7-tuple whose value is (<em>item1</em>, <em>item2</em>, <em>item3</em>, <em>item4</em>, <em>item5</em>, <em>item6</em>, <em>item7</em>).
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Tuple.Create(Of T1, T2, T3, T4, T5, T6, T7)(T1, T2, T3, T4, T5, T6, T7)
  name.vb: Create(Of T1, T2, T3, T4, T5, T6, T7)(T1, T2, T3, T4, T5, T6, T7)
- uid: System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  commentId: M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  id: Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  parent: System.Tuple
  langs:
  - csharp
  - vb
  name: Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName: System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Tuple.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Create
    path: src/mscorlib/src/System/Tuple.cs
    startLine: 50
  assemblies:
  - System.Runtime
  namespace: System
  summary: Creates a new 8-tuple, or octuple.
  syntax:
    content: public static Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8>> Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8)
    content.vb: Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8)(item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, item8 As T8) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8))
    parameters:
    - id: item1
      type: '{T1}'
      description: The value of the first component of the tuple.
    - id: item2
      type: '{T2}'
      description: The value of the second component of the tuple.
    - id: item3
      type: '{T3}'
      description: The value of the third component of the tuple.
    - id: item4
      type: '{T4}'
      description: The value of the fourth component of the tuple.
    - id: item5
      type: '{T5}'
      description: The value of the fifth component of the tuple.
    - id: item6
      type: '{T6}'
      description: The value of the sixth component of the tuple.
    - id: item7
      type: '{T7}'
      description: The value of the seventh component of the tuple.
    - id: item8
      type: '{T8}'
      description: The value of the eighth component of the tuple.
    typeParameters:
    - id: T1
      description: The type of the first component of the tuple.
    - id: T2
      description: The type of the second component of the tuple.
    - id: T3
      description: The type of the third component of the tuple.
    - id: T4
      description: The type of the fourth component of the tuple.
    - id: T5
      description: The type of the fifth component of the tuple.
    - id: T6
      description: The type of the sixth component of the tuple.
    - id: T7
      description: The type of the seventh component of the tuple.
    - id: T8
      description: The type of the eighth component of the tuple.
    return:
      type: System.Tuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.Tuple{{T8}}}
      description: 'An 8-tuple (octuple) whose value is (<em>item1</em>, <em>item2</em>, <em>item3</em>, <em>item4</em>, <em>item5</em>, <em>item6</em>, <em>item7</em>, <em>item8</em>). '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Tuple.Create(Of T1, T2, T3, T4, T5, T6, T7, T8)(T1, T2, T3, T4, T5, T6, T7, T8)
  name.vb: Create(Of T1, T2, T3, T4, T5, T6, T7, T8)(T1, T2, T3, T4, T5, T6, T7, T8)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: '{T1}'
  isExternal: false
  name: T1
  fullName: T1
- uid: System.Tuple{{T1}}
  parent: System
  definition: System.Tuple`1
  name: Tuple<T1>
  fullName: System.Tuple<T1>
  fullname.vb: System.Tuple(Of T1)
  name.vb: Tuple(Of T1)
  spec.csharp:
  - uid: System.Tuple`1
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`1
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: )
    fullName: )
- uid: System.Tuple`1
  parent: System
  isExternal: false
  name: Tuple<T1>
  fullName: System.Tuple<T1>
  fullname.vb: System.Tuple(Of T1)
  name.vb: Tuple(Of T1)
  spec.csharp:
  - uid: System.Tuple`1
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`1
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: )
    fullName: )
- uid: '{T2}'
  isExternal: false
  name: T2
  fullName: T2
- uid: System.Tuple{{T1},{T2}}
  parent: System
  definition: System.Tuple`2
  name: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  fullname.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: )
    fullName: )
- uid: System.Tuple`2
  parent: System
  isExternal: false
  name: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  fullname.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: )
    fullName: )
- uid: '{T3}'
  isExternal: false
  name: T3
  fullName: T3
- uid: System.Tuple{{T1},{T2},{T3}}
  parent: System
  definition: System.Tuple`3
  name: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  fullname.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: )
    fullName: )
- uid: System.Tuple`3
  parent: System
  isExternal: false
  name: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  fullname.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: )
    fullName: )
- uid: '{T4}'
  isExternal: false
  name: T4
  fullName: T4
- uid: System.Tuple{{T1},{T2},{T3},{T4}}
  parent: System
  definition: System.Tuple`4
  name: Tuple<T1, T2, T3, T4>
  fullName: System.Tuple<T1, T2, T3, T4>
  fullname.vb: System.Tuple(Of T1, T2, T3, T4)
  name.vb: Tuple(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Tuple`4
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`4
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: )
    fullName: )
- uid: System.Tuple`4
  parent: System
  isExternal: false
  name: Tuple<T1, T2, T3, T4>
  fullName: System.Tuple<T1, T2, T3, T4>
  fullname.vb: System.Tuple(Of T1, T2, T3, T4)
  name.vb: Tuple(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Tuple`4
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`4
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: )
    fullName: )
- uid: '{T5}'
  isExternal: false
  name: T5
  fullName: T5
- uid: System.Tuple{{T1},{T2},{T3},{T4},{T5}}
  parent: System
  definition: System.Tuple`5
  name: Tuple<T1, T2, T3, T4, T5>
  fullName: System.Tuple<T1, T2, T3, T4, T5>
  fullname.vb: System.Tuple(Of T1, T2, T3, T4, T5)
  name.vb: Tuple(Of T1, T2, T3, T4, T5)
  spec.csharp:
  - uid: System.Tuple`5
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`5
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: )
    fullName: )
- uid: System.Tuple`5
  parent: System
  isExternal: false
  name: Tuple<T1, T2, T3, T4, T5>
  fullName: System.Tuple<T1, T2, T3, T4, T5>
  fullname.vb: System.Tuple(Of T1, T2, T3, T4, T5)
  name.vb: Tuple(Of T1, T2, T3, T4, T5)
  spec.csharp:
  - uid: System.Tuple`5
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`5
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: )
    fullName: )
- uid: '{T6}'
  isExternal: false
  name: T6
  fullName: T6
- uid: System.Tuple{{T1},{T2},{T3},{T4},{T5},{T6}}
  parent: System
  definition: System.Tuple`6
  name: Tuple<T1, T2, T3, T4, T5, T6>
  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>
  fullname.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6)
  name.vb: Tuple(Of T1, T2, T3, T4, T5, T6)
  spec.csharp:
  - uid: System.Tuple`6
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`6
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: )
    fullName: )
- uid: System.Tuple`6
  parent: System
  isExternal: false
  name: Tuple<T1, T2, T3, T4, T5, T6>
  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>
  fullname.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6)
  name.vb: Tuple(Of T1, T2, T3, T4, T5, T6)
  spec.csharp:
  - uid: System.Tuple`6
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`6
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: )
    fullName: )
- uid: '{T7}'
  isExternal: false
  name: T7
  fullName: T7
- uid: System.Tuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7}}
  parent: System
  definition: System.Tuple`7
  name: Tuple<T1, T2, T3, T4, T5, T6, T7>
  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7>
  fullname.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7)
  name.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7)
  spec.csharp:
  - uid: System.Tuple`7
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: ', '
    fullName: ', '
  - name: T7
    fullName: T7
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`7
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: ', '
    fullName: ', '
  - name: T7
    fullName: T7
  - name: )
    fullName: )
- uid: System.Tuple`7
  parent: System
  isExternal: false
  name: Tuple<T1, T2, T3, T4, T5, T6, T7>
  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7>
  fullname.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7)
  name.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7)
  spec.csharp:
  - uid: System.Tuple`7
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: ', '
    fullName: ', '
  - name: T7
    fullName: T7
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`7
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: ', '
    fullName: ', '
  - name: T7
    fullName: T7
  - name: )
    fullName: )
- uid: '{T8}'
  isExternal: false
  name: T8
  fullName: T8
- uid: System.Tuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.Tuple{{T8}}}
  parent: System
  definition: System.Tuple`8
  name: Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8>>
  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, System.Tuple<T8>>
  fullname.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, System.Tuple(Of T8))
  name.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8))
  spec.csharp:
  - uid: System.Tuple`8
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: ', '
    fullName: ', '
  - name: T7
    fullName: T7
  - name: ', '
    fullName: ', '
  - uid: System.Tuple`1
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T8
    fullName: T8
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`8
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: ', '
    fullName: ', '
  - name: T7
    fullName: T7
  - name: ', '
    fullName: ', '
  - uid: System.Tuple`1
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T8
    fullName: T8
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Tuple`8
  parent: System
  isExternal: false
  name: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>
  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>
  fullname.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)
  name.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)
  spec.csharp:
  - uid: System.Tuple`8
    name: Tuple
    fullName: System.Tuple
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: ', '
    fullName: ', '
  - name: T7
    fullName: T7
  - name: ', '
    fullName: ', '
  - name: TRest
    fullName: TRest
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`8
    name: Tuple
    fullName: System.Tuple
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: T3
    fullName: T3
  - name: ', '
    fullName: ', '
  - name: T4
    fullName: T4
  - name: ', '
    fullName: ', '
  - name: T5
    fullName: T5
  - name: ', '
    fullName: ', '
  - name: T6
    fullName: T6
  - name: ', '
    fullName: ', '
  - name: T7
    fullName: T7
  - name: ', '
    fullName: ', '
  - name: TRest
    fullName: TRest
  - name: )
    fullName: )
