items:
- uid: System.Security.Cryptography.ICspAsymmetricAlgorithm
  commentId: T:System.Security.Cryptography.ICspAsymmetricAlgorithm
  id: ICspAsymmetricAlgorithm
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo
  - System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)
  - System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])
  langs:
  - csharp
  - vb
  name: ICspAsymmetricAlgorithm
  fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm
  type: Interface
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ICspAsymmetricAlgorithm
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 52
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: "Defines methods that allow an <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> class to enumerate key container information, and import and export Microsoft Cryptographic API (CAPI)â€“compatible key blobs."
  syntax:
    content: public interface ICspAsymmetricAlgorithm
    content.vb: Public Interface ICspAsymmetricAlgorithm
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo
  commentId: P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo
  id: CspKeyContainerInfo
  parent: System.Security.Cryptography.ICspAsymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: CspKeyContainerInfo
  fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CspKeyContainerInfo
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 54
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CspKeyContainerInfo" data-throw-if-not-resolved="false"></xref> object that describes additional information about a cryptographic key pair.
  syntax:
    content: CspKeyContainerInfo CspKeyContainerInfo { get; }
    content.vb: ReadOnly Property CspKeyContainerInfo As CspKeyContainerInfo
    parameters: []
    return:
      type: System.Security.Cryptography.CspKeyContainerInfo
      description: A <xref href="System.Security.Cryptography.CspKeyContainerInfo" data-throw-if-not-resolved="false"></xref> object that describes additional information about a cryptographic key pair.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)
  commentId: M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)
  id: ExportCspBlob(System.Boolean)
  parent: System.Security.Cryptography.ICspAsymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: ExportCspBlob(Boolean)
  fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExportCspBlob
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 55
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: 'Exports a blob that contains the key information associated with an <xref href="System.Security.Cryptography.AsymmetricAlgorithm" data-throw-if-not-resolved="false"></xref> object.  '
  syntax:
    content: byte[] ExportCspBlob(bool includePrivateParameters)
    content.vb: Function ExportCspBlob(includePrivateParameters As Boolean) As Byte()
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: true to include the private key; otherwise, false.
    return:
      type: System.Byte[]
      description: A byte array that contains the key information associated with an <xref href="System.Security.Cryptography.AsymmetricAlgorithm" data-throw-if-not-resolved="false"></xref> object.
- uid: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])
  commentId: M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])
  id: ImportCspBlob(System.Byte[])
  parent: System.Security.Cryptography.ICspAsymmetricAlgorithm
  langs:
  - csharp
  - vb
  name: ImportCspBlob(Byte[])
  fullName: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ImportCspBlob
    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs
    startLine: 56
  assemblies:
  - System.Security.Cryptography.Csp
  namespace: System.Security.Cryptography
  summary: 'Imports a blob that represents asymmetric key information.  '
  syntax:
    content: void ImportCspBlob(byte[] rawData)
    content.vb: Sub ImportCspBlob(rawData As Byte())
    parameters:
    - id: rawData
      type: System.Byte[]
      description: A byte array that represents an asymmetric key blob.
  fullName.vb: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte())
  name.vb: ImportCspBlob(Byte())
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Security.Cryptography.CspKeyContainerInfo
  parent: System.Security.Cryptography
  isExternal: false
  name: CspKeyContainerInfo
  fullName: System.Security.Cryptography.CspKeyContainerInfo
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System
  isExternal: false
  name: System
  fullName: System
