items:
- uid: System.Globalization.CompareInfo
  commentId: T:System.Globalization.CompareInfo
  id: CompareInfo
  parent: System.Globalization
  children:
  - System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)
  - System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)
  - System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.Compare(System.String,System.String)
  - System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.Equals(System.Object)
  - System.Globalization.CompareInfo.GetCompareInfo(System.String)
  - System.Globalization.CompareInfo.GetHashCode
  - System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.IndexOf(System.String,System.Char)
  - System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)
  - System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.IndexOf(System.String,System.String)
  - System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)
  - System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.IsPrefix(System.String,System.String)
  - System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.IsSuffix(System.String,System.String)
  - System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)
  - System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)
  - System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)
  - System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)
  - System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  - System.Globalization.CompareInfo.Name
  - System.Globalization.CompareInfo.ToString
  langs:
  - csharp
  - vb
  name: CompareInfo
  fullName: System.Globalization.CompareInfo
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareInfo
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 66
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Implements a set of methods for culture-sensitive string comparisons.
  syntax:
    content: 'public class CompareInfo : object'
    content.vb: >-
      Public Class CompareInfo
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Globalization.CompareInfo.Name
  commentId: P:System.Globalization.CompareInfo.Name
  id: Name
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Globalization.CompareInfo.Name
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Name
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 319
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Gets the name of the culture used for sorting operations by this <xref href="System.Globalization.CompareInfo" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual string Name { get; }
    content.vb: Public Overridable ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The name of a culture.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)
  commentId: M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)
  id: Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: Compare(String, Int32, Int32, String, Int32, Int32)
  fullName: System.Globalization.CompareInfo.Compare(System.String, System.Int32, System.Int32, System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 453
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Compares a section of one string with a section of another string.
  syntax:
    content: public virtual int Compare(string string1, int offset1, int length1, string string2, int offset2, int length2)
    content.vb: Public Overridable Function Compare(string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer) As Integer
    parameters:
    - id: string1
      type: System.String
      description: 'The first string to compare. '
    - id: offset1
      type: System.Int32
      description: 'The zero-based index of the character in <em>string1</em> at which to start comparing. '
    - id: length1
      type: System.Int32
      description: 'The number of consecutive characters in <em>string1</em> to compare. '
    - id: string2
      type: System.String
      description: 'The second string to compare. '
    - id: offset2
      type: System.Int32
      description: 'The zero-based index of the character in <em>string2</em> at which to start comparing. '
    - id: length2
      type: System.Int32
      description: 'The number of consecutive characters in <em>string2</em> to compare. '
    return:
      type: System.Int32
      description: 'A 32-bit signed integer indicating the lexical relationship between the two comparands.Value Condition zero The two strings are equal. less than zero The specified section of <em>string1</em> is less than the specified section of <em>string2</em>. greater than zero The specified section of <em>string1</em> is greater than the specified section of <em>string2</em>. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset1</em> or <em>length1</em> or <em>offset2</em> or <em>length2</em> is less than zero.-or- <em>offset1</em> is greater than or equal to the number of characters in <em>string1</em>.-or- <em>offset2</em> is greater than or equal to the number of characters in <em>string2</em>.-or- <em>length1</em> is greater than the number of characters from <em>offset1</em> to the end of <em>string1</em>.-or- <em>length2</em> is greater than the number of characters from <em>offset2</em> to the end of <em>string2</em>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  id: Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: Compare(String, Int32, Int32, String, Int32, Int32, CompareOptions)
  fullName: System.Globalization.CompareInfo.Compare(System.String, System.Int32, System.Int32, System.String, System.Int32, System.Int32, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 472
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Compares a section of one string with a section of another string using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int Compare(string string1, int offset1, int length1, string string2, int offset2, int length2, CompareOptions options)
    content.vb: Public Overridable Function Compare(string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer, options As CompareOptions) As Integer
    parameters:
    - id: string1
      type: System.String
      description: 'The first string to compare. '
    - id: offset1
      type: System.Int32
      description: 'The zero-based index of the character in <em>string1</em> at which to start comparing. '
    - id: length1
      type: System.Int32
      description: 'The number of consecutive characters in <em>string1</em> to compare. '
    - id: string2
      type: System.String
      description: 'The second string to compare. '
    - id: offset2
      type: System.Int32
      description: 'The zero-based index of the character in <em>string2</em> at which to start comparing. '
    - id: length2
      type: System.Int32
      description: 'The number of consecutive characters in <em>string2</em> to compare. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>string1</em> and <em>string2</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.StringSort" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: 'A 32-bit signed integer indicating the lexical relationship between the two comparands.Value Condition zero The two strings are equal. less than zero The specified section of <em>string1</em> is less than the specified section of <em>string2</em>. greater than zero The specified section of <em>string1</em> is greater than the specified section of <em>string2</em>. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset1</em> or <em>length1</em> or <em>offset2</em> or <em>length2</em> is less than zero.-or- <em>offset1</em> is greater than or equal to the number of characters in <em>string1</em>.-or- <em>offset2</em> is greater than or equal to the number of characters in <em>string2</em>.-or- <em>length1</em> is greater than the number of characters from <em>offset1</em> to the end of <em>string1</em>.-or- <em>length2</em> is greater than the number of characters from <em>offset2</em> to the end of <em>string2</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)
  commentId: M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)
  id: Compare(System.String,System.Int32,System.String,System.Int32)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: Compare(String, Int32, String, Int32)
  fullName: System.Globalization.CompareInfo.Compare(System.String, System.Int32, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 466
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Compares the end section of a string with the end section of another string.
  syntax:
    content: public virtual int Compare(string string1, int offset1, string string2, int offset2)
    content.vb: Public Overridable Function Compare(string1 As String, offset1 As Integer, string2 As String, offset2 As Integer) As Integer
    parameters:
    - id: string1
      type: System.String
      description: 'The first string to compare. '
    - id: offset1
      type: System.Int32
      description: 'The zero-based index of the character in <em>string1</em> at which to start comparing. '
    - id: string2
      type: System.String
      description: 'The second string to compare. '
    - id: offset2
      type: System.Int32
      description: 'The zero-based index of the character in <em>string2</em> at which to start comparing. '
    return:
      type: System.Int32
      description: 'A 32-bit signed integer indicating the lexical relationship between the two comparands.Value Condition zero The two strings are equal. less than zero The specified section of <em>string1</em> is less than the specified section of <em>string2</em>. greater than zero The specified section of <em>string1</em> is greater than the specified section of <em>string2</em>. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset1</em> or <em>offset2</em> is less than zero.-or- <em>offset1</em> is greater than or equal to the number of characters in <em>string1</em>.-or- <em>offset2</em> is greater than or equal to the number of characters in <em>string2</em>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)
  id: Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: Compare(String, Int32, String, Int32, CompareOptions)
  fullName: System.Globalization.CompareInfo.Compare(System.String, System.Int32, System.String, System.Int32, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 459
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Compares the end section of a string with the end section of another string using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int Compare(string string1, int offset1, string string2, int offset2, CompareOptions options)
    content.vb: Public Overridable Function Compare(string1 As String, offset1 As Integer, string2 As String, offset2 As Integer, options As CompareOptions) As Integer
    parameters:
    - id: string1
      type: System.String
      description: 'The first string to compare. '
    - id: offset1
      type: System.Int32
      description: 'The zero-based index of the character in <em>string1</em> at which to start comparing. '
    - id: string2
      type: System.String
      description: 'The second string to compare. '
    - id: offset2
      type: System.Int32
      description: 'The zero-based index of the character in <em>string2</em> at which to start comparing. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>string1</em> and <em>string2</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.StringSort" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: 'A 32-bit signed integer indicating the lexical relationship between the two comparands.Value Condition zero The two strings are equal. less than zero The specified section of <em>string1</em> is less than the specified section of <em>string2</em>. greater than zero The specified section of <em>string1</em> is greater than the specified section of <em>string2</em>. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset1</em> or <em>offset2</em> is less than zero.-or- <em>offset1</em> is greater than or equal to the number of characters in <em>string1</em>.-or- <em>offset2</em> is greater than or equal to the number of characters in <em>string2</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.Compare(System.String,System.String)
  commentId: M:System.Globalization.CompareInfo.Compare(System.String,System.String)
  id: Compare(System.String,System.String)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: Compare(String, String)
  fullName: System.Globalization.CompareInfo.Compare(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 396
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: 'Compares two strings. '
  syntax:
    content: public virtual int Compare(string string1, string string2)
    content.vb: Public Overridable Function Compare(string1 As String, string2 As String) As Integer
    parameters:
    - id: string1
      type: System.String
      description: 'The first string to compare. '
    - id: string2
      type: System.String
      description: 'The second string to compare. '
    return:
      type: System.Int32
      description: 'A 32-bit signed integer indicating the lexical relationship between the two comparands.Value Condition zero The two strings are equal. less than zero <em>string1</em> is less than <em>string2</em>. greater than zero <em>string1</em> is greater than <em>string2</em>. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)
  id: Compare(System.String,System.String,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: Compare(String, String, CompareOptions)
  fullName: System.Globalization.CompareInfo.Compare(System.String, System.String, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 401
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Compares two strings using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int Compare(string string1, string string2, CompareOptions options)
    content.vb: Public Overridable Function Compare(string1 As String, string2 As String, options As CompareOptions) As Integer
    parameters:
    - id: string1
      type: System.String
      description: 'The first string to compare. '
    - id: string2
      type: System.String
      description: 'The second string to compare. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>string1</em> and <em>string2</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.StringSort" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: 'A 32-bit signed integer indicating the lexical relationship between the two comparands.Value Condition zero The two strings are equal. less than zero <em>string1</em> is less than <em>string2</em>. greater than zero <em>string1</em> is greater than <em>string2</em>. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.Equals(System.Object)
  commentId: M:System.Globalization.CompareInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Globalization.CompareInfo.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 1136
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Determines whether the specified object is equal to the current <xref href="System.Globalization.CompareInfo" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: 'The object to compare with the current <xref href="System.Globalization.CompareInfo" data-throw-if-not-resolved="false"></xref>. '
    return:
      type: System.Boolean
      description: true if the specified object is equal to the current <xref href="System.Globalization.CompareInfo" data-throw-if-not-resolved="false"></xref>; otherwise, false.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.CompareInfo.GetCompareInfo(System.String)
  commentId: M:System.Globalization.CompareInfo.GetCompareInfo(System.String)
  id: GetCompareInfo(System.String)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: GetCompareInfo(String)
  fullName: System.Globalization.CompareInfo.GetCompareInfo(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCompareInfo
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 211
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Initializes a new <xref href="System.Globalization.CompareInfo" data-throw-if-not-resolved="false"></xref> object that is associated with the culture with the specified name.
  syntax:
    content: public static CompareInfo GetCompareInfo(string name)
    content.vb: Public Shared Function GetCompareInfo(name As String) As CompareInfo
    parameters:
    - id: name
      type: System.String
      description: 'A string representing the culture name. '
    return:
      type: System.Globalization.CompareInfo
      description: A new <xref href="System.Globalization.CompareInfo" data-throw-if-not-resolved="false"></xref> object associated with the culture with the specified identifier and using string comparison methods in the current <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>name</em> is an invalid culture name. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Globalization.CompareInfo.GetHashCode
  commentId: M:System.Globalization.CompareInfo.GetHashCode
  id: GetHashCode
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Globalization.CompareInfo.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 1160
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Serves as a hash function for the current <xref href="System.Globalization.CompareInfo" data-throw-if-not-resolved="false"></xref> for hashing algorithms and data structures, such as a hash table.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A hash code for the current <xref href="System.Globalization.CompareInfo" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)
  id: GetHashCode(System.String,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: GetHashCode(String, CompareOptions)
  fullName: System.Globalization.CompareInfo.GetHashCode(System.String, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 1169
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: 'Gets the hash code for a string based on specified comparison options. '
  syntax:
    content: public virtual int GetHashCode(string source, CompareOptions options)
    content.vb: Public Overridable Function GetHashCode(source As String, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string whose hash code is to be returned. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that determines how strings are compared. '
    return:
      type: System.Int32
      description: 'A 32-bit signed integer hash code. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IndexOf(System.String,System.Char)
  commentId: M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)
  id: IndexOf(System.String,System.Char)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IndexOf(String, Char)
  fullName: System.Globalization.CompareInfo.IndexOf(System.String, System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 672
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string.
  syntax:
    content: public virtual int IndexOf(string source, char value)
    content.vb: Public Overridable Function IndexOf(source As String, value As Char) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.Char
      description: 'The character to locate within <em>source</em>. '
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em>, if found, within <em>source</em>; otherwise, -1. Returns 0 (zero) if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)
  id: IndexOf(System.String,System.Char,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IndexOf(String, Char, CompareOptions)
  fullName: System.Globalization.CompareInfo.IndexOf(System.String, System.Char, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 692
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int IndexOf(string source, char value, CompareOptions options)
    content.vb: Public Overridable Function IndexOf(source As String, value As Char, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.Char
      description: 'The character to locate within <em>source</em>. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how the strings should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em>, if found, within <em>source</em>, using the specified comparison options; otherwise, -1. Returns 0 (zero) if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)
  id: IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IndexOf(String, Char, Int32, CompareOptions)
  fullName: System.Globalization.CompareInfo.IndexOf(System.String, System.Char, System.Int32, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 732
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int IndexOf(string source, char value, int startIndex, CompareOptions options)
    content.vb: Public Overridable Function IndexOf(source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.Char
      description: 'The character to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the search. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em>, if found, within the section of <em>source</em> that extends from <em>startIndex</em> to the end of <em>source</em>, using the specified comparison options; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)
  commentId: M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)
  id: IndexOf(System.String,System.Char,System.Int32,System.Int32)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IndexOf(String, Char, Int32, Int32)
  fullName: System.Globalization.CompareInfo.IndexOf(System.String, System.Char, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 752
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.
  syntax:
    content: public virtual int IndexOf(string source, char value, int startIndex, int count)
    content.vb: Public Overridable Function IndexOf(source As String, value As Char, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.Char
      description: 'The character to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the search. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the section to search. '
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em>, if found, within the section of <em>source</em> that starts at <em>startIndex</em> and contains the number of elements specified by <em>count</em>; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>.-or- <em>count</em> is less than zero.-or- <em>startIndex</em> and <em>count</em> do not specify a valid section in <em>source</em>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)
  id: IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IndexOf(String, Char, Int32, Int32, CompareOptions)
  fullName: System.Globalization.CompareInfo.IndexOf(System.String, System.Char, System.Int32, System.Int32, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 763
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int IndexOf(string source, char value, int startIndex, int count, CompareOptions options)
    content.vb: Public Overridable Function IndexOf(source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.Char
      description: 'The character to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the search. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the section to search. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em>, if found, within the section of <em>source</em> that starts at <em>startIndex</em> and contains the number of elements specified by <em>count</em>, using the specified comparison options; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>.-or- <em>count</em> is less than zero.-or- <em>startIndex</em> and <em>count</em> do not specify a valid section in <em>source</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IndexOf(System.String,System.String)
  commentId: M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)
  id: IndexOf(System.String,System.String)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IndexOf(String, String)
  fullName: System.Globalization.CompareInfo.IndexOf(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 682
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string.
  syntax:
    content: public virtual int IndexOf(string source, string value)
    content.vb: Public Overridable Function IndexOf(source As String, value As String) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.String
      description: 'The string to locate within <em>source</em>. '
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em>, if found, within <em>source</em>; otherwise, -1. Returns 0 (zero) if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>value</em> is null. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)
  id: IndexOf(System.String,System.String,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IndexOf(String, String, CompareOptions)
  fullName: System.Globalization.CompareInfo.IndexOf(System.String, System.String, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 702
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int IndexOf(string source, string value, CompareOptions options)
    content.vb: Public Overridable Function IndexOf(source As String, value As String, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.String
      description: 'The string to locate within <em>source</em>. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em>, if found, within <em>source</em>, using the specified comparison options; otherwise, -1. Returns 0 (zero) if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)
  id: IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IndexOf(String, String, Int32, CompareOptions)
  fullName: System.Globalization.CompareInfo.IndexOf(System.String, System.String, System.Int32, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 742
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int IndexOf(string source, string value, int startIndex, CompareOptions options)
    content.vb: Public Overridable Function IndexOf(source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.String
      description: 'The string to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the search. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em>, if found, within the section of <em>source</em> that extends from <em>startIndex</em> to the end of <em>source</em>, using the specified comparison options; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>value</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)
  commentId: M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)
  id: IndexOf(System.String,System.String,System.Int32,System.Int32)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IndexOf(String, String, Int32, Int32)
  fullName: System.Globalization.CompareInfo.IndexOf(System.String, System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 758
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.
  syntax:
    content: public virtual int IndexOf(string source, string value, int startIndex, int count)
    content.vb: Public Overridable Function IndexOf(source As String, value As String, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.String
      description: 'The string to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the search. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the section to search. '
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em>, if found, within the section of <em>source</em> that starts at <em>startIndex</em> and contains the number of elements specified by <em>count</em>; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>value</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>.-or- <em>count</em> is less than zero.-or- <em>startIndex</em> and <em>count</em> do not specify a valid section in <em>source</em>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  id: IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IndexOf(String, String, Int32, Int32, CompareOptions)
  fullName: System.Globalization.CompareInfo.IndexOf(System.String, System.String, System.Int32, System.Int32, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 796
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int IndexOf(string source, string value, int startIndex, int count, CompareOptions options)
    content.vb: Public Overridable Function IndexOf(source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.String
      description: 'The string to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the search. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the section to search. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em>, if found, within the section of <em>source</em> that starts at <em>startIndex</em> and contains the number of elements specified by <em>count</em>, using the specified comparison options; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>value</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>.-or- <em>count</em> is less than zero.-or- <em>startIndex</em> and <em>count</em> do not specify a valid section in <em>source</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IsPrefix(System.String,System.String)
  commentId: M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)
  id: IsPrefix(System.String,System.String)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IsPrefix(String, String)
  fullName: System.Globalization.CompareInfo.IsPrefix(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsPrefix
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 601
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Determines whether the specified source string starts with the specified prefix.
  syntax:
    content: public virtual bool IsPrefix(string source, string prefix)
    content.vb: Public Overridable Function IsPrefix(source As String, prefix As String) As Boolean
    parameters:
    - id: source
      type: System.String
      description: 'The string to search in. '
    - id: prefix
      type: System.String
      description: 'The string to compare with the beginning of <em>source</em>. '
    return:
      type: System.Boolean
      description: true if the length of <em>prefix</em> is less than or equal to the length of <em>source</em> and <em>source</em> starts with <em>prefix</em>; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>prefix</em> is null. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)
  id: IsPrefix(System.String,System.String,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IsPrefix(String, String, CompareOptions)
  fullName: System.Globalization.CompareInfo.IsPrefix(System.String, System.String, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsPrefix
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 562
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Determines whether the specified source string starts with the specified prefix using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual bool IsPrefix(string source, string prefix, CompareOptions options)
    content.vb: Public Overridable Function IsPrefix(source As String, prefix As String, options As CompareOptions) As Boolean
    parameters:
    - id: source
      type: System.String
      description: 'The string to search in. '
    - id: prefix
      type: System.String
      description: 'The string to compare with the beginning of <em>source</em>. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>prefix</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Boolean
      description: true if the length of <em>prefix</em> is less than or equal to the length of <em>source</em> and <em>source</em> starts with <em>prefix</em>; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>prefix</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IsSuffix(System.String,System.String)
  commentId: M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)
  id: IsSuffix(System.String,System.String)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IsSuffix(String, String)
  fullName: System.Globalization.CompareInfo.IsSuffix(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSuffix
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 653
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Determines whether the specified source string ends with the specified suffix.
  syntax:
    content: public virtual bool IsSuffix(string source, string suffix)
    content.vb: Public Overridable Function IsSuffix(source As String, suffix As String) As Boolean
    parameters:
    - id: source
      type: System.String
      description: 'The string to search in. '
    - id: suffix
      type: System.String
      description: 'The string to compare with the end of <em>source</em>. '
    return:
      type: System.Boolean
      description: true if the length of <em>suffix</em> is less than or equal to the length of <em>source</em> and <em>source</em> ends with <em>suffix</em>; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>suffix</em> is null. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)
  id: IsSuffix(System.String,System.String,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: IsSuffix(String, String, CompareOptions)
  fullName: System.Globalization.CompareInfo.IsSuffix(System.String, System.String, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSuffix
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 617
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Determines whether the specified source string ends with the specified suffix using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual bool IsSuffix(string source, string suffix, CompareOptions options)
    content.vb: Public Overridable Function IsSuffix(source As String, suffix As String, options As CompareOptions) As Boolean
    parameters:
    - id: source
      type: System.String
      description: 'The string to search in. '
    - id: suffix
      type: System.String
      description: 'The string to compare with the end of <em>source</em>. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>suffix</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref> used by itself, or the bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Boolean
      description: true if the length of <em>suffix</em> is less than or equal to the length of <em>source</em> and <em>source</em> ends with <em>suffix</em>; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>suffix</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)
  commentId: M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)
  id: LastIndexOf(System.String,System.Char)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: LastIndexOf(String, Char)
  fullName: System.Globalization.CompareInfo.LastIndexOf(System.String, System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LastIndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 862
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string.
  syntax:
    content: public virtual int LastIndexOf(string source, char value)
    content.vb: Public Overridable Function LastIndexOf(source As String, value As Char) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.Char
      description: 'The character to locate within <em>source</em>. '
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em>, if found, within <em>source</em>; otherwise, -1.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)
  id: LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: LastIndexOf(String, Char, CompareOptions)
  fullName: System.Globalization.CompareInfo.LastIndexOf(System.String, System.Char, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LastIndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 886
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int LastIndexOf(string source, char value, CompareOptions options)
    content.vb: Public Overridable Function LastIndexOf(source As String, value As Char, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.Char
      description: 'The character to locate within <em>source</em>. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em>, if found, within <em>source</em>, using the specified comparison options; otherwise, -1.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)
  id: LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: LastIndexOf(String, Char, Int32, CompareOptions)
  fullName: System.Globalization.CompareInfo.LastIndexOf(System.String, System.Char, System.Int32, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LastIndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 921
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int LastIndexOf(string source, char value, int startIndex, CompareOptions options)
    content.vb: Public Overridable Function LastIndexOf(source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.Char
      description: 'The character to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the backward search. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em>, if found, within the section of <em>source</em> that extends from the beginning of <em>source</em> to <em>startIndex</em>, using the specified comparison options; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)
  commentId: M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)
  id: LastIndexOf(System.String,System.Char,System.Int32,System.Int32)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: LastIndexOf(String, Char, Int32, Int32)
  fullName: System.Globalization.CompareInfo.LastIndexOf(System.String, System.Char, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LastIndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 933
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.
  syntax:
    content: public virtual int LastIndexOf(string source, char value, int startIndex, int count)
    content.vb: Public Overridable Function LastIndexOf(source As String, value As Char, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.Char
      description: 'The character to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the backward search. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the section to search. '
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em>, if found, within the section of <em>source</em> that contains the number of elements specified by <em>count</em> and that ends at <em>startIndex</em>; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>.-or- <em>count</em> is less than zero.-or- <em>startIndex</em> and <em>count</em> do not specify a valid section in <em>source</em>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)
  id: LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: LastIndexOf(String, Char, Int32, Int32, CompareOptions)
  fullName: System.Globalization.CompareInfo.LastIndexOf(System.String, System.Char, System.Int32, System.Int32, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LastIndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 945
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int LastIndexOf(string source, char value, int startIndex, int count, CompareOptions options)
    content.vb: Public Overridable Function LastIndexOf(source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.Char
      description: 'The character to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the backward search. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the section to search. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em>, if found, within the section of <em>source</em> that contains the number of elements specified by <em>count</em> and that ends at <em>startIndex</em>, using the specified comparison options; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>.-or- <em>count</em> is less than zero.-or- <em>startIndex</em> and <em>count</em> do not specify a valid section in <em>source</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)
  commentId: M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)
  id: LastIndexOf(System.String,System.String)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: LastIndexOf(String, String)
  fullName: System.Globalization.CompareInfo.LastIndexOf(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LastIndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 874
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string.
  syntax:
    content: public virtual int LastIndexOf(string source, string value)
    content.vb: Public Overridable Function LastIndexOf(source As String, value As String) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.String
      description: 'The string to locate within <em>source</em>. '
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em>, if found, within <em>source</em>; otherwise, -1.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>value</em> is null. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)
  id: LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: LastIndexOf(String, String, CompareOptions)
  fullName: System.Globalization.CompareInfo.LastIndexOf(System.String, System.String, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LastIndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 897
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int LastIndexOf(string source, string value, CompareOptions options)
    content.vb: Public Overridable Function LastIndexOf(source As String, value As String, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.String
      description: 'The string to locate within <em>source</em>. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em>, if found, within <em>source</em>, using the specified comparison options; otherwise, -1.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)
  id: LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: LastIndexOf(String, String, Int32, CompareOptions)
  fullName: System.Globalization.CompareInfo.LastIndexOf(System.String, System.String, System.Int32, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LastIndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 927
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int LastIndexOf(string source, string value, int startIndex, CompareOptions options)
    content.vb: Public Overridable Function LastIndexOf(source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.String
      description: 'The string to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the backward search. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em>, if found, within the section of <em>source</em> that extends from the beginning of <em>source</em> to <em>startIndex</em>, using the specified comparison options; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>value</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)
  commentId: M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)
  id: LastIndexOf(System.String,System.String,System.Int32,System.Int32)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: LastIndexOf(String, String, Int32, Int32)
  fullName: System.Globalization.CompareInfo.LastIndexOf(System.String, System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LastIndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 939
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.
  syntax:
    content: public virtual int LastIndexOf(string source, string value, int startIndex, int count)
    content.vb: Public Overridable Function LastIndexOf(source As String, value As String, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.String
      description: 'The string to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the backward search. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the section to search. '
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em>, if found, within the section of <em>source</em> that contains the number of elements specified by <em>count</em> and that ends at <em>startIndex</em>; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>value</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>.-or- <em>count</em> is less than zero.-or- <em>startIndex</em> and <em>count</em> do not specify a valid section in <em>source</em>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  commentId: M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  id: LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: LastIndexOf(String, String, Int32, Int32, CompareOptions)
  fullName: System.Globalization.CompareInfo.LastIndexOf(System.String, System.String, System.Int32, System.Int32, System.Globalization.CompareOptions)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LastIndexOf
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 994
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <xref href="System.Globalization.CompareOptions" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public virtual int LastIndexOf(string source, string value, int startIndex, int count, CompareOptions options)
    content.vb: Public Overridable Function LastIndexOf(source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer
    parameters:
    - id: source
      type: System.String
      description: 'The string to search. '
    - id: value
      type: System.String
      description: 'The string to locate within <em>source</em>. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the backward search. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the section to search. '
    - id: options
      type: System.Globalization.CompareOptions
      description: 'A value that defines how <em>source</em> and <em>value</em> should be compared. <em>options</em> is either the enumeration value <xref href="System.Globalization.CompareOptions.Ordinal" data-throw-if-not-resolved="false"></xref>, or a bitwise combination of one or more of the following values: <xref href="System.Globalization.CompareOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreSymbols" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreNonSpace" data-throw-if-not-resolved="false"></xref>, <xref href="System.Globalization.CompareOptions.IgnoreWidth" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Globalization.CompareOptions.IgnoreKanaType" data-throw-if-not-resolved="false"></xref>.'
    return:
      type: System.Int32
      description: 'The zero-based index of the last occurrence of <em>value</em>, if found, within the section of <em>source</em> that contains the number of elements specified by <em>count</em> and that ends at <em>startIndex</em>, using the specified comparison options; otherwise, -1. Returns <em>startIndex</em> if <em>value</em> is an ignorable character. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.-or- <em>value</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for <em>source</em>.-or- <em>count</em> is less than zero.-or- <em>startIndex</em> and <em>count</em> do not specify a valid section in <em>source</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>options</em> contains an invalid <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.CompareInfo.ToString
  commentId: M:System.Globalization.CompareInfo.ToString
  id: ToString
  parent: System.Globalization.CompareInfo
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Globalization.CompareInfo.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CompareInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Globalization/CompareInfo.cs
    startLine: 1260
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: Returns a string that represents the current <xref href="System.Globalization.CompareInfo" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string that represents the current <xref href="System.Globalization.CompareInfo" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Globalization.CompareOptions
  parent: System.Globalization
  isExternal: false
  name: CompareOptions
  fullName: System.Globalization.CompareOptions
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Globalization.CompareInfo
  parent: System.Globalization
  isExternal: false
  name: CompareInfo
  fullName: System.Globalization.CompareInfo
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
