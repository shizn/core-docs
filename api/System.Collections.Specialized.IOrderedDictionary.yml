items:
- uid: System.Collections.Specialized.IOrderedDictionary
  commentId: T:System.Collections.Specialized.IOrderedDictionary
  id: IOrderedDictionary
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  - System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  - System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  - System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  langs:
  - csharp
  - vb
  name: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
  type: Interface
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IOrderedDictionary
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
    startLine: 15
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Represents an indexed collection of key/value pairs.
  syntax:
    content: 'public interface IOrderedDictionary : ICollection, IDictionary, IEnumerable'
    content.vb: >-
      Public Interface IOrderedDictionary
          Inherits ICollection, IDictionary, IEnumerable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  commentId: P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.IOrderedDictionary
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Collections.Specialized.IOrderedDictionary.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
    startLine: 21
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets or sets the element at the specified index.
  syntax:
    content: object this[int index] { get; set; }
    content.vb: Property Item(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: System.Object
      description: The element at the specified index.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than 0.-or- <em>index</em> is equal to or greater than <xref href=\"System.Collections.ICollection.Count\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  commentId: M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.IOrderedDictionary
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
    startLine: 24
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Returns an enumerator that iterates through the <xref href="System.Collections.Specialized.IOrderedDictionary" data-throw-if-not-resolved="false"></xref> collection.
  syntax:
    content: IDictionaryEnumerator GetEnumerator()
    content.vb: Function GetEnumerator As IDictionaryEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
      description: An <xref href="System.Collections.IDictionaryEnumerator" data-throw-if-not-resolved="false"></xref> for the entire <xref href="System.Collections.Specialized.IOrderedDictionary" data-throw-if-not-resolved="false"></xref> collection.
- uid: System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  commentId: M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  id: Insert(System.Int32,System.Object,System.Object)
  parent: System.Collections.Specialized.IOrderedDictionary
  langs:
  - csharp
  - vb
  name: Insert(Int32, Object, Object)
  fullName: System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Insert
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
    startLine: 30
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Inserts a key/value pair into the collection at the specified index.
  syntax:
    content: void Insert(int index, object key, object value)
    content.vb: Sub Insert(index As Integer, key As Object, value As Object)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which the key/value pair should be inserted.
    - id: key
      type: System.Object
      description: The object to use as the key of the element to add.
    - id: value
      type: System.Object
      description: The object to use as the value of the element to add.  The value can be null.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than 0.-or-<em>index</em> is greater than <xref href=\"System.Collections.ICollection.Count\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An element with the same key already exists in the <xref href="System.Collections.Specialized.IOrderedDictionary" data-throw-if-not-resolved="false"></xref> collection.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Specialized.IOrderedDictionary" data-throw-if-not-resolved="false"></xref> collection is read-only.-or-The <xref href="System.Collections.Specialized.IOrderedDictionary" data-throw-if-not-resolved="false"></xref> collection has a fixed size.
- uid: System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  commentId: M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Specialized.IOrderedDictionary
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  fullName: System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/IOrderedDictionary.cs
    startLine: 35
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Removes the element at the specified index.
  syntax:
    content: void RemoveAt(int index)
    content.vb: Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to remove.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than 0.-or- <em>index</em> is equal to or greater than <xref href=\"System.Collections.ICollection.Count\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.Specialized.IOrderedDictionary" data-throw-if-not-resolved="false"></xref> collection is read-only.-or- The <xref href="System.Collections.Specialized.IOrderedDictionary" data-throw-if-not-resolved="false"></xref> collection has a fixed size. '
references:
- uid: System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
