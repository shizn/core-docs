items:
- uid: System.Collections.Generic.Comparer`1
  commentId: T:System.Collections.Generic.Comparer`1
  id: Comparer`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.Comparer`1.#ctor
  - System.Collections.Generic.Comparer`1.Compare(`0,`0)
  - System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})
  - System.Collections.Generic.Comparer`1.Default
  langs:
  - csharp
  - vb
  name: Comparer<T>
  fullName: System.Collections.Generic.Comparer<T>
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Comparer
    path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
    startLine: 15
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Provides a base class for implementations of the <xref href="System.Collections.Generic.IComparer`1" data-throw-if-not-resolved="false"></xref> generic interface.
  syntax:
    content: 'public abstract class Comparer<T> : IComparer<T>, IComparer'
    content.vb: >-
      Public MustInherit Class Comparer(Of T)
          Inherits IComparer(Of T)
          Implements IComparer
    typeParameters:
    - id: T
      description: The type of objects to compare.
  inheritance:
  - System.Object
  implements:
  - System.Collections.IComparer
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: System.Collections.Generic.Comparer(Of T)
  name.vb: Comparer(Of T)
- uid: System.Collections.Generic.Comparer`1.#ctor
  commentId: M:System.Collections.Generic.Comparer`1.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.Comparer`1
  langs:
  - csharp
  - vb
  name: Comparer()
  fullName: System.Collections.Generic.Comparer<T>.Comparer()
  type: Constructor
  source:
    remote:
      path: src/System.Collections/ref/System.Collections.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections/ref/System.Collections.cs
    startLine: 43
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="System.Collections.Generic.Comparer`1" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected Comparer()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Collections.Generic.Comparer(Of T).Comparer()
- uid: System.Collections.Generic.Comparer`1.Default
  commentId: P:System.Collections.Generic.Comparer`1.Default
  id: Default
  parent: System.Collections.Generic.Comparer`1
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.Collections.Generic.Comparer<T>.Default
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Default
    path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
    startLine: 21
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Returns a default sort order comparer for the type specified by the generic argument.
  syntax:
    content: public static Comparer<T> Default { get; }
    content.vb: Public Shared ReadOnly Property Default As Comparer(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.Comparer`1
      description: An object that inherits <xref href="System.Collections.Generic.Comparer`1" data-throw-if-not-resolved="false"></xref> and serves as a sort order comparer for type <em>T</em>.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: System.Collections.Generic.Comparer(Of T).Default
- uid: System.Collections.Generic.Comparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.Comparer`1.Compare(`0,`0)
  id: Compare(`0,`0)
  parent: System.Collections.Generic.Comparer`1
  langs:
  - csharp
  - vb
  name: Compare(T, T)
  fullName: System.Collections.Generic.Comparer<T>.Compare(T, T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
    startLine: 69
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.
  syntax:
    content: public abstract int Compare(T x, T y)
    content.vb: Public MustOverride Function Compare(x As T, y As T) As Integer
    parameters:
    - id: x
      type: '{T}'
      description: The first object to compare.
    - id: y
      type: '{T}'
      description: The second object to compare.
    return:
      type: System.Int32
      description: A signed integer that indicates the relative values of <em>x</em> and <em>y</em>, as shown in the following table.Value Meaning Less than zero <em>x</em> is less than <em>y</em>.Zero <em>x</em> equals <em>y</em>.Greater than zero <em>x</em> is greater than <em>y</em>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Type <em>T</em> does not implement either the <xref href="System.IComparable`1" data-throw-if-not-resolved="false"></xref> generic interface or the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Collections.Generic.Comparer(Of T).Compare(T, T)
- uid: System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})
  commentId: M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})
  id: Create(System.Comparison{`0})
  parent: System.Collections.Generic.Comparer`1
  langs:
  - csharp
  - vb
  name: Create(Comparison<T>)
  fullName: System.Collections.Generic.Comparer<T>.Create(System.Comparison<T>)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Create
    path: src/mscorlib/src/System/Collections/Generic/Comparer.cs
    startLine: 28
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Creates a comparer by using the specified comparison.
  syntax:
    content: public static Comparer<T> Create(Comparison<T> comparison)
    content.vb: Public Shared Function Create(comparison As Comparison(Of T)) As Comparer(Of T)
    parameters:
    - id: comparison
      type: System.Comparison{{T}}
      description: The comparison to use.
    return:
      type: System.Collections.Generic.Comparer`1
      description: The new comparer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Collections.Generic.Comparer(Of T).Create(System.Comparison(Of T))
  name.vb: Create(Comparison(Of T))
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  fullName: System.Collections.IComparer
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.Comparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: Comparer<T>
  fullName: System.Collections.Generic.Comparer<T>
  fullname.vb: System.Collections.Generic.Comparer(Of T)
  name.vb: Comparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Comparer`1
    name: Comparer
    fullName: System.Collections.Generic.Comparer
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Comparer`1
    name: Comparer
    fullName: System.Collections.Generic.Comparer
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Comparison{{T}}
  parent: System
  definition: System.Comparison`1
  name: Comparison<T>
  fullName: System.Comparison<T>
  fullname.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Comparison`1
  parent: System
  isExternal: false
  name: Comparison<>
  fullName: System.Comparison<>
  fullname.vb: System.Comparison(Of )
  name.vb: Comparison(Of )
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
