items:
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  id: SerializationInfo
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.SerializationInfo.#ctor(Type,System.Runtime.Serialization.IFormatterConverter)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,DateTime)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,Type)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  - System.Runtime.Serialization.SerializationInfo.AssemblyName
  - System.Runtime.Serialization.SerializationInfo.FullTypeName
  - System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetEnumerator
  - System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetValue(System.String,Type)
  - System.Runtime.Serialization.SerializationInfo.MemberCount
  - System.Runtime.Serialization.SerializationInfo.ObjectType
  - System.Runtime.Serialization.SerializationInfo.SetType(Type)
  langs:
  - csharp
  - vb
  name: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SerializationInfo
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 10
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Stores all the data needed to serialize or deserialize an object. This class cannot be inherited.
  syntax:
    content: 'public sealed class SerializationInfo : object'
    content.vb: >-
      Public NotInheritable Class SerializationInfo
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(Type,System.Runtime.Serialization.IFormatterConverter)
  commentId: M:System.Runtime.Serialization.SerializationInfo.#ctor(Type,System.Runtime.Serialization.IFormatterConverter)
  id: '#ctor(Type,System.Runtime.Serialization.IFormatterConverter)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: SerializationInfo(Type, IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type, System.Runtime.Serialization.IFormatterConverter)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 29
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  syntax:
    content: public SerializationInfo(Type type, IFormatterConverter converter)
    content.vb: Public Sub New(type As Type, converter As IFormatterConverter)
    parameters:
    - id: type
      type: Type
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  commentId: P:System.Runtime.Serialization.SerializationInfo.AssemblyName
  id: AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AssemblyName
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 73
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Gets or sets the assembly name of the type to serialize during serialization only.
  syntax:
    content: public string AssemblyName { get; set; }
    content.vb: Public Property AssemblyName As String
    parameters: []
    return:
      type: System.String
      description: The full name of the assembly of the type to serialize.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The value the property is set to is null. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  commentId: P:System.Runtime.Serialization.SerializationInfo.FullTypeName
  id: FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FullTypeName
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 55
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Gets or sets the full name of the <xref href="System.Type" data-throw-if-not-resolved="false"></xref> to serialize.
  syntax:
    content: public string FullTypeName { get; set; }
    content.vb: Public Property FullTypeName As String
    parameters: []
    return:
      type: System.String
      description: The full name of the type to serialize.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The value this property is set to is null. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  commentId: P:System.Runtime.Serialization.SerializationInfo.MemberCount
  id: MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemberCount
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 107
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Gets the number of members that have been added to the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public int MemberCount { get; }
    content.vb: Public ReadOnly Property MemberCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of members that have been added to the current <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  commentId: P:System.Runtime.Serialization.SerializationInfo.ObjectType
  id: ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ObjectType
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 115
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Returns the type of the object to be serialized.
  syntax:
    content: public Type ObjectType { get; }
    content.vb: Public ReadOnly Property ObjectType As Type
    parameters: []
    return:
      type: Type
      description: The type of the object being serialized.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  id: AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 193
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a Boolean value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, bool value)
    content.vb: Public Sub AddValue(name As String, value As Boolean)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.Boolean
      description: 'The Boolean value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  id: AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Byte)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 209
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds an 8-bit unsigned integer value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, byte value)
    content.vb: Public Sub AddValue(name As String, value As Byte)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.Byte
      description: 'The byte value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  id: AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Char)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 198
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a Unicode character value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, char value)
    content.vb: Public Sub AddValue(name As String, value As Char)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.Char
      description: 'The character value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,DateTime)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,DateTime)
  id: AddValue(System.String,DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, DateTime)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 262
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  syntax:
    content: public void AddValue(string name, DateTime value)
    content.vb: Public Sub AddValue(name As String, value As DateTime)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: DateTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  id: AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Decimal)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 257
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a decimal value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, decimal value)
    content.vb: Public Sub AddValue(name As String, value As Decimal)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.Decimal
      description: 'The decimal value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'If The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'If a value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  id: AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 252
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a double-precision floating-point value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, double value)
    content.vb: Public Sub AddValue(name As String, value As Double)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.Double
      description: 'The double value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  id: AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Int16)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 214
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a 16-bit signed integer value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, short value)
    content.vb: Public Sub AddValue(name As String, value As Short)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.Int16
      description: 'The Int16 value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  id: AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 225
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a 32-bit signed integer value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, int value)
    content.vb: Public Sub AddValue(name As String, value As Integer)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.Int32
      description: 'The Int32 value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  id: AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 236
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a 64-bit signed integer value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, long value)
    content.vb: Public Sub AddValue(name As String, value As Long)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.Int64
      description: 'The Int64 value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  id: AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 181
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds the specified object into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store, where it is associated with a specified name.
  syntax:
    content: public void AddValue(string name, object value)
    content.vb: Public Sub AddValue(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.Object
      description: 'The value to be serialized. Any children of this object will automatically be serialized. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,Type)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,Type)
  id: AddValue(System.String,System.Object,Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Object, Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Object, Type)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 166
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  syntax:
    content: public void AddValue(string name, object value, Type type)
    content.vb: Public Sub AddValue(name As String, value As Object, type As Type)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    - id: type
      type: Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  id: AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.SByte)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 203
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds an 8-bit signed integer value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, sbyte value)
    content.vb: Public Sub AddValue(name As String, value As SByte)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.SByte
      description: 'The Sbyte value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  id: AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 247
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a single-precision floating-point value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, float value)
    content.vb: Public Sub AddValue(name As String, value As Single)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.Single
      description: 'The single value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  id: AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.UInt16)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 219
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a 16-bit unsigned integer value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, ushort value)
    content.vb: Public Sub AddValue(name As String, value As UShort)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.UInt16
      description: 'The UInt16 value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  id: AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.UInt32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 230
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a 32-bit unsigned integer value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, uint value)
    content.vb: Public Sub AddValue(name As String, value As UInteger)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.UInt32
      description: 'The UInt32 value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  id: AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: AddValue(String, UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.UInt64)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 241
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Adds a 64-bit unsigned integer value into the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public void AddValue(string name, ulong value)
    content.vb: Public Sub AddValue(name As String, value As ULong)
    parameters:
    - id: name
      type: System.String
      description: 'The name to associate with the value, so it can be deserialized later. '
    - id: value
      type: System.UInt64
      description: 'The UInt64 value to serialize. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>name</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'A value has already been associated with <em>name</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  id: GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBoolean
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 355
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a Boolean value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public bool GetBoolean(string name)
    content.vb: Public Function GetBoolean(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: 'The name associated with the value to retrieve. '
    return:
      type: System.Boolean
      description: The Boolean value associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a Boolean value. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  id: GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetByte
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 395
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves an 8-bit unsigned integer value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public byte GetByte(string name)
    content.vb: Public Function GetByte(name As String) As Byte
    parameters:
    - id: name
      type: System.String
      description: 'The name associated with the value to retrieve. '
    return:
      type: System.Byte
      description: The 8-bit unsigned integer associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to an 8-bit unsigned integer. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  id: GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChar
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 368
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a Unicode character value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public char GetChar(string name)
    content.vb: Public Function GetChar(name As String) As Char
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Char
      description: The Unicode character associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a Unicode character. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  id: GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDateTime
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 529
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public DateTime GetDateTime(string name)
    content.vb: Public Function GetDateTime(name As String) As DateTime
    parameters:
    - id: name
      type: System.String
      description: 'The name associated with the value to retrieve.  '
    return:
      type: DateTime
      description: The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  id: GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDecimal
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 516
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a decimal value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public decimal GetDecimal(string name)
    content.vb: Public Function GetDecimal(name As String) As Decimal
    parameters:
    - id: name
      type: System.String
      description: 'The name associated with the value to retrieve.  '
    return:
      type: System.Decimal
      description: A decimal value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a decimal. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  id: GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDouble
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 503
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a double-precision floating-point value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public double GetDouble(string name)
    content.vb: Public Function GetDouble(name As String) As Double
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Double
      description: The double-precision floating-point value associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a double-precision floating-point value. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 123
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Returns a <xref href="System.Runtime.Serialization.SerializationInfoEnumerator" data-throw-if-not-resolved="false"></xref> used to iterate through the name-value pairs in the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public SerializationInfoEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As SerializationInfoEnumerator
    return:
      type: System.Runtime.Serialization.SerializationInfoEnumerator
      description: A <xref href="System.Runtime.Serialization.SerializationInfoEnumerator" data-throw-if-not-resolved="false"></xref> for parsing the name-value pairs contained in the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  id: GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt16
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 408
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a 16-bit signed integer value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public short GetInt16(string name)
    content.vb: Public Function GetInt16(name As String) As Short
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Int16
      description: The 16-bit signed integer associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a 16-bit signed integer. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  id: GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt32
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 435
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a 32-bit signed integer value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public int GetInt32(string name)
    content.vb: Public Function GetInt32(name As String) As Integer
    parameters:
    - id: name
      type: System.String
      description: 'The name of the value to retrieve. '
    return:
      type: System.Int32
      description: The 32-bit signed integer associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a 32-bit signed integer. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  id: GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt64
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 462
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a 64-bit signed integer value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public long GetInt64(string name)
    content.vb: Public Function GetInt64(name As String) As Long
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Int64
      description: The 64-bit signed integer associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a 64-bit signed integer. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  id: GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSByte
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 381
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves an 8-bit signed integer value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public sbyte GetSByte(string name)
    content.vb: Public Function GetSByte(name As String) As SByte
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.SByte
      description: The 8-bit signed integer associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to an 8-bit signed integer. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  id: GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSingle
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 489
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a single-precision floating-point value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public float GetSingle(string name)
    content.vb: Public Function GetSingle(name As String) As Single
    parameters:
    - id: name
      type: System.String
      description: 'The name of the value to retrieve. '
    return:
      type: System.Single
      description: The single-precision floating-point value associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a single-precision floating-point value. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  id: GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetString
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 542
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a <xref href="System.String" data-throw-if-not-resolved="false"></xref> value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public string GetString(string name)
    content.vb: Public Function GetString(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a <xref href="System.String" data-throw-if-not-resolved="false"></xref>. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  id: GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetUInt16
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 421
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a 16-bit unsigned integer value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public ushort GetUInt16(string name)
    content.vb: Public Function GetUInt16(name As String) As UShort
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.UInt16
      description: The 16-bit unsigned integer associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a 16-bit unsigned integer. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  id: GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetUInt32
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 448
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a 32-bit unsigned integer value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public uint GetUInt32(string name)
    content.vb: Public Function GetUInt32(name As String) As UInteger
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.UInt32
      description: The 32-bit unsigned integer associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a 32-bit unsigned integer. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  id: GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetUInt64
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 475
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: Retrieves a 64-bit unsigned integer value from the <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> store.
  syntax:
    content: public ulong GetUInt64(string name)
    content.vb: Public Function GetUInt64(name As String) As ULong
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.UInt64
      description: The 64-bit unsigned integer associated with <em>name</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>name</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The value associated with <em>name</em> cannot be converted to a 64-bit unsigned integer. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'An element with the specified name is not found in the current instance. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,Type)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetValue(System.String,Type)
  id: GetValue(System.String,Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: GetValue(String, Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(System.String, Type)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValue
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 334
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  syntax:
    content: public object GetValue(string name, Type type)
    content.vb: Public Function GetValue(name As String, type As Type) As Object
    parameters:
    - id: name
      type: System.String
    - id: type
      type: Type
    return:
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfo.SetType(Type)
  commentId: M:System.Runtime.Serialization.SerializationInfo.SetType(Type)
  id: SetType(Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  - vb
  name: SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetType
    path: src/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/SerializationInfo.cs
    startLine: 91
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  syntax:
    content: public void SetType(Type type)
    content.vb: Public Sub SetType(type As Type)
    parameters:
    - id: type
      type: Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Type
  isExternal: true
  name: Type
  fullName: Type
- uid: System.Runtime.Serialization.IFormatterConverter
  parent: System.Runtime.Serialization
  isExternal: false
  name: IFormatterConverter
  fullName: System.Runtime.Serialization.IFormatterConverter
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: DateTime
  isExternal: true
  name: DateTime
  fullName: DateTime
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.Runtime.Serialization.SerializationInfoEnumerator
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfoEnumerator
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: false
  name: SerializationException
  fullName: System.Runtime.Serialization.SerializationException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
