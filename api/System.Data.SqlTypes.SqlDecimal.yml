items:
- uid: System.Data.SqlTypes.SqlDecimal
  commentId: T:System.Data.SqlTypes.SqlDecimal
  id: SqlDecimal
  parent: System.Data.SqlTypes
  children:
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)
  - System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  - System.Data.SqlTypes.SqlDecimal.BinData
  - System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Data
  - System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Equals(System.Object)
  - System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.GetHashCode
  - System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.IsNull
  - System.Data.SqlTypes.SqlDecimal.IsPositive
  - System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.MaxPrecision
  - System.Data.SqlTypes.SqlDecimal.MaxScale
  - System.Data.SqlTypes.SqlDecimal.MaxValue
  - System.Data.SqlTypes.SqlDecimal.MinValue
  - System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Null
  - System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal
  - System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Parse(System.String)
  - System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  - System.Data.SqlTypes.SqlDecimal.Precision
  - System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Scale
  - System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.ToDouble
  - System.Data.SqlTypes.SqlDecimal.ToSqlBoolean
  - System.Data.SqlTypes.SqlDecimal.ToSqlByte
  - System.Data.SqlTypes.SqlDecimal.ToSqlDouble
  - System.Data.SqlTypes.SqlDecimal.ToSqlInt16
  - System.Data.SqlTypes.SqlDecimal.ToSqlInt32
  - System.Data.SqlTypes.SqlDecimal.ToSqlInt64
  - System.Data.SqlTypes.SqlDecimal.ToSqlMoney
  - System.Data.SqlTypes.SqlDecimal.ToSqlSingle
  - System.Data.SqlTypes.SqlDecimal.ToSqlString
  - System.Data.SqlTypes.SqlDecimal.ToString
  - System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Value
  langs:
  - csharp
  - vb
  name: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
  type: Struct
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlDecimal
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 22
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: 'Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale. '
  syntax:
    content: 'public struct SqlDecimal : INullable, IComparable'
    content.vb: >-
      Public Structure SqlDecimal
          Implements INullable, IComparable
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Data.SqlTypes.SqlDecimal.MaxPrecision
  commentId: F:System.Data.SqlTypes.SqlDecimal.MaxPrecision
  id: MaxPrecision
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: MaxPrecision
  fullName: System.Data.SqlTypes.SqlDecimal.MaxPrecision
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxPrecision
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 45
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: A constant representing the largest possible value for the <xref href="System.Data.SqlTypes.SqlDecimal.Precision" data-throw-if-not-resolved="false"></xref> property.
  syntax:
    content: public static readonly byte MaxPrecision
    content.vb: Public Shared ReadOnly MaxPrecision As Byte
    return:
      type: System.Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.MaxScale
  commentId: F:System.Data.SqlTypes.SqlDecimal.MaxScale
  id: MaxScale
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: MaxScale
  fullName: System.Data.SqlTypes.SqlDecimal.MaxScale
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxScale
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 49
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: A constant representing the maximum value for the <xref href="System.Data.SqlTypes.SqlDecimal.Scale" data-throw-if-not-resolved="false"></xref> property.
  syntax:
    content: public static readonly byte MaxScale
    content.vb: Public Shared ReadOnly MaxScale As Byte
    return:
      type: System.Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.MaxValue
  commentId: F:System.Data.SqlTypes.SqlDecimal.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.Data.SqlTypes.SqlDecimal.MaxValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxValue
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3495
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: A constant representing the maximum value of a <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure.
  syntax:
    content: public static readonly SqlDecimal MaxValue
    content.vb: Public Shared ReadOnly MaxValue As SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlDecimal
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.MinValue
  commentId: F:System.Data.SqlTypes.SqlDecimal.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.Data.SqlTypes.SqlDecimal.MinValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinValue
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3491
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: A constant representing the minimum value for a <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure.
  syntax:
    content: public static readonly SqlDecimal MinValue
    content.vb: Public Shared ReadOnly MinValue As SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlDecimal
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.Null
  commentId: F:System.Data.SqlTypes.SqlDecimal.Null
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  fullName: System.Data.SqlTypes.SqlDecimal.Null
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3486
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Represents a <xref href="System.DBNull" data-throw-if-not-resolved="false"></xref> that can be assigned to this instance of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>class.
  syntax:
    content: public static readonly SqlDecimal Null
    content.vb: Public Shared ReadOnly Null As SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlDecimal
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: SqlDecimal(Byte, Byte, Boolean, Int32, Int32, Int32, Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Byte, System.Byte, System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 638
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Initializes a new instance of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure using the supplied parameters.
  syntax:
    content: public SqlDecimal(byte bPrecision, byte bScale, bool fPositive, int data1, int data2, int data3, int data4)
    content.vb: Public Sub New(bPrecision As Byte, bScale As Byte, fPositive As Boolean, data1 As Integer, data2 As Integer, data3 As Integer, data4 As Integer)
    parameters:
    - id: bPrecision
      type: System.Byte
      description: 'The maximum number of digits that can be used to represent the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property of the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: bScale
      type: System.Byte
      description: 'The number of decimal places to which the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property will be resolved for the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: fPositive
      type: System.Boolean
      description: 'A Boolean value that indicates whether the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure represents a positive or negative number. '
    - id: data1
      type: System.Int32
      description: 'An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structures value. '
    - id: data2
      type: System.Int32
      description: 'An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structures value. '
    - id: data3
      type: System.Int32
      description: 'An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structures value. '
    - id: data4
      type: System.Int32
      description: 'An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structures value. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])
  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])
  id: '#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: SqlDecimal(Byte, Byte, Boolean, Int32[])
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Byte, System.Byte, System.Boolean, System.Int32[])
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 594
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Initializes a new instance of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure using the supplied parameters.
  syntax:
    content: public SqlDecimal(byte bPrecision, byte bScale, bool fPositive, int[] bits)
    content.vb: Public Sub New(bPrecision As Byte, bScale As Byte, fPositive As Boolean, bits As Integer())
    parameters:
    - id: bPrecision
      type: System.Byte
      description: 'The maximum number of digits that can be used to represent the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property of the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: bScale
      type: System.Byte
      description: 'The number of decimal places to which the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property will be resolved for the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: fPositive
      type: System.Boolean
      description: 'A Boolean value that indicates whether the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure represents a positive or negative number. '
    - id: bits
      type: System.Int32[]
      description: 'The 128-bit unsigned integer that provides the value of the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Byte, System.Byte, System.Boolean, System.Int32())
  name.vb: SqlDecimal(Byte, Byte, Boolean, Int32())
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)
  id: '#ctor(System.Decimal)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: SqlDecimal(Decimal)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Decimal)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 876
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Initializes a new instance of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure using the supplied <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public SqlDecimal(decimal value)
    content.vb: Public Sub New(value As Decimal)
    parameters:
    - id: value
      type: System.Decimal
      description: 'The <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> value to be stored as a <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)
  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: SqlDecimal(Double)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Double)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 681
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Initializes a new instance of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure using the supplied double parameter.
  syntax:
    content: public SqlDecimal(double dVal)
    content.vb: Public Sub New(dVal As Double)
    parameters:
    - id: dVal
      type: System.Double
      description: 'A double, representing the value for the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)
  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: SqlDecimal(Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 533
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Initializes a new instance of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure using the supplied integer value.
  syntax:
    content: public SqlDecimal(int value)
    content.vb: Public Sub New(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: 'The supplied integer value which will the used as the value of the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)
  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: SqlDecimal(Int64)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 561
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Initializes a new instance of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure using the supplied long integer value.
  syntax:
    content: public SqlDecimal(long value)
    content.vb: Public Sub New(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: 'The supplied long integer value which will the used as the value of the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.BinData
  commentId: P:System.Data.SqlTypes.SqlDecimal.BinData
  id: BinData
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: BinData
  fullName: System.Data.SqlTypes.SqlDecimal.BinData
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinData
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 913
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Get the binary representation of the value of this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure as an array of bytes.
  syntax:
    content: public byte[] BinData { get; }
    content.vb: Public ReadOnly Property BinData As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: An array of bytes that contains the binary representation of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure's value.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.Data
  commentId: P:System.Data.SqlTypes.SqlDecimal.Data
  id: Data
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Data
  fullName: System.Data.SqlTypes.SqlDecimal.Data
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Data
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 900
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Gets the binary representation of this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure as an array of integers.
  syntax:
    content: public int[] Data { get; }
    content.vb: Public ReadOnly Property Data As Integer()
    parameters: []
    return:
      type: System.Int32[]
      description: An array of integers that contains the binary representation of this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.IsNull
  commentId: P:System.Data.SqlTypes.SqlDecimal.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: IsNull
  fullName: System.Data.SqlTypes.SqlDecimal.IsNull
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNull
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 833
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Indicates whether this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure is null.
  syntax:
    content: public bool IsNull { get; }
    content.vb: Public ReadOnly Property IsNull As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: 'true if this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure is null. Otherwise, false. '
  implements:
  - System.Data.SqlTypes.INullable.IsNull
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.IsPositive
  commentId: P:System.Data.SqlTypes.SqlDecimal.IsPositive
  id: IsPositive
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: IsPositive
  fullName: System.Data.SqlTypes.SqlDecimal.IsPositive
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPositive
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 849
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Indicates whether the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> of this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure is greater than zero.
  syntax:
    content: public bool IsPositive { get; }
    content.vb: Public ReadOnly Property IsPositive As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> is assigned to null. Otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.Precision
  commentId: P:System.Data.SqlTypes.SqlDecimal.Precision
  id: Precision
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Precision
  fullName: System.Data.SqlTypes.SqlDecimal.Precision
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Precision
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 874
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Gets the maximum number of digits used to represent the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property.
  syntax:
    content: public byte Precision { get; }
    content.vb: Public ReadOnly Property Precision As Byte
    parameters: []
    return:
      type: System.Byte
      description: The maximum number of digits used to represent the Value of this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.Scale
  commentId: P:System.Data.SqlTypes.SqlDecimal.Scale
  id: Scale
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Scale
  fullName: System.Data.SqlTypes.SqlDecimal.Scale
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Scale
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 887
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Gets the number of decimal places to which <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> is resolved.
  syntax:
    content: public byte Scale { get; }
    content.vb: Public ReadOnly Property Scale As Byte
    parameters: []
    return:
      type: System.Byte
      description: The number of decimal places to which the Value property is resolved.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.Value
  commentId: P:System.Data.SqlTypes.SqlDecimal.Value
  id: Value
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Data.SqlTypes.SqlDecimal.Value
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 841
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Gets the value of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. This property is read-only.
  syntax:
    content: public decimal Value { get; }
    content.vb: Public ReadOnly Property Value As Decimal
    parameters: []
    return:
      type: System.Decimal
      description: A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)
  id: Abs(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Abs(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Abs
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3174
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: The Abs method gets the absolute value of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameter.
  syntax:
    content: public static SqlDecimal Abs(SqlDecimal n)
    content.vb: Public Shared Function Abs(n As SqlDecimal) As SqlDecimal
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property contains the unsigned number representing the absolute value of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Add(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3005
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Calculates the sum of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> operators.
  syntax:
    content: public static SqlDecimal Add(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Function Add(x As SqlDecimal, y As SqlDecimal) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property contains the sum.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  commentId: M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  id: AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: AdjustScale(SqlDecimal, Int32, Boolean)
  fullName: System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AdjustScale
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 2425
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: The scale of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.
  syntax:
    content: public static SqlDecimal AdjustScale(SqlDecimal n, int digits, bool fRound)
    content.vb: Public Shared Function AdjustScale(n As SqlDecimal, digits As Integer, fRound As Boolean) As SqlDecimal
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to be adjusted. '
    - id: digits
      type: System.Int32
      description: 'The number of digits in the adjusted structure. '
    - id: fRound
      type: System.Boolean
      description: 'If this parameter is true, the new Value will be rounded, if false, the value will be truncated. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property contains the adjusted number.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)
  id: Ceiling(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Ceiling(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Ceiling
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3190
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Returns the smallest whole number greater than or equal to the specified <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure.
  syntax:
    content: public static SqlDecimal Ceiling(SqlDecimal n)
    content.vb: Public Shared Function Ceiling(n As SqlDecimal) As SqlDecimal
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure for which the ceiling value is to be calculated. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> representing the smallest whole number greater than or equal to the specified <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)
  id: CompareTo(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: CompareTo(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3407
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> instance to the supplied <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> object and returns an indication of their relative values.
  syntax:
    content: public int CompareTo(SqlDecimal value)
    content.vb: Public Function CompareTo(value As SqlDecimal) As Integer
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> to be compared. '
    return:
      type: System.Int32
      description: 'A signed number that indicates the relative values of the instance and the object.Return value Condition Less than zero This instance is less than the object. Zero This instance is the same as the object. Greater than zero This instance is greater than the object -or- The object is a null reference (Nothing in Visual Basic) '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)
  commentId: M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 892
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> instance to the supplied <xref href="System.Object" data-throw-if-not-resolved="false"></xref> and returns an indication of their relative values.
  syntax:
    content: public int CompareTo(object value)
    content.vb: Public Function CompareTo(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to be compared. '
    return:
      type: System.Int32
      description: 'A signed number that indicates the relative values of the instance and the object.Return Value Condition Less than zero This instance is less than the object. Zero This instance is the same as the object. Greater than zero This instance is greater than the object -or- The object is a null reference (Nothing in Visual Basic) '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  id: ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ConvertToPrecScale(SqlDecimal, Int32, Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConvertToPrecScale
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 2439
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Adjusts the value of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> operand to the indicated precision and scale.
  syntax:
    content: public static SqlDecimal ConvertToPrecScale(SqlDecimal n, int precision, int scale)
    content.vb: Public Shared Function ConvertToPrecScale(n As SqlDecimal, precision As Integer, scale As Integer) As SqlDecimal
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose value is to be adjusted. '
    - id: precision
      type: System.Int32
      description: 'The precision for the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: scale
      type: System.Int32
      description: 'The scale for the new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose Value has been adjusted to the precision and scale indicated in the parameters.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Divide(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Divide
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3022
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: The division operator calculates the results of dividing the first <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> operand by the second.
  syntax:
    content: public static SqlDecimal Divide(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Function Divide(x As SqlDecimal, y As SqlDecimal) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property contains the results of the division.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Equals(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3028
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> operands to determine whether they are equal.
  syntax:
    content: public static SqlBoolean Equals(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Function Equals(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: true if the two values are equal. Otherwise, false. If either instance is null, the value of the SqlDecimal will be null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Object)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Data.SqlTypes.SqlDecimal.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 896
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares the supplied <xref href="System.Object" data-throw-if-not-resolved="false"></xref> parameter to the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to be compared.
    return:
      type: System.Boolean
      description: true if object is an instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> and the two are equal. Otherwise, false.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)
  id: Floor(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Floor(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Floor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3221
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Rounds a specified <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> number to the next lower whole number.
  syntax:
    content: public static SqlDecimal Floor(SqlDecimal n)
    content.vb: Public Shared Function Floor(n As SqlDecimal) As SqlDecimal
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure for which the floor value is to be calculated. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure that contains the whole number part of this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.GetHashCode
  commentId: M:System.Data.SqlTypes.SqlDecimal.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Data.SqlTypes.SqlDecimal.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3444
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3046
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structures to determine whether the first is greater than the second.
  syntax:
    content: public static SqlBoolean GreaterThan(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Function GreaterThan(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is less than the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3058
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameters to determine whether the first is greater than or equal to the second.
  syntax:
    content: public static SqlBoolean GreaterThanOrEqual(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Function GreaterThanOrEqual(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: LessThan(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3040
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structures to determine whether the first is less than the second.
  syntax:
    content: public static SqlBoolean LessThan(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Function LessThan(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is less than the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3052
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameters to determine whether the first is less than or equal to the second.
  syntax:
    content: public static SqlBoolean LessThanOrEqual(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Function LessThanOrEqual(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Multiply(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3016
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: The multiplication operator computes the product of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameters.
  syntax:
    content: public static SqlDecimal Multiply(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Function Multiply(x As SqlDecimal, y As SqlDecimal) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property contains the product of the multiplication.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: NotEquals(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotEquals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3034
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameters to determine whether they are not equal.
  syntax:
    content: public static SqlBoolean NotEquals(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Function NotEquals(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the two instances are not equal or <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref> if the two instances are equal. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Addition(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Addition(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1252
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Calculates the sum of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> operators.
  syntax:
    content: public static SqlDecimal operator +(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Operator +(x As SqlDecimal, y As SqlDecimal) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property contains the sum.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Division(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Division(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Division
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1694
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: The division operator calculates the results of dividing the first <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> operand by the second.
  syntax:
    content: public static SqlDecimal operator /(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Operator /(x As SqlDecimal, y As SqlDecimal) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property contains the results of the division.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Equality(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Equality(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 2942
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> operands to determine whether they are equal.
  syntax:
    content: public static SqlBoolean operator ==(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Operator =(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the two instances are equal or <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref> if the two instances are not equal. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Explicit(SqlBoolean to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1782
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlDecimal(SqlBoolean x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlBoolean) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: 'The <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> structure to be converted. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> is equal to the <xref href="System.Data.SqlTypes.SqlBoolean.ByteValue" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)
  name.vb: Narrowing(SqlBoolean to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Explicit(SqlDecimal to Decimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Data.SqlTypes.SqlDecimal to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 909
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameter to <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator decimal (SqlDecimal x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDecimal) As Decimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to be converted. '
    return:
      type: System.Decimal
      description: A new Decimal structure whose value equals the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Data.SqlTypes.SqlDecimal to System.Decimal)
  name.vb: Narrowing(SqlDecimal to Decimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal
  id: op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Explicit(SqlDouble to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1848
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlDecimal(SqlDouble x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDouble) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: 'The <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref> structure to be converted. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> equals the <xref href="System.Data.SqlTypes.SqlDouble.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)
  name.vb: Narrowing(SqlDouble to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal
  id: op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Explicit(SqlSingle to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1839
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlDecimal(SqlSingle x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlSingle) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: 'The <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref> structure to be converted. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property equals the <xref href="System.Data.SqlTypes.SqlSingle.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)
  name.vb: Narrowing(SqlSingle to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal
  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Explicit(SqlString to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1858
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> parameter to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlDecimal(SqlString x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlString) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: 'The <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> object to be converted. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> equals the value represented by the <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)
  name.vb: Narrowing(SqlString to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal
  id: op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Explicit(Double to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Double to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1205
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the <xref href="System.Double" data-throw-if-not-resolved="false"></xref> parameter to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlDecimal(double x)
    content.vb: Public Shared Narrowing Operator CType(x As Double) As SqlDecimal
    parameters:
    - id: x
      type: System.Double
      description: The <xref href="System.Double" data-throw-if-not-resolved="false"></xref> structure to be converted.
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose value equals the value of the <xref href="System.Double" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Double to System.Data.SqlTypes.SqlDecimal)
  name.vb: Narrowing(Double to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 2966
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structures to determine whether the first is greater than the second.
  syntax:
    content: public static SqlBoolean operator>(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Operator>(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is less than the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 2988
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameters to determine whether the first is greater than or equal to the second.
  syntax:
    content: public static SqlBoolean operator >=(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Operator >=(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal
  id: op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Implicit(SqlByte to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1791
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static implicit operator SqlDecimal(SqlByte x)
    content.vb: Public Shared Widening Operator CType(x As SqlByte) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'The <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to be converted. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property equals the <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlDecimal)
  name.vb: Widening(SqlByte to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal
  id: op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Implicit(SqlInt16 to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1800
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>
  syntax:
    content: public static implicit operator SqlDecimal(SqlInt16 x)
    content.vb: Public Shared Widening Operator CType(x As SqlInt16) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: 'The <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref> structure to be converted. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property equals the <xref href="System.Data.SqlTypes.SqlInt16.Value" data-throw-if-not-resolved="false"></xref> property of the <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlDecimal)
  name.vb: Widening(SqlInt16 to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal
  id: op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Implicit(SqlInt32 to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1809
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static implicit operator SqlDecimal(SqlInt32 x)
    content.vb: Public Shared Widening Operator CType(x As SqlInt32) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: 'The <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref> structure to be converted. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property is equal to the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property of the <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlDecimal)
  name.vb: Widening(SqlInt32 to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal
  id: op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Implicit(SqlInt64 to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1818
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlInt64" data-throw-if-not-resolved="false"></xref> structure to SqlDecimal.
  syntax:
    content: public static implicit operator SqlDecimal(SqlInt64 x)
    content.vb: Public Shared Widening Operator CType(x As SqlInt64) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: 'The <xref href="System.Data.SqlTypes.SqlInt64" data-throw-if-not-resolved="false"></xref> structure to be converted. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> equals the <xref href="System.Data.SqlTypes.SqlInt64.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlInt64" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlDecimal)
  name.vb: Widening(SqlInt64 to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal
  id: op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Implicit(SqlMoney to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1827
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the <xref href="System.Data.SqlTypes.SqlMoney" data-throw-if-not-resolved="false"></xref> operand to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static implicit operator SqlDecimal(SqlMoney x)
    content.vb: Public Shared Widening Operator CType(x As SqlMoney) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: 'The <xref href="System.Data.SqlTypes.SqlMoney" data-throw-if-not-resolved="false"></xref> structure to be converted. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> equals the <xref href="System.Data.SqlTypes.SqlMoney.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlMoney" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlDecimal)
  name.vb: Widening(SqlMoney to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal
  id: op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Implicit(Decimal to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Decimal to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 921
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> value to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static implicit operator SqlDecimal(decimal x)
    content.vb: Public Shared Widening Operator CType(x As Decimal) As SqlDecimal
    parameters:
    - id: x
      type: System.Decimal
      description: 'The <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> value to be converted. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property equals the value of the Decimal parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Decimal to System.Data.SqlTypes.SqlDecimal)
  name.vb: Widening(Decimal to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal
  id: op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Implicit(Int64 to SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Int64 to System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1211
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static implicit operator SqlDecimal(long x)
    content.vb: Public Shared Widening Operator CType(x As Long) As SqlDecimal
    parameters:
    - id: x
      type: System.Int64
      description: The <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> structure to be converted.
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property equals the value of the <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Int64 to System.Data.SqlTypes.SqlDecimal)
  name.vb: Widening(Int64 to SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Inequality(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Inequality(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 2950
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameters to determine whether they are not equal.
  syntax:
    content: public static SqlBoolean operator !=(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Operator <>(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the two instances are not equal or <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref> if the two instances are equal. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: LessThan(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 2958
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structures to determine whether the first is less than the second.
  syntax:
    content: public static SqlBoolean operator <(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Operator <(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is less than the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 2974
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameters to determine whether the first is less than or equal to the second.
  syntax:
    content: public static SqlBoolean operator <=(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Operator <=(x As SqlDecimal, y As SqlDecimal) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Multiply(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1453
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: The multiplication operator computes the product of the two <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameters.
  syntax:
    content: public static SqlDecimal operator *(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Operator *(x As SqlDecimal, y As SqlDecimal) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property contains the product of the multiplication.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Subtraction(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Subtraction(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1412
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Calculates the results of subtracting the second <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> operand from the first.
  syntax:
    content: public static SqlDecimal operator -(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Operator -(x As SqlDecimal, y As SqlDecimal) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose Value property contains the results of the subtraction.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  id: op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: UnaryNegation(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryNegation
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1230
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: The unary minus operator negates the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameter.
  syntax:
    content: public static SqlDecimal operator -(SqlDecimal x)
    content.vb: Public Shared Operator -(x As SqlDecimal) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to be negated. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose value contains the results of the negation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Parse(System.String)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Data.SqlTypes.SqlDecimal.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 929
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation of a number to its <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> equivalent.
  syntax:
    content: public static SqlDecimal Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As SqlDecimal
    parameters:
    - id: s
      type: System.String
      description: 'The String to be parsed. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> equivalent to the value that is contained in the specified <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  id: Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Power(SqlDecimal, Double)
  fullName: System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal, System.Double)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Power
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3366
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Raises the value of the specified <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to the specified exponential power.
  syntax:
    content: public static SqlDecimal Power(SqlDecimal n, double exp)
    content.vb: Public Shared Function Power(n As SqlDecimal, exp As Double) As SqlDecimal
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to be raised to a power. '
    - id: exp
      type: System.Double
      description: 'A double value that indicates the power to which the number should be raised. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure that contains the results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  id: Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Round(SqlDecimal, Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Round
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3346
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Gets the number nearest the specified <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure's value with the specified precision.
  syntax:
    content: public static SqlDecimal Round(SqlDecimal n, int position)
    content.vb: Public Shared Function Round(n As SqlDecimal, position As Integer) As SqlDecimal
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to be rounded. '
    - id: position
      type: System.Int32
      description: 'The number of significant fractional digits (precision) in the return value. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure that contains the results of the rounding operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)
  id: Sign(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Sign(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sign
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3252
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Gets a value that indicates the sign of a <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure's <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property.
  syntax:
    content: public static SqlInt32 Sign(SqlDecimal n)
    content.vb: Public Shared Function Sign(n As SqlDecimal) As SqlInt32
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose sign is to be evaluated. '
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: A number that indicates the sign of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Subtract(SqlDecimal, SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3010
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Calculates the results of subtracting the second <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> operand from the first.
  syntax:
    content: public static SqlDecimal Subtract(SqlDecimal x, SqlDecimal y)
    content.vb: Public Shared Function Subtract(x As SqlDecimal, y As SqlDecimal) As SqlDecimal
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A new <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure whose Value property contains the results of the subtraction.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDecimal.ToDouble
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToDouble
  id: ToDouble
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToDouble()
  fullName: System.Data.SqlTypes.SqlDecimal.ToDouble()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDouble
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 1167
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Returns the a double equal to the contents of the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property of this instance.
  syntax:
    content: public double ToDouble()
    content.vb: Public Function ToDouble As Double
    return:
      type: System.Double
      description: The decimal representation of the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlBoolean
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3065
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlBoolean ToSqlBoolean()
    content.vb: Public Function ToSqlBoolean As SqlBoolean
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: true if the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> is non-zero; false if zero; otherwise Null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlByte
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToSqlByte()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlByte()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlByte
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3070
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlByte ToSqlByte()
    content.vb: Public Function ToSqlByte As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose Value equals the Value of this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. If the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure's Value is true, the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure's Value will be 1. Otherwise, the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure's Value will be 0.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlDouble
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlDouble()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDouble
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3075
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlDouble ToSqlDouble()
    content.vb: Public Function ToSqlDouble As SqlDouble
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: A <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref> structure with the same value as this instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt16
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt16()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt16
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3080
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlInt16 ToSqlInt16()
    content.vb: Public Function ToSqlInt16 As SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: A <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref> structure with the same value as this instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt32
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt32()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt32
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3085
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlInt32 ToSqlInt32()
    content.vb: Public Function ToSqlInt32 As SqlInt32
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: A <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref> structure with the same value as this instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt64
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt64()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt64
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3090
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlInt64" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlInt64 ToSqlInt64()
    content.vb: Public Function ToSqlInt64 As SqlInt64
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: A <xref href="System.Data.SqlTypes.SqlInt64" data-throw-if-not-resolved="false"></xref> structure with the same value as this instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlMoney
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlMoney()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlMoney
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3095
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlMoney" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlMoney ToSqlMoney()
    content.vb: Public Function ToSqlMoney As SqlMoney
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: A <xref href="System.Data.SqlTypes.SqlMoney" data-throw-if-not-resolved="false"></xref> structure with the same value as this instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlSingle
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlSingle()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlSingle
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3100
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlSingle ToSqlSingle()
    content.vb: Public Function ToSqlSingle As SqlSingle
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: A <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref> structure with the same value as this instance of <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlString
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToSqlString()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3105
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlString ToSqlString()
    content.vb: Public Function ToSqlString As SqlString
    return:
      type: System.Data.SqlTypes.SqlString
      description: A <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> structure whose value is a string representing the value contained in this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDecimal.ToString
  commentId: M:System.Data.SqlTypes.SqlDecimal.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Data.SqlTypes.SqlDecimal.ToString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 961
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A new <xref href="System.String" data-throw-if-not-resolved="false"></xref> object that contains the string representation of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure's <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> property.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  id: Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  - vb
  name: Truncate(SqlDecimal, Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Truncate
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs
    startLine: 3356
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Truncates the specified <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure's value to the that you want position.
  syntax:
    content: public static SqlDecimal Truncate(SqlDecimal n, int position)
    content.vb: Public Shared Function Truncate(n As SqlDecimal, position As Integer) As SqlDecimal
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: 'The <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure to be truncated. '
    - id: position
      type: System.Int32
      description: 'The decimal position to which the number will be truncated. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: Supply a negative value for the <em>position</em> parameter in order to truncate the value to the corresponding position to the left of the decimal point.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Data.SqlTypes.INullable
  parent: System.Data.SqlTypes
  isExternal: false
  name: INullable
  fullName: System.Data.SqlTypes.INullable
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Int32[]
  isExternal: false
  name: Int32[]
  fullName: System.Int32[]
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: ()
    fullName: ()
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Data.SqlTypes.INullable.IsNull
  parent: System.Data.SqlTypes.INullable
  isExternal: false
  name: IsNull
  fullName: System.Data.SqlTypes.INullable.IsNull
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
