items:
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  commentId: T:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  id: WindowsRuntimeMarshal
  parent: System.Runtime.InteropServices.WindowsRuntime
  children:
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  langs:
  - csharp
  - vb
  name: WindowsRuntimeMarshal
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WindowsRuntimeMarshal
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 18
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: Provides helper methods for marshaling data between the .NET Framework and the Windows Runtime.
  syntax:
    content: 'public class WindowsRuntimeMarshal : object'
    content.vb: >-
      Public Class WindowsRuntimeMarshal
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  id: AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: AddEventHandler<T>(Func<T, EventRegistrationToken>, Action<EventRegistrationToken>, T)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler<T>(System.Func<T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>, System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>, T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddEventHandler
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 25
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: Adds the specified event handler to a Windows Runtime event.
  syntax:
    content: public static void AddEventHandler<T>(Func<T, EventRegistrationToken> addMethod, Action<EventRegistrationToken> removeMethod, T handler)
    content.vb: Public Shared Sub AddEventHandler(Of T)(addMethod As Func(Of T, EventRegistrationToken), removeMethod As Action(Of EventRegistrationToken), handler As T)
    parameters:
    - id: addMethod
      type: System.Func{{T},System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
      description: 'A delegate that represents the method that adds event handlers to the Windows Runtime event. '
    - id: removeMethod
      type: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
      description: 'A delegate that represents the method that removes event handlers from the Windows Runtime event. '
    - id: handler
      type: '{T}'
      description: 'A delegate the represents the event handler that is added. '
    typeParameters:
    - id: T
      description: 'The type of the delegate that represents the event handler. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>addMethod</em> is null. -or-<em>removeMethod</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler(Of T)(System.Func(Of T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken), System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken), T)
  name.vb: AddEventHandler(Of T)(Func(Of T, EventRegistrationToken), Action(Of EventRegistrationToken), T)
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  id: FreeHString(System.IntPtr)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: FreeHString(IntPtr)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FreeHString
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 1322
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: 'Frees the specified Windows Runtime HSTRING. '
  syntax:
    content: public static void FreeHString(IntPtr ptr)
    content.vb: Public Shared Sub FreeHString(ptr As IntPtr)
    parameters:
    - id: ptr
      type: System.IntPtr
      description: The address of the HSTRING to free.
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: 'The Windows Runtime is not supported on the current version of the operating system. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  id: GetActivationFactory(System.Type)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: GetActivationFactory(Type)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetActivationFactory
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 1270
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: 'Returns an object that implements the activation factory interface for the specified Windows Runtime type. '
  syntax:
    content: public static IActivationFactory GetActivationFactory(Type type)
    content.vb: Public Shared Function GetActivationFactory(type As Type) As IActivationFactory
    parameters:
    - id: type
      type: System.Type
      description: 'The Windows Runtime type to get the activation factory interface for. '
    return:
      type: System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
      description: 'An object that implements the activation factory interface. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>type</em> does not represent a Windows Runtime type (that is, belonging to the Windows Runtime itself or defined in a Windows Runtime component). -or-The object specified for <em>type</em> was not provided by the common language runtime type system. "
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>type</em> is null. "
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: 'The specified Windows Runtime class is not properly registered. For example, the .winmd file was located, but the Windows Runtime failed to locate the implementation. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  id: PtrToStringHString(System.IntPtr)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: PtrToStringHString(IntPtr)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PtrToStringHString
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 1311
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: 'Returns a managed string that contains a copy of the specified Windows Runtime HSTRING. '
  syntax:
    content: public static string PtrToStringHString(IntPtr ptr)
    content.vb: Public Shared Function PtrToStringHString(ptr As IntPtr) As String
    parameters:
    - id: ptr
      type: System.IntPtr
      description: 'An unmanaged pointer to the HSTRING to copy. '
    return:
      type: System.String
      description: 'A managed string that contains a copy of the HSTRING if <em>ptr</em> is not <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref>; otherwise, <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: 'The Windows Runtime is not supported on the current version of the operating system. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  id: RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: RemoveAllEventHandlers(Action<EventRegistrationToken>)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RemoveAllEventHandlers
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 81
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: 'Removes all the event handlers that can be removed by using the specified method. '
  syntax:
    content: public static void RemoveAllEventHandlers(Action<EventRegistrationToken> removeMethod)
    content.vb: Public Shared Sub RemoveAllEventHandlers(removeMethod As Action(Of EventRegistrationToken))
    parameters:
    - id: removeMethod
      type: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
      description: 'A delegate that represents the method that removes event handlers from the Windows Runtime event. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>removeMethod</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken))
  name.vb: RemoveAllEventHandlers(Action(Of EventRegistrationToken))
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  id: RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: RemoveEventHandler<T>(Action<EventRegistrationToken>, T)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler<T>(System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>, T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RemoveEventHandler
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 56
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: 'Removes the specified event handler from a Windows Runtime event. '
  syntax:
    content: public static void RemoveEventHandler<T>(Action<EventRegistrationToken> removeMethod, T handler)
    content.vb: Public Shared Sub RemoveEventHandler(Of T)(removeMethod As Action(Of EventRegistrationToken), handler As T)
    parameters:
    - id: removeMethod
      type: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
      description: 'A delegate that represents the method that removes event handlers from the Windows Runtime event. '
    - id: handler
      type: '{T}'
      description: 'The event handler that is removed. '
    typeParameters:
    - id: T
      description: 'The type of the delegate that represents the event handler. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>removeMethod</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler(Of T)(System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken), T)
  name.vb: RemoveEventHandler(Of T)(Action(Of EventRegistrationToken), T)
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  id: StringToHString(System.String)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: StringToHString(String)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StringToHString
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 1293
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: 'Allocates a Windows Runtime HSTRING and copies the specified managed string to it. '
  syntax:
    content: public static IntPtr StringToHString(string s)
    content.vb: Public Shared Function StringToHString(s As String) As IntPtr
    parameters:
    - id: s
      type: System.String
      description: 'The managed string to copy. '
    return:
      type: System.IntPtr
      description: 'An unmanaged pointer to the new HSTRING, or <xref href="System.IntPtr.Zero" data-throw-if-not-resolved="false"></xref> if <em>s</em> is <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: 'The Windows Runtime is not supported on the current version of the operating system. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>s</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: System.Runtime.InteropServices.WindowsRuntime
  fullName: System.Runtime.InteropServices.WindowsRuntime
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Func{{T},System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
  definition: System.Func`2
  name: Func<T, EventRegistrationToken>
  fullName: System.Func<T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>
  fullname.vb: System.Func(Of T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  name.vb: Func(Of T, EventRegistrationToken)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: )
    fullName: )
- uid: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
  definition: System.Action`1
  name: Action<EventRegistrationToken>
  fullName: System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>
  fullname.vb: System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  name.vb: Action(Of EventRegistrationToken)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Func`2
  isExternal: false
  name: Func<, >
  fullName: System.Func<, >
  fullname.vb: System.Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Action`1
  isExternal: false
  name: Action<>
  fullName: System.Action<>
  fullname.vb: System.Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  fullName: System.IntPtr
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
  parent: System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: IActivationFactory
  fullName: System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  isExternal: false
  name: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.TypeLoadException
  parent: System
  isExternal: false
  name: TypeLoadException
  fullName: System.TypeLoadException
