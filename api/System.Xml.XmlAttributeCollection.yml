items:
- uid: System.Xml.XmlAttributeCollection
  commentId: T:System.Xml.XmlAttributeCollection
  id: XmlAttributeCollection
  parent: System.Xml
  children:
  - System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)
  - System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.Item(System.Int32)
  - System.Xml.XmlAttributeCollection.Item(System.String)
  - System.Xml.XmlAttributeCollection.Item(System.String,System.String)
  - System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.RemoveAll
  - System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)
  - System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)
  langs:
  - csharp
  - vb
  name: XmlAttributeCollection
  fullName: System.Xml.XmlAttributeCollection
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlAttributeCollection
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 10
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Represents a collection of attributes that can be accessed by name or index.
  syntax:
    content: 'public sealed class XmlAttributeCollection : XmlNamedNodeMap, Collections.ICollection, Collections.IEnumerable'
    content.vb: >-
      Public NotInheritable Class XmlAttributeCollection
          Inherits XmlNamedNodeMap
          Implements Collections.ICollection, Collections.IEnumerable
  inheritance:
  - System.Object
  - System.Xml.XmlNamedNodeMap
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Xml.XmlNamedNodeMap.Count
  - System.Xml.XmlNamedNodeMap.GetEnumerator
  - System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)
  - System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)
  - System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)
  - System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Xml.XmlAttributeCollection.Item(System.Int32)
  commentId: P:System.Xml.XmlAttributeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Xml.XmlAttributeCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 17
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public XmlAttribute this[int i] { get; }
    content.vb: Public ReadOnly Property Item(i As Integer) As XmlAttribute
    parameters:
    - id: i
      type: System.Int32
    return:
      type: System.Xml.XmlAttribute
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Xml.XmlAttributeCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Xml.XmlAttributeCollection.Item(System.String)
  commentId: P:System.Xml.XmlAttributeCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Xml.XmlAttributeCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 34
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public XmlAttribute this[string name] { get; }
    content.vb: Public ReadOnly Property Item(name As String) As XmlAttribute
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Xml.XmlAttribute
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Xml.XmlAttributeCollection.Item(System.String)
  name.vb: Item(String)
- uid: System.Xml.XmlAttributeCollection.Item(System.String,System.String)
  commentId: P:System.Xml.XmlAttributeCollection.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: Item[String, String]
  fullName: System.Xml.XmlAttributeCollection.Item[System.String, System.String]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 57
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public XmlAttribute this[string localName, string namespaceURI] { get; }
    content.vb: Public ReadOnly Property Item(localName As String, namespaceURI As String) As XmlAttribute
    parameters:
    - id: localName
      type: System.String
    - id: namespaceURI
      type: System.String
    return:
      type: System.Xml.XmlAttribute
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Xml.XmlAttributeCollection.Item(System.String, System.String)
  name.vb: Item(String, String)
- uid: System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)
  commentId: M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)
  id: Append(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: Append(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Append
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 133
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Inserts the specified attribute as the last node in the collection.
  syntax:
    content: public XmlAttribute Append(XmlAttribute node)
    content.vb: Public Function Append(node As XmlAttribute) As XmlAttribute
    parameters:
    - id: node
      type: System.Xml.XmlAttribute
      description: 'The <xref href="System.Xml.XmlAttribute" data-throw-if-not-resolved="false"></xref> to insert. '
    return:
      type: System.Xml.XmlAttribute
      description: The XmlAttribute to append to the collection.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>node</em> was created from a document different from the one that created this collection. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)
  commentId: M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)
  id: CopyTo(System.Xml.XmlAttribute[],System.Int32)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: CopyTo(XmlAttribute[], Int32)
  fullName: System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 272
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Copies all the <xref href="System.Xml.XmlAttribute" data-throw-if-not-resolved="false"></xref> objects from this collection into the given array.
  syntax:
    content: public void CopyTo(XmlAttribute[] array, int index)
    content.vb: Public Sub CopyTo(array As XmlAttribute(), index As Integer)
    parameters:
    - id: array
      type: System.Xml.XmlAttribute[]
      description: 'The array that is the destination of the objects copied from this collection. '
    - id: index
      type: System.Int32
      description: 'The index in the array where copying begins. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute(), System.Int32)
  name.vb: CopyTo(XmlAttribute(), Int32)
- uid: System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  commentId: M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  id: InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: InsertAfter(XmlAttribute, XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute, System.Xml.XmlAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertAfter
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 186
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Inserts the specified attribute immediately after the specified reference attribute.
  syntax:
    content: public XmlAttribute InsertAfter(XmlAttribute newNode, XmlAttribute refNode)
    content.vb: Public Function InsertAfter(newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute
    parameters:
    - id: newNode
      type: System.Xml.XmlAttribute
      description: 'The <xref href="System.Xml.XmlAttribute" data-throw-if-not-resolved="false"></xref> to insert. '
    - id: refNode
      type: System.Xml.XmlAttribute
      description: 'The <xref href="System.Xml.XmlAttribute" data-throw-if-not-resolved="false"></xref> that is the reference attribute. <em>newNode</em> is placed after the <em>refNode</em>. '
    return:
      type: System.Xml.XmlAttribute
      description: The XmlAttribute to insert into the collection.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>newNode</em> was created from a document different from the one that created this collection. Or the <em>refNode</em> is not a member of this collection. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  commentId: M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  id: InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: InsertBefore(XmlAttribute, XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute, System.Xml.XmlAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertBefore
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 157
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Inserts the specified attribute immediately before the specified reference attribute.
  syntax:
    content: public XmlAttribute InsertBefore(XmlAttribute newNode, XmlAttribute refNode)
    content.vb: Public Function InsertBefore(newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute
    parameters:
    - id: newNode
      type: System.Xml.XmlAttribute
      description: 'The <xref href="System.Xml.XmlAttribute" data-throw-if-not-resolved="false"></xref> to insert. '
    - id: refNode
      type: System.Xml.XmlAttribute
      description: 'The <xref href="System.Xml.XmlAttribute" data-throw-if-not-resolved="false"></xref> that is the reference attribute. <em>newNode</em> is placed before the <em>refNode</em>. '
    return:
      type: System.Xml.XmlAttribute
      description: The XmlAttribute to insert into the collection.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>newNode</em> was created from a document different from the one that created this collection. Or the <em>refNode</em> is not a member of this collection. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)
  commentId: M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)
  id: Prepend(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: Prepend(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Prepend
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 118
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Inserts the specified attribute as the first node in the collection.
  syntax:
    content: public XmlAttribute Prepend(XmlAttribute node)
    content.vb: Public Function Prepend(node As XmlAttribute) As XmlAttribute
    parameters:
    - id: node
      type: System.Xml.XmlAttribute
      description: 'The <xref href="System.Xml.XmlAttribute" data-throw-if-not-resolved="false"></xref> to insert. '
    return:
      type: System.Xml.XmlAttribute
      description: The XmlAttribute added to the collection.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)
  commentId: M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)
  id: Remove(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: Remove(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 215
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Removes the specified attribute from the collection.
  syntax:
    content: public XmlAttribute Remove(XmlAttribute node)
    content.vb: Public Function Remove(node As XmlAttribute) As XmlAttribute
    parameters:
    - id: node
      type: System.Xml.XmlAttribute
      description: 'The <xref href="System.Xml.XmlAttribute" data-throw-if-not-resolved="false"></xref> to remove. '
    return:
      type: System.Xml.XmlAttribute
      description: The node removed or null if it is not found in the collection.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlAttributeCollection.RemoveAll
  commentId: M:System.Xml.XmlAttributeCollection.RemoveAll
  id: RemoveAll
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: RemoveAll()
  fullName: System.Xml.XmlAttributeCollection.RemoveAll()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAll
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 239
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Removes all attributes from the collection.
  syntax:
    content: public void RemoveAll()
    content.vb: Public Sub RemoveAll
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)
  commentId: M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  fullName: System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 230
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Removes the attribute corresponding to the specified index from the collection.
  syntax:
    content: public XmlAttribute RemoveAt(int i)
    content.vb: Public Function RemoveAt(i As Integer) As XmlAttribute
    parameters:
    - id: i
      type: System.Int32
      description: 'The index of the node to remove. The first node has index 0. '
    return:
      type: System.Xml.XmlAttribute
      description: Returns null if there is no attribute at the specified index.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)
  id: SetNamedItem(System.Xml.XmlNode)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  - vb
  name: SetNamedItem(XmlNode)
  fullName: System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetNamedItem
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttributeCollection.cs
    startLine: 96
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: 'Adds a <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> using its <xref href="System.Xml.XmlNode.Name" data-throw-if-not-resolved="false"></xref> property '
  syntax:
    content: public override XmlNode SetNamedItem(XmlNode node)
    content.vb: Public Overrides Function SetNamedItem(node As XmlNode) As XmlNode
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: 'An attribute node to store in this collection. The node will later be accessible using the name of the node. If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection. '
    return:
      type: System.Xml.XmlNode
      description: If the <em>node</em> replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.
  overridden: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>node</em> was created from a different <xref href=\"System.Xml.XmlDocument\" data-throw-if-not-resolved=\"false\"></xref> than the one that created this collection.This XmlAttributeCollection is read-only. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<em>node</em> is an <xref href=\"System.Xml.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> that is already an attribute of another <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> object. To re-use attributes in other elements, you must clone the XmlAttribute objects you want to re-use. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Xml.XmlNamedNodeMap
  parent: System.Xml
  isExternal: false
  name: XmlNamedNodeMap
  fullName: System.Xml.XmlNamedNodeMap
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Xml.XmlNamedNodeMap.Count
  parent: System.Xml.XmlNamedNodeMap
  isExternal: false
  name: Count
  fullName: System.Xml.XmlNamedNodeMap.Count
- uid: System.Xml.XmlNamedNodeMap.GetEnumerator
  parent: System.Xml.XmlNamedNodeMap
  isExternal: false
  name: GetEnumerator()
  fullName: System.Xml.XmlNamedNodeMap.GetEnumerator()
  spec.csharp:
  - uid: System.Xml.XmlNamedNodeMap.GetEnumerator
    name: GetEnumerator
    fullName: System.Xml.XmlNamedNodeMap.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNamedNodeMap.GetEnumerator
    name: GetEnumerator
    fullName: System.Xml.XmlNamedNodeMap.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)
  parent: System.Xml.XmlNamedNodeMap
  isExternal: true
  name: GetNamedItem(String)
  fullName: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)
  spec.csharp:
  - uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)
    name: GetNamedItem
    fullName: System.Xml.XmlNamedNodeMap.GetNamedItem
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)
    name: GetNamedItem
    fullName: System.Xml.XmlNamedNodeMap.GetNamedItem
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)
  parent: System.Xml.XmlNamedNodeMap
  isExternal: true
  name: GetNamedItem(String, String)
  fullName: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String, System.String)
  spec.csharp:
  - uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)
    name: GetNamedItem
    fullName: System.Xml.XmlNamedNodeMap.GetNamedItem
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)
    name: GetNamedItem
    fullName: System.Xml.XmlNamedNodeMap.GetNamedItem
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)
  parent: System.Xml.XmlNamedNodeMap
  isExternal: true
  name: RemoveNamedItem(String)
  fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)
  spec.csharp:
  - uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)
    name: RemoveNamedItem
    fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)
    name: RemoveNamedItem
    fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)
  parent: System.Xml.XmlNamedNodeMap
  isExternal: true
  name: RemoveNamedItem(String, String)
  fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String, System.String)
  spec.csharp:
  - uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)
    name: RemoveNamedItem
    fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)
    name: RemoveNamedItem
    fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Xml.XmlAttribute[]
  isExternal: false
  name: XmlAttribute[]
  fullName: System.Xml.XmlAttribute[]
  fullname.vb: System.Xml.XmlAttribute()
  name.vb: XmlAttribute()
  spec.csharp:
  - uid: System.Xml.XmlAttribute
    name: XmlAttribute
    fullName: System.Xml.XmlAttribute
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Xml.XmlAttribute
    name: XmlAttribute
    fullName: System.Xml.XmlAttribute
  - name: ()
    fullName: ()
- uid: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)
  parent: System.Xml.XmlNamedNodeMap
  isExternal: false
  name: SetNamedItem(XmlNode)
  fullName: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)
    name: SetNamedItem
    fullName: System.Xml.XmlNamedNodeMap.SetNamedItem
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)
    name: SetNamedItem
    fullName: System.Xml.XmlNamedNodeMap.SetNamedItem
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
