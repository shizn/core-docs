items:
- uid: System.Xml.XmlCharacterData
  commentId: T:System.Xml.XmlCharacterData
  id: XmlCharacterData
  parent: System.Xml
  children:
  - System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)
  - System.Xml.XmlCharacterData.AppendData(System.String)
  - System.Xml.XmlCharacterData.Data
  - System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)
  - System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)
  - System.Xml.XmlCharacterData.Length
  - System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)
  - System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)
  - System.Xml.XmlCharacterData.Value
  langs:
  - csharp
  - vb
  name: XmlCharacterData
  fullName: System.Xml.XmlCharacterData
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlCharacterData
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
    startLine: 9
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Provides text manipulation methods that are used by several classes.
  syntax:
    content: 'public abstract class XmlCharacterData : XmlLinkedNode'
    content.vb: >-
      Public MustInherit Class XmlCharacterData
          Inherits XmlLinkedNode
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  inheritedMembers:
  - System.Xml.XmlLinkedNode.NextSibling
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerText
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.LocalName
  - System.Xml.XmlNode.Name
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.NodeType
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.CloneNode(System.Boolean)
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)
  commentId: M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlCharacterData
  langs:
  - csharp
  - vb
  name: XmlCharacterData(String, XmlDocument)
  fullName: System.Xml.XmlCharacterData.XmlCharacterData(System.String, System.Xml.XmlDocument)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
    startLine: 14
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlCharacterData" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected XmlCharacterData(string data, XmlDocument doc)
    content.vb: Protected Sub New(data As String, doc As XmlDocument)
    parameters:
    - id: data
      type: System.String
      description: String that contains character data to be added to document.
    - id: doc
      type: System.Xml.XmlDocument
      description: "\n<xref href=\"System.Xml.XmlDocument\" data-throw-if-not-resolved=\"false\"></xref> to contain character data."
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.XmlCharacterData.Data
  commentId: P:System.Xml.XmlCharacterData.Data
  id: Data
  parent: System.Xml.XmlCharacterData
  langs:
  - csharp
  - vb
  name: Data
  fullName: System.Xml.XmlCharacterData.Data
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Data
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
    startLine: 35
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Contains the data of the node.
  syntax:
    content: public virtual string Data { get; set; }
    content.vb: Public Overridable Property Data As String
    parameters: []
    return:
      type: System.String
      description: The data of the node.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlCharacterData.Length
  commentId: P:System.Xml.XmlCharacterData.Length
  id: Length
  parent: System.Xml.XmlCharacterData
  langs:
  - csharp
  - vb
  name: Length
  fullName: System.Xml.XmlCharacterData.Length
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
    startLine: 65
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the length of the data, in characters.
  syntax:
    content: public virtual int Length { get; }
    content.vb: Public Overridable ReadOnly Property Length As Integer
    parameters: []
    return:
      type: System.Int32
      description: The length, in characters, of the string in the <xref href="System.Xml.XmlCharacterData.Data" data-throw-if-not-resolved="false"></xref> property. The length may be zero; that is, CharacterData nodes can be empty.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlCharacterData.Value
  commentId: P:System.Xml.XmlCharacterData.Value
  id: Value
  parent: System.Xml.XmlCharacterData
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Xml.XmlCharacterData.Value
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
    startLine: 20
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets or sets the value of the node.
  syntax:
    content: public override string Value { get; set; }
    content.vb: Public Overrides Property Value As String
    parameters: []
    return:
      type: System.String
      description: The value of the node.
  overridden: System.Xml.XmlNode.Value
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Node is read-only. '
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlCharacterData.AppendData(System.String)
  commentId: M:System.Xml.XmlCharacterData.AppendData(System.String)
  id: AppendData(System.String)
  parent: System.Xml.XmlCharacterData
  langs:
  - csharp
  - vb
  name: AppendData(String)
  fullName: System.Xml.XmlCharacterData.AppendData(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AppendData
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 77
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Appends the specified string to the end of the character data of the node.
  syntax:
    content: public virtual void AppendData(string strData)
    content.vb: Public Overridable Sub AppendData(strData As String)
    parameters:
    - id: strData
      type: System.String
      description: 'The string to insert into the existing string. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)
  commentId: M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)
  id: DeleteData(System.Int32,System.Int32)
  parent: System.Xml.XmlCharacterData
  langs:
  - csharp
  - vb
  name: DeleteData(Int32, Int32)
  fullName: System.Xml.XmlCharacterData.DeleteData(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeleteData
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
    startLine: 129
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Removes a range of characters from the node.
  syntax:
    content: public virtual void DeleteData(int offset, int count)
    content.vb: Public Overridable Sub DeleteData(offset As Integer, count As Integer)
    parameters:
    - id: offset
      type: System.Int32
      description: 'The position within the string to start deleting. '
    - id: count
      type: System.Int32
      description: 'The number of characters to delete. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)
  commentId: M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)
  id: InsertData(System.Int32,System.String)
  parent: System.Xml.XmlCharacterData
  langs:
  - csharp
  - vb
  name: InsertData(Int32, String)
  fullName: System.Xml.XmlCharacterData.InsertData(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertData
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
    startLine: 112
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Inserts the specified string at the specified character offset.
  syntax:
    content: public virtual void InsertData(int offset, string strData)
    content.vb: Public Overridable Sub InsertData(offset As Integer, strData As String)
    parameters:
    - id: offset
      type: System.Int32
      description: 'The position within the string to insert the supplied string data. '
    - id: strData
      type: System.String
      description: 'The string data that is to be inserted into the existing string. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)
  commentId: M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)
  id: ReplaceData(System.Int32,System.Int32,System.String)
  parent: System.Xml.XmlCharacterData
  langs:
  - csharp
  - vb
  name: ReplaceData(Int32, Int32, String)
  fullName: System.Xml.XmlCharacterData.ReplaceData(System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReplaceData
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 80
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Replaces the specified number of characters starting at the specified offset with the specified string.
  syntax:
    content: public virtual void ReplaceData(int offset, int count, string strData)
    content.vb: Public Overridable Sub ReplaceData(offset As Integer, count As Integer, strData As String)
    parameters:
    - id: offset
      type: System.Int32
      description: 'The position within the string to start replacing. '
    - id: count
      type: System.Int32
      description: 'The number of characters to replace. '
    - id: strData
      type: System.String
      description: 'The new data that replaces the old string data. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)
  commentId: M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)
  id: Substring(System.Int32,System.Int32)
  parent: System.Xml.XmlCharacterData
  langs:
  - csharp
  - vb
  name: Substring(Int32, Int32)
  fullName: System.Xml.XmlCharacterData.Substring(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Substring
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlCharacterData.cs
    startLine: 78
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Retrieves a substring of the full string from the specified range.
  syntax:
    content: public virtual string Substring(int offset, int count)
    content.vb: Public Overridable Function Substring(offset As Integer, count As Integer) As String
    parameters:
    - id: offset
      type: System.Int32
      description: 'The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data. '
    - id: count
      type: System.Int32
      description: 'The number of characters to retrieve. '
    return:
      type: System.String
      description: The substring corresponding to the specified range.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.XmlLinkedNode
  parent: System.Xml
  isExternal: false
  name: XmlLinkedNode
  fullName: System.Xml.XmlLinkedNode
- uid: System.Xml.XmlLinkedNode.NextSibling
  parent: System.Xml.XmlLinkedNode
  isExternal: false
  name: NextSibling
  fullName: System.Xml.XmlLinkedNode.NextSibling
- uid: System.Xml.XmlLinkedNode.PreviousSibling
  parent: System.Xml.XmlLinkedNode
  isExternal: false
  name: PreviousSibling
  fullName: System.Xml.XmlLinkedNode.PreviousSibling
- uid: System.Xml.XmlNode.Attributes
  parent: System.Xml.XmlNode
  isExternal: false
  name: Attributes
  fullName: System.Xml.XmlNode.Attributes
- uid: System.Xml.XmlNode.BaseURI
  parent: System.Xml.XmlNode
  isExternal: false
  name: BaseURI
  fullName: System.Xml.XmlNode.BaseURI
- uid: System.Xml.XmlNode.ChildNodes
  parent: System.Xml.XmlNode
  isExternal: false
  name: ChildNodes
  fullName: System.Xml.XmlNode.ChildNodes
- uid: System.Xml.XmlNode.FirstChild
  parent: System.Xml.XmlNode
  isExternal: false
  name: FirstChild
  fullName: System.Xml.XmlNode.FirstChild
- uid: System.Xml.XmlNode.HasChildNodes
  parent: System.Xml.XmlNode
  isExternal: false
  name: HasChildNodes
  fullName: System.Xml.XmlNode.HasChildNodes
- uid: System.Xml.XmlNode.InnerText
  parent: System.Xml.XmlNode
  isExternal: false
  name: InnerText
  fullName: System.Xml.XmlNode.InnerText
- uid: System.Xml.XmlNode.InnerXml
  parent: System.Xml.XmlNode
  isExternal: false
  name: InnerXml
  fullName: System.Xml.XmlNode.InnerXml
- uid: System.Xml.XmlNode.IsReadOnly
  parent: System.Xml.XmlNode
  isExternal: false
  name: IsReadOnly
  fullName: System.Xml.XmlNode.IsReadOnly
- uid: System.Xml.XmlNode.Item(System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: Item[String]
  fullName: System.Xml.XmlNode.Item[System.String]
  fullname.vb: System.Xml.XmlNode.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Xml.XmlNode.Item(System.String)
    name: Item
    fullName: System.Xml.XmlNode.Item
  - name: '['
    fullName: '['
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Xml.XmlNode.Item(System.String)
    name: Item
    fullName: System.Xml.XmlNode.Item
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.Item(System.String,System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: Item[String, String]
  fullName: System.Xml.XmlNode.Item[System.String, System.String]
  fullname.vb: System.Xml.XmlNode.Item(System.String, System.String)
  name.vb: Item(String, String)
  spec.csharp:
  - uid: System.Xml.XmlNode.Item(System.String,System.String)
    name: Item
    fullName: System.Xml.XmlNode.Item
  - name: '['
    fullName: '['
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Xml.XmlNode.Item(System.String,System.String)
    name: Item
    fullName: System.Xml.XmlNode.Item
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.LastChild
  parent: System.Xml.XmlNode
  isExternal: false
  name: LastChild
  fullName: System.Xml.XmlNode.LastChild
- uid: System.Xml.XmlNode.LocalName
  parent: System.Xml.XmlNode
  isExternal: false
  name: LocalName
  fullName: System.Xml.XmlNode.LocalName
- uid: System.Xml.XmlNode.Name
  parent: System.Xml.XmlNode
  isExternal: false
  name: Name
  fullName: System.Xml.XmlNode.Name
- uid: System.Xml.XmlNode.NamespaceURI
  parent: System.Xml.XmlNode
  isExternal: false
  name: NamespaceURI
  fullName: System.Xml.XmlNode.NamespaceURI
- uid: System.Xml.XmlNode.NodeType
  parent: System.Xml.XmlNode
  isExternal: false
  name: NodeType
  fullName: System.Xml.XmlNode.NodeType
- uid: System.Xml.XmlNode.OuterXml
  parent: System.Xml.XmlNode
  isExternal: false
  name: OuterXml
  fullName: System.Xml.XmlNode.OuterXml
- uid: System.Xml.XmlNode.OwnerDocument
  parent: System.Xml.XmlNode
  isExternal: false
  name: OwnerDocument
  fullName: System.Xml.XmlNode.OwnerDocument
- uid: System.Xml.XmlNode.ParentNode
  parent: System.Xml.XmlNode
  isExternal: false
  name: ParentNode
  fullName: System.Xml.XmlNode.ParentNode
- uid: System.Xml.XmlNode.Prefix
  parent: System.Xml.XmlNode
  isExternal: false
  name: Prefix
  fullName: System.Xml.XmlNode.Prefix
- uid: System.Xml.XmlNode.PreviousText
  parent: System.Xml.XmlNode
  isExternal: false
  name: PreviousText
  fullName: System.Xml.XmlNode.PreviousText
- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: AppendChild(XmlNode)
  fullName: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
    name: AppendChild
    fullName: System.Xml.XmlNode.AppendChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
    name: AppendChild
    fullName: System.Xml.XmlNode.AppendChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.CloneNode(System.Boolean)
  parent: System.Xml.XmlNode
  isExternal: true
  name: CloneNode(Boolean)
  fullName: System.Xml.XmlNode.CloneNode(System.Boolean)
  spec.csharp:
  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)
    name: CloneNode
    fullName: System.Xml.XmlNode.CloneNode
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)
    name: CloneNode
    fullName: System.Xml.XmlNode.CloneNode
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.GetEnumerator
  parent: System.Xml.XmlNode
  isExternal: false
  name: GetEnumerator()
  fullName: System.Xml.XmlNode.GetEnumerator()
  spec.csharp:
  - uid: System.Xml.XmlNode.GetEnumerator
    name: GetEnumerator
    fullName: System.Xml.XmlNode.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.GetEnumerator
    name: GetEnumerator
    fullName: System.Xml.XmlNode.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: GetNamespaceOfPrefix(String)
  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  spec.csharp:
  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
    name: GetNamespaceOfPrefix
    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
    name: GetNamespaceOfPrefix
    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: GetPrefixOfNamespace(String)
  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  spec.csharp:
  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
    name: GetPrefixOfNamespace
    fullName: System.Xml.XmlNode.GetPrefixOfNamespace
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
    name: GetPrefixOfNamespace
    fullName: System.Xml.XmlNode.GetPrefixOfNamespace
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: InsertAfter(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertAfter
    fullName: System.Xml.XmlNode.InsertAfter
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertAfter
    fullName: System.Xml.XmlNode.InsertAfter
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: InsertBefore(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertBefore
    fullName: System.Xml.XmlNode.InsertBefore
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertBefore
    fullName: System.Xml.XmlNode.InsertBefore
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.Normalize
  parent: System.Xml.XmlNode
  isExternal: false
  name: Normalize()
  fullName: System.Xml.XmlNode.Normalize()
  spec.csharp:
  - uid: System.Xml.XmlNode.Normalize
    name: Normalize
    fullName: System.Xml.XmlNode.Normalize
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.Normalize
    name: Normalize
    fullName: System.Xml.XmlNode.Normalize
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: PrependChild(XmlNode)
  fullName: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
    name: PrependChild
    fullName: System.Xml.XmlNode.PrependChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
    name: PrependChild
    fullName: System.Xml.XmlNode.PrependChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.RemoveAll
  parent: System.Xml.XmlNode
  isExternal: false
  name: RemoveAll()
  fullName: System.Xml.XmlNode.RemoveAll()
  spec.csharp:
  - uid: System.Xml.XmlNode.RemoveAll
    name: RemoveAll
    fullName: System.Xml.XmlNode.RemoveAll
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.RemoveAll
    name: RemoveAll
    fullName: System.Xml.XmlNode.RemoveAll
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: RemoveChild(XmlNode)
  fullName: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
    name: RemoveChild
    fullName: System.Xml.XmlNode.RemoveChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
    name: RemoveChild
    fullName: System.Xml.XmlNode.RemoveChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: ReplaceChild(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
    name: ReplaceChild
    fullName: System.Xml.XmlNode.ReplaceChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
    name: ReplaceChild
    fullName: System.Xml.XmlNode.ReplaceChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.Supports(System.String,System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: Supports(String, String)
  fullName: System.Xml.XmlNode.Supports(System.String, System.String)
  spec.csharp:
  - uid: System.Xml.XmlNode.Supports(System.String,System.String)
    name: Supports
    fullName: System.Xml.XmlNode.Supports
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.Supports(System.String,System.String)
    name: Supports
    fullName: System.Xml.XmlNode.Supports
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlNode
  isExternal: true
  name: WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
    name: WriteContentTo
    fullName: System.Xml.XmlNode.WriteContentTo
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
    name: WriteContentTo
    fullName: System.Xml.XmlNode.WriteContentTo
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlNode
  isExternal: true
  name: WriteTo(XmlWriter)
  fullName: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
    name: WriteTo
    fullName: System.Xml.XmlNode.WriteTo
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
    name: WriteTo
    fullName: System.Xml.XmlNode.WriteTo
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Xml.XmlNode.Value
  parent: System.Xml.XmlNode
  isExternal: false
  name: Value
  fullName: System.Xml.XmlNode.Value
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
