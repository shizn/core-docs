items:
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  id: IEnumerator`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.IEnumerator`1.Current
  langs:
  - csharp
  - vb
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IEnumerator
    path: src/mscorlib/src/System/Collections/Generic/IEnumerator.cs
    startLine: 21
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: Supports a simple iteration over a generic collection.
  syntax:
    content: 'public interface IEnumerator<out T> : IEnumerator, IDisposable'
    content.vb: >-
      Public Interface IEnumerator(Of Out T)
          Inherits IEnumerator, IDisposable
    typeParameters:
    - id: T
      description: The type of objects to enumerate.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.
  inheritedMembers:
  - System.Collections.IEnumerator.MoveNext
  - System.Collections.IEnumerator.Reset
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
- uid: System.Collections.Generic.IEnumerator`1.Current
  commentId: P:System.Collections.Generic.IEnumerator`1.Current
  id: Current
  parent: System.Collections.Generic.IEnumerator`1
  langs:
  - csharp
  - vb
  name: Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Current
    path: src/mscorlib/src/System/Collections/Generic/IEnumerator.cs
    startLine: 30
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: Gets the element in the collection at the current position of the enumerator.
  syntax:
    content: T Current { get; }
    content.vb: ReadOnly Property Current As T
    parameters: []
    return:
      type: '{T}'
      description: The element in the collection at the current position of the enumerator.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.Generic.IEnumerator(Of T).Current
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: false
  name: MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: false
  name: Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    fullName: System.Collections.IEnumerator.Reset
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    fullName: System.Collections.IEnumerator.Reset
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
