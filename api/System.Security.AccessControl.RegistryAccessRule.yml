items:
- uid: System.Security.AccessControl.RegistryAccessRule
  commentId: T:System.Security.AccessControl.RegistryAccessRule
  id: RegistryAccessRule
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.RegistryAccessRule.RegistryRights
  langs:
  - csharp
  - vb
  name: RegistryAccessRule
  fullName: System.Security.AccessControl.RegistryAccessRule
  type: Class
  source:
    remote:
      path: src/Microsoft.Win32.Registry.AccessControl/src/System/Security/AccessControl/RegistrySecurity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RegistryAccessRule
    path: src/Microsoft.Win32.Registry.AccessControl/src/System/Security/AccessControl/RegistrySecurity.cs
    startLine: 11
  assemblies:
  - Microsoft.Win32.Registry.AccessControl
  namespace: System.Security.AccessControl
  summary: Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.
  syntax:
    content: 'public sealed class RegistryAccessRule : AccessRule'
    content.vb: >-
      Public NotInheritable Class RegistryAccessRule
          Inherits AccessRule
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.RegistryAccessRule
  langs:
  - csharp
  - vb
  name: RegistryAccessRule(Principal.IdentityReference, RegistryRights, AccessControlType)
  fullName: System.Security.AccessControl.RegistryAccessRule.RegistryAccessRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.RegistryRights, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs
    startLine: 23
  assemblies:
  - Microsoft.Win32.Registry.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.RegistryAccessRule" data-throw-if-not-resolved="false"></xref> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.
  syntax:
    content: public RegistryAccessRule(Principal.IdentityReference identity, RegistryRights registryRights, AccessControlType type)
    content.vb: Public Sub New(identity As Principal.IdentityReference, registryRights As RegistryRights, type As AccessControlType)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The user or group the rule applies to. Must be of type <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref> or a type such as <xref href="System.Security.Principal.NTAccount" data-throw-if-not-resolved="false"></xref> that can be converted to type <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref>.
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: A bitwise combination of <xref href="System.Security.AccessControl.RegistryRights" data-throw-if-not-resolved="false"></xref> values indicating the rights allowed or denied.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values indicating whether the rights are allowed or denied.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>registryRights</em> specifies an invalid value.-or-<em>type</em> specifies an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>identity</em> is null. -or-<em>eventRights</em> is zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>identity</em> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> nor of a type such as <xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.RegistryAccessRule
  langs:
  - csharp
  - vb
  name: RegistryAccessRule(Principal.IdentityReference, RegistryRights, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.RegistryAccessRule.RegistryAccessRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.RegistryRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs
    startLine: 24
  assemblies:
  - Microsoft.Win32.Registry.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.RegistryAccessRule" data-throw-if-not-resolved="false"></xref> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.
  syntax:
    content: public RegistryAccessRule(Principal.IdentityReference identity, RegistryRights registryRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
    content.vb: Public Sub New(identity As Principal.IdentityReference, registryRights As RegistryRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The user or group the rule applies to. Must be of type <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref> or a type such as <xref href="System.Security.Principal.NTAccount" data-throw-if-not-resolved="false"></xref> that can be converted to type <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref>.
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: A bitwise combination of <xref href="System.Security.AccessControl.RegistryRights" data-throw-if-not-resolved="false"></xref> values specifying the rights allowed or denied.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: A bitwise combination of <xref href="System.Security.AccessControl.InheritanceFlags" data-throw-if-not-resolved="false"></xref> flags specifying how access rights are inherited from other objects.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: A bitwise combination of <xref href="System.Security.AccessControl.PropagationFlags" data-throw-if-not-resolved="false"></xref> flags specifying how access rights are propagated to other objects.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values specifying whether the rights are allowed or denied.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>registryRights</em> specifies an invalid value.-or-<em>type</em> specifies an invalid value.-or-<em>inheritanceFlags</em> specifies an invalid value.-or-<em>propagationFlags</em> specifies an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>identity</em> is null.-or-<em>registryRights</em> is zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>identity</em> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>, nor of a type such as <xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.RegistryAccessRule
  langs:
  - csharp
  - vb
  name: RegistryAccessRule(String, RegistryRights, AccessControlType)
  fullName: System.Security.AccessControl.RegistryAccessRule.RegistryAccessRule(System.String, System.Security.AccessControl.RegistryRights, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs
    startLine: 25
  assemblies:
  - Microsoft.Win32.Registry.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.RegistryAccessRule" data-throw-if-not-resolved="false"></xref> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.
  syntax:
    content: public RegistryAccessRule(string identity, RegistryRights registryRights, AccessControlType type)
    content.vb: Public Sub New(identity As String, registryRights As RegistryRights, type As AccessControlType)
    parameters:
    - id: identity
      type: System.String
      description: The name of the user or group the rule applies to.
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: A bitwise combination of <xref href="System.Security.AccessControl.RegistryRights" data-throw-if-not-resolved="false"></xref> values indicating the rights allowed or denied.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values indicating whether the rights are allowed or denied.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>registryRights</em> specifies an invalid value.-or-<em>type</em> specifies an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>registryRights</em> is zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>identity</em> is null.-or-<em>identity</em> is a zero-length string.-or-<em>identity</em> is longer than 512 characters."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.RegistryAccessRule
  langs:
  - csharp
  - vb
  name: RegistryAccessRule(String, RegistryRights, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.RegistryAccessRule.RegistryAccessRule(System.String, System.Security.AccessControl.RegistryRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs
    startLine: 26
  assemblies:
  - Microsoft.Win32.Registry.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.RegistryAccessRule" data-throw-if-not-resolved="false"></xref> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.
  syntax:
    content: public RegistryAccessRule(string identity, RegistryRights registryRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
    content.vb: Public Sub New(identity As String, registryRights As RegistryRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType)
    parameters:
    - id: identity
      type: System.String
      description: The name of the user or group the rule applies to.
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: A bitwise combination of <xref href="System.Security.AccessControl.RegistryRights" data-throw-if-not-resolved="false"></xref> values indicating the rights allowed or denied.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: A bitwise combination of <xref href="System.Security.AccessControl.InheritanceFlags" data-throw-if-not-resolved="false"></xref> flags specifying how access rights are inherited from other objects.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: A bitwise combination of <xref href="System.Security.AccessControl.PropagationFlags" data-throw-if-not-resolved="false"></xref> flags specifying how access rights are propagated to other objects.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values specifying whether the rights are allowed or denied.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>registryRights</em> specifies an invalid value.-or-<em>type</em> specifies an invalid value.-or-<em>inheritanceFlags</em> specifies an invalid value.-or-<em>propagationFlags</em> specifies an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>eventRights</em> is zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>identity</em> is null.-or-<em>identity</em> is a zero-length string.-or-<em>identity</em> is longer than 512 characters."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.RegistryAccessRule.RegistryRights
  commentId: P:System.Security.AccessControl.RegistryAccessRule.RegistryRights
  id: RegistryRights
  parent: System.Security.AccessControl.RegistryAccessRule
  langs:
  - csharp
  - vb
  name: RegistryRights
  fullName: System.Security.AccessControl.RegistryAccessRule.RegistryRights
  type: Property
  source:
    remote:
      path: src/Microsoft.Win32.Registry.AccessControl/src/System/Security/AccessControl/RegistrySecurity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RegistryRights
    path: src/Microsoft.Win32.Registry.AccessControl/src/System/Security/AccessControl/RegistrySecurity.cs
    startLine: 55
  assemblies:
  - Microsoft.Win32.Registry.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the rights allowed or denied by the access rule.
  syntax:
    content: public RegistryRights RegistryRights { get; }
    content.vb: Public ReadOnly Property RegistryRights As RegistryRights
    parameters: []
    return:
      type: System.Security.AccessControl.RegistryRights
      description: A bitwise combination of <xref href="System.Security.AccessControl.RegistryRights" data-throw-if-not-resolved="false"></xref> values indicating the rights allowed or denied by the access rule.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
