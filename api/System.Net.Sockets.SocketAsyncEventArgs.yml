items:
- uid: System.Net.Sockets.SocketAsyncEventArgs
  commentId: T:System.Net.Sockets.SocketAsyncEventArgs
  id: SocketAsyncEventArgs
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.SocketAsyncEventArgs.#ctor
  - System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  - System.Net.Sockets.SocketAsyncEventArgs.Buffer
  - System.Net.Sockets.SocketAsyncEventArgs.BufferList
  - System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  - System.Net.Sockets.SocketAsyncEventArgs.Completed
  - System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  - System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  - System.Net.Sockets.SocketAsyncEventArgs.Count
  - System.Net.Sockets.SocketAsyncEventArgs.Dispose
  - System.Net.Sockets.SocketAsyncEventArgs.Finalize
  - System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  - System.Net.Sockets.SocketAsyncEventArgs.Offset
  - System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  - System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  - System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  - System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  - System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)
  - System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)
  - System.Net.Sockets.SocketAsyncEventArgs.SocketError
  - System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  - System.Net.Sockets.SocketAsyncEventArgs.UserToken
  langs:
  - csharp
  - vb
  name: SocketAsyncEventArgs
  fullName: System.Net.Sockets.SocketAsyncEventArgs
  type: Class
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SocketAsyncEventArgs
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.Windows.cs
    startLine: 17
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Represents an asynchronous socket operation.
  syntax:
    content: 'public class SocketAsyncEventArgs : EventArgs, IDisposable'
    content.vb: >-
      Public Class SocketAsyncEventArgs
          Inherits EventArgs
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Sockets.SocketAsyncEventArgs.#ctor
  commentId: M:System.Net.Sockets.SocketAsyncEventArgs.#ctor
  id: '#ctor'
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: SocketAsyncEventArgs()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketAsyncEventArgs()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 87
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Creates an empty <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public SocketAsyncEventArgs()
    content.vb: Public Sub New
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The platform is not supported. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  id: AcceptSocket
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: AcceptSocket
  fullName: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AcceptSocket
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 92
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.
  syntax:
    content: public Socket AcceptSocket { get; set; }
    content.vb: Public Property AcceptSocket As Socket
    parameters: []
    return:
      type: System.Net.Sockets.Socket
      description: The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> to use or the socket created for accepting a connection with an asynchronous socket method.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.Buffer
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Buffer
  id: Buffer
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: Buffer
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Buffer
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Buffer
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 103
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the data buffer to use with an asynchronous socket method.
  syntax:
    content: public byte[] Buffer { get; }
    content.vb: Public ReadOnly Property Buffer As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array that represents the data buffer to use with an asynchronous socket method.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SocketAsyncEventArgs.BufferList
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.BufferList
  id: BufferList
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: BufferList
  fullName: System.Net.Sockets.SocketAsyncEventArgs.BufferList
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BufferList
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 120
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets an array of data buffers to use with an asynchronous socket method.
  syntax:
    content: public Collections.Generic.IList<ArraySegment<byte>> BufferList { get; set; }
    content.vb: Public Property BufferList As Collections.Generic.IList(Of ArraySegment(Of Byte))
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> that represents an array of data buffers to use with an asynchronous socket method.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: There are ambiguous buffers specified on a set operation. This exception occurs if the <xref href="System.Net.Sockets.SocketAsyncEventArgs.Buffer" data-throw-if-not-resolved="false"></xref> property has been set to a non-null value and an attempt was made to set the <xref href="System.Net.Sockets.SocketAsyncEventArgs.BufferList" data-throw-if-not-resolved="false"></xref> property to a non-null value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  id: BytesTransferred
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: BytesTransferred
  fullName: System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BytesTransferred
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 142
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the number of bytes transferred in the socket operation.
  syntax:
    content: public int BytesTransferred { get; }
    content.vb: Public ReadOnly Property BytesTransferred As Integer
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that contains the number of bytes transferred in the socket operation.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  id: ConnectByNameError
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: ConnectByNameError
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectByNameError
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 216
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the exception in the case of a connection failure when a <xref href="System.Net.DnsEndPoint" data-throw-if-not-resolved="false"></xref> was used.
  syntax:
    content: public Exception ConnectByNameError { get; }
    content.vb: Public ReadOnly Property ConnectByNameError As Exception
    parameters: []
    return:
      type: System.Exception
      description: An <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> that indicates the cause of the connection error when a <xref href="System.Net.DnsEndPoint" data-throw-if-not-resolved="false"></xref> was specified for the <xref href="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" data-throw-if-not-resolved="false"></xref> property.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  id: ConnectSocket
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: ConnectSocket
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectSocket
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 98
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: The created and connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> object after successful completion of the <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync"></see> method.
  syntax:
    content: public Socket ConnectSocket { get; }
    content.vb: Public ReadOnly Property ConnectSocket As Socket
    parameters: []
    return:
      type: System.Net.Sockets.Socket
      description: The connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SocketAsyncEventArgs.Count
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Count
  id: Count
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Count
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 113
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that contains the maximum amount of data, in bytes, to send or receive.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  id: LastOperation
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: LastOperation
  fullName: System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastOperation
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 170
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the type of socket operation most recently performed with this context object.
  syntax:
    content: public SocketAsyncOperation LastOperation { get; }
    content.vb: Public ReadOnly Property LastOperation As SocketAsyncOperation
    parameters: []
    return:
      type: System.Net.Sockets.SocketAsyncOperation
      description: A <xref href="System.Net.Sockets.SocketAsyncOperation" data-throw-if-not-resolved="false"></xref> instance that indicates the type of socket operation most recently performed with this context object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SocketAsyncEventArgs.Offset
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Offset
  id: Offset
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: Offset
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Offset
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Offset
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 108
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the offset, in bytes, into the data buffer referenced by the <xref href="System.Net.Sockets.SocketAsyncEventArgs.Buffer" data-throw-if-not-resolved="false"></xref> property.
  syntax:
    content: public int Offset { get; }
    content.vb: Public ReadOnly Property Offset As Integer
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that contains the offset, in bytes, into the data buffer referenced by the <xref href="System.Net.Sockets.SocketAsyncEventArgs.Buffer" data-throw-if-not-resolved="false"></xref> property.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  id: ReceiveMessageFromPacketInfo
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: ReceiveMessageFromPacketInfo
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveMessageFromPacketInfo
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 175
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the IP address and interface of a received packet.
  syntax:
    content: public IPPacketInformation ReceiveMessageFromPacketInfo { get; }
    content.vb: Public ReadOnly Property ReceiveMessageFromPacketInfo As IPPacketInformation
    parameters: []
    return:
      type: System.Net.Sockets.IPPacketInformation
      description: An <xref href="System.Net.Sockets.IPPacketInformation" data-throw-if-not-resolved="false"></xref> instance that contains the destination IP address and interface of a received packet.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: RemoteEndPoint
  fullName: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoteEndPoint
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 180
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets the remote IP endpoint for an asynchronous operation.
  syntax:
    content: public EndPoint RemoteEndPoint { get; set; }
    content.vb: Public Property RemoteEndPoint As EndPoint
    parameters: []
    return:
      type: System.Net.EndPoint
      description: An <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref> that represents the remote IP endpoint for an asynchronous operation.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  id: SendPacketsElements
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: SendPacketsElements
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPacketsElements
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 186
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets an array of buffers to be sent for an asynchronous operation used by the <xref href="System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" data-throw-if-not-resolved="false"></xref> method.
  syntax:
    content: public SendPacketsElement[] SendPacketsElements { get; set; }
    content.vb: Public Property SendPacketsElements As SendPacketsElement()
    parameters: []
    return:
      type: System.Net.Sockets.SendPacketsElement[]
      description: An array of <xref href="System.Net.Sockets.SendPacketsElement" data-throw-if-not-resolved="false"></xref> objects that represent an array of buffers to be sent.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  id: SendPacketsSendSize
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: SendPacketsSendSize
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPacketsSendSize
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 204
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets the size, in bytes, of the data block used in the send operation.
  syntax:
    content: public int SendPacketsSendSize { get; set; }
    content.vb: Public Property SendPacketsSendSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that contains the size, in bytes, of the data block used in the send operation.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.SocketError
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SocketError
  id: SocketError
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: SocketError
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketError
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SocketError
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 210
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets the result of the asynchronous socket operation.
  syntax:
    content: public SocketError SocketError { get; set; }
    content.vb: Public Property SocketError As SocketError
    parameters: []
    return:
      type: System.Net.Sockets.SocketError
      description: A <xref href="System.Net.Sockets.SocketError" data-throw-if-not-resolved="false"></xref> that represents the result of the asynchronous socket operation.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  id: SocketFlags
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: SocketFlags
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SocketFlags
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 221
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.
  syntax:
    content: public SocketFlags SocketFlags { get; set; }
    content.vb: Public Property SocketFlags As SocketFlags
    parameters: []
    return:
      type: System.Net.Sockets.SocketFlags
      description: A <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> that represents the results of an asynchronous socket operation.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.UserToken
  commentId: P:System.Net.Sockets.SocketAsyncEventArgs.UserToken
  id: UserToken
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: UserToken
  fullName: System.Net.Sockets.SocketAsyncEventArgs.UserToken
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UserToken
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 227
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a user or application object associated with this asynchronous socket operation.
  syntax:
    content: public object UserToken { get; set; }
    content.vb: Public Property UserToken As Object
    parameters: []
    return:
      type: System.Object
      description: An object that represents the user or application object associated with this asynchronous socket operation.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.Completed
  commentId: E:System.Net.Sockets.SocketAsyncEventArgs.Completed
  id: Completed
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: Completed
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Completed
  type: Event
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Completed
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 147
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: The event used to complete an asynchronous operation.
  syntax:
    content: public event EventHandler<SocketAsyncEventArgs> Completed
    content.vb: Public Event Completed As EventHandler(Of SocketAsyncEventArgs)
    return:
      type: System.EventHandler{System.Net.Sockets.SocketAsyncEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.Dispose
  commentId: M:System.Net.Sockets.SocketAsyncEventArgs.Dispose
  id: Dispose
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 345
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> instance and optionally disposes of the managed resources.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketAsyncEventArgs.Finalize
  commentId: M:System.Net.Sockets.SocketAsyncEventArgs.Finalize
  id: Finalize
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: Finalize()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Finalize()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Finalize
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 364
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Frees resources used by the <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  id: OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: OnCompleted(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnCompleted
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 161
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Represents a method that is called when an asynchronous operation completes.
  syntax:
    content: protected virtual void OnCompleted(SocketAsyncEventArgs e)
    content.vb: Protected Overridable Sub OnCompleted(e As SocketAsyncEventArgs)
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The event that is signaled.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)
  id: SetBuffer(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: SetBuffer(Byte[], Int32, Int32)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetBuffer
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 233
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets the data buffer to use with an asynchronous socket method.
  syntax:
    content: public void SetBuffer(byte[] buffer, int offset, int count)
    content.vb: Public Sub SetBuffer(buffer As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The data buffer to use with an asynchronous socket method.
    - id: offset
      type: System.Int32
      description: The offset, in bytes, in the data buffer where the operation starts.
    - id: count
      type: System.Int32
      description: The maximum amount of data, in bytes, to send or receive in the buffer.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: There are ambiguous buffers specified. This exception occurs if the <xref href="System.Net.Sockets.SocketAsyncEventArgs.Buffer" data-throw-if-not-resolved="false"></xref> property is also not null and the <xref href="System.Net.Sockets.SocketAsyncEventArgs.BufferList" data-throw-if-not-resolved="false"></xref> property is also not null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: An argument was out of range. This exception occurs if the <em>offset</em> parameter is less than zero or greater than the length of the array in the <xref href="System.Net.Sockets.SocketAsyncEventArgs.Buffer" data-throw-if-not-resolved="false"></xref> property. This exception also occurs if the <em>count</em> parameter is less than zero or greater than the length of the array in the <xref href="System.Net.Sockets.SocketAsyncEventArgs.Buffer" data-throw-if-not-resolved="false"></xref> property minus the <em>offset</em> parameter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte(), System.Int32, System.Int32)
  name.vb: SetBuffer(Byte(), Int32, Int32)
- uid: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)
  commentId: M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)
  id: SetBuffer(System.Int32,System.Int32)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  - vb
  name: SetBuffer(Int32, Int32)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetBuffer
    path: src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEventArgs.cs
    startLine: 238
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets the data buffer to use with an asynchronous socket method.
  syntax:
    content: public void SetBuffer(int offset, int count)
    content.vb: Public Sub SetBuffer(offset As Integer, count As Integer)
    parameters:
    - id: offset
      type: System.Int32
      description: The offset, in bytes, in the data buffer where the operation starts.
    - id: count
      type: System.Int32
      description: The maximum amount of data, in bytes, to send or receive in the buffer.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: An argument was out of range. This exception occurs if the <em>offset</em> parameter is less than zero or greater than the length of the array in the <xref href="System.Net.Sockets.SocketAsyncEventArgs.Buffer" data-throw-if-not-resolved="false"></xref> property. This exception also occurs if the <em>count</em> parameter is less than zero or greater than the length of the array in the <xref href="System.Net.Sockets.SocketAsyncEventArgs.Buffer" data-throw-if-not-resolved="false"></xref> property minus the <em>offset</em> parameter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: false
  name: Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  definition: System.Collections.Generic.IList`1
  name: Collections.Generic.IList<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IList<System.ArraySegment<System.Byte>>
  fullname.vb: System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte))
  name.vb: Collections.Generic.IList(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  name: Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  fullname.vb: System.Collections.Generic.IList(Of )
  name.vb: Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Generic.IList
    fullName: System.Collections.Generic.IList
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Generic.IList
    fullName: System.Collections.Generic.IList
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.Net.Sockets.SocketAsyncOperation
  parent: System.Net.Sockets
  isExternal: false
  name: SocketAsyncOperation
  fullName: System.Net.Sockets.SocketAsyncOperation
- uid: System.Net.Sockets.IPPacketInformation
  parent: System.Net.Sockets
  isExternal: false
  name: IPPacketInformation
  fullName: System.Net.Sockets.IPPacketInformation
- uid: System.Net.EndPoint
  parent: System.Net
  isExternal: false
  name: EndPoint
  fullName: System.Net.EndPoint
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Net.Sockets.SendPacketsElement[]
  isExternal: false
  name: SendPacketsElement[]
  fullName: System.Net.Sockets.SendPacketsElement[]
  fullname.vb: System.Net.Sockets.SendPacketsElement()
  name.vb: SendPacketsElement()
  spec.csharp:
  - uid: System.Net.Sockets.SendPacketsElement
    name: SendPacketsElement
    fullName: System.Net.Sockets.SendPacketsElement
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.Sockets.SendPacketsElement
    name: SendPacketsElement
    fullName: System.Net.Sockets.SendPacketsElement
  - name: ()
    fullName: ()
- uid: System.Net.Sockets.SocketError
  parent: System.Net.Sockets
  isExternal: false
  name: SocketError
  fullName: System.Net.Sockets.SocketError
- uid: System.Net.Sockets.SocketFlags
  parent: System.Net.Sockets
  isExternal: false
  name: SocketFlags
  fullName: System.Net.Sockets.SocketFlags
- uid: System.EventHandler{System.Net.Sockets.SocketAsyncEventArgs}
  definition: System.EventHandler`1
  name: EventHandler<SocketAsyncEventArgs>
  fullName: System.EventHandler<System.Net.Sockets.SocketAsyncEventArgs>
  fullname.vb: System.EventHandler(Of System.Net.Sockets.SocketAsyncEventArgs)
  name.vb: EventHandler(Of SocketAsyncEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Sockets.SocketAsyncEventArgs
    name: SocketAsyncEventArgs
    fullName: System.Net.Sockets.SocketAsyncEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Sockets.SocketAsyncEventArgs
    name: SocketAsyncEventArgs
    fullName: System.Net.Sockets.SocketAsyncEventArgs
  - name: )
    fullName: )
- uid: System.EventHandler`1
  isExternal: false
  name: EventHandler<>
  fullName: System.EventHandler<>
  fullname.vb: System.EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Net.Sockets.SocketAsyncEventArgs
  parent: System.Net.Sockets
  isExternal: false
  name: SocketAsyncEventArgs
  fullName: System.Net.Sockets.SocketAsyncEventArgs
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
