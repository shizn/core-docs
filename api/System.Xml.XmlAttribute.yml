items:
- uid: System.Xml.XmlAttribute
  commentId: T:System.Xml.XmlAttribute
  id: XmlAttribute
  parent: System.Xml
  children:
  - System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.BaseURI
  - System.Xml.XmlAttribute.CloneNode(System.Boolean)
  - System.Xml.XmlAttribute.InnerText
  - System.Xml.XmlAttribute.InnerXml
  - System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.LocalName
  - System.Xml.XmlAttribute.Name
  - System.Xml.XmlAttribute.NamespaceURI
  - System.Xml.XmlAttribute.NodeType
  - System.Xml.XmlAttribute.OwnerDocument
  - System.Xml.XmlAttribute.OwnerElement
  - System.Xml.XmlAttribute.ParentNode
  - System.Xml.XmlAttribute.Prefix
  - System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.Specified
  - System.Xml.XmlAttribute.Value
  - System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: XmlAttribute
  fullName: System.Xml.XmlAttribute
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlAttribute
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 10
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Represents an attribute. Valid and default values for the attribute are defined in a document type definition (DTD) or schema.
  syntax:
    content: 'public class XmlAttribute : XmlNode'
    content.vb: >-
      Public Class XmlAttribute
          Inherits XmlNode
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  inheritedMembers:
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.Supports(System.String,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  commentId: M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: XmlAttribute(String, String, String, XmlDocument)
  fullName: System.Xml.XmlAttribute.XmlAttribute(System.String, System.String, System.String, System.Xml.XmlDocument)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 35
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlAttribute" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected XmlAttribute(string prefix, string localName, string namespaceURI, XmlDocument doc)
    content.vb: Protected Sub New(prefix As String, localName As String, namespaceURI As String, doc As XmlDocument)
    parameters:
    - id: prefix
      type: System.String
      description: The namespace prefix.
    - id: localName
      type: System.String
      description: The local name of the attribute.
    - id: namespaceURI
      type: System.String
      description: The namespace uniform resource identifier (URI).
    - id: doc
      type: System.Xml.XmlDocument
      description: The parent XML document.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.XmlAttribute.BaseURI
  commentId: P:System.Xml.XmlAttribute.BaseURI
  id: BaseURI
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: BaseURI
  fullName: System.Xml.XmlAttribute.BaseURI
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseURI
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 338
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the base Uniform Resource Identifier (URI) of the node.
  syntax:
    content: public override string BaseURI { get; }
    content.vb: Public Overrides ReadOnly Property BaseURI As String
    parameters: []
    return:
      type: System.String
      description: The location from which the node was loaded or String.Empty if the node has no base URI. Attribute nodes have the same base URI as their owner element. If an attribute node does not have an owner element, BaseURI returns String.Empty.
  overridden: System.Xml.XmlNode.BaseURI
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.XmlAttribute.InnerText
  commentId: P:System.Xml.XmlAttribute.InnerText
  id: InnerText
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: InnerText
  fullName: System.Xml.XmlAttribute.InnerText
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerText
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 109
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Sets the concatenated values of the node and all its children.
  syntax:
    content: public override string InnerText { set; }
    content.vb: Public Overrides WriteOnly Property InnerText As String
    parameters: []
    return:
      type: System.String
      description: The concatenated values of the node and all its children. For attribute nodes, this property has the same functionality as the <xref href="System.Xml.XmlAttribute.Value" data-throw-if-not-resolved="false"></xref> property.
  overridden: System.Xml.XmlNode.InnerText
  modifiers.csharp:
  - public
  - override
  - set
  modifiers.vb:
  - Public
  - Overrides
  - WriteOnly
- uid: System.Xml.XmlAttribute.InnerXml
  commentId: P:System.Xml.XmlAttribute.InnerXml
  id: InnerXml
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: InnerXml
  fullName: System.Xml.XmlAttribute.InnerXml
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerXml
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 311
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Sets the value of the attribute.
  syntax:
    content: public override string InnerXml { set; }
    content.vb: Public Overrides WriteOnly Property InnerXml As String
    parameters: []
    return:
      type: System.String
      description: The attribute value.
  overridden: System.Xml.XmlNode.InnerXml
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The XML specified when setting this property is not well-formed.
  modifiers.csharp:
  - public
  - override
  - set
  modifiers.vb:
  - Public
  - Overrides
  - WriteOnly
- uid: System.Xml.XmlAttribute.LocalName
  commentId: P:System.Xml.XmlAttribute.LocalName
  id: LocalName
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: LocalName
  fullName: System.Xml.XmlAttribute.LocalName
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalName
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 69
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the local name of the node.
  syntax:
    content: public override string LocalName { get; }
    content.vb: Public Overrides ReadOnly Property LocalName As String
    parameters: []
    return:
      type: System.String
      description: The name of the attribute node with the prefix removed. In the following example <book bk:genre= 'novel'>, the LocalName of the attribute is genre.
  overridden: System.Xml.XmlNode.LocalName
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.XmlAttribute.Name
  commentId: P:System.Xml.XmlAttribute.Name
  id: Name
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Xml.XmlAttribute.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 63
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the qualified name of the node.
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The qualified name of the attribute node.
  overridden: System.Xml.XmlNode.Name
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.XmlAttribute.NamespaceURI
  commentId: P:System.Xml.XmlAttribute.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: NamespaceURI
  fullName: System.Xml.XmlAttribute.NamespaceURI
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NamespaceURI
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 75
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the namespace URI of this node.
  syntax:
    content: public override string NamespaceURI { get; }
    content.vb: Public Overrides ReadOnly Property NamespaceURI As String
    parameters: []
    return:
      type: System.String
      description: The namespace URI of this node. If the attribute is not explicitly given a namespace, this property returns String.Empty.
  overridden: System.Xml.XmlNode.NamespaceURI
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.XmlAttribute.NodeType
  commentId: P:System.Xml.XmlAttribute.NodeType
  id: NodeType
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: NodeType
  fullName: System.Xml.XmlAttribute.NodeType
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NodeType
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 88
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the type of the current node.
  syntax:
    content: public override XmlNodeType NodeType { get; }
    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType
    parameters: []
    return:
      type: System.Xml.XmlNodeType
      description: The node type for XmlAttribute nodes is XmlNodeType.Attribute.
  overridden: System.Xml.XmlNode.NodeType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.XmlAttribute.OwnerDocument
  commentId: P:System.Xml.XmlAttribute.OwnerDocument
  id: OwnerDocument
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: OwnerDocument
  fullName: System.Xml.XmlAttribute.OwnerDocument
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OwnerDocument
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 94
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the <xref href="System.Xml.XmlDocument" data-throw-if-not-resolved="false"></xref> to which this node belongs.
  syntax:
    content: public override XmlDocument OwnerDocument { get; }
    content.vb: Public Overrides ReadOnly Property OwnerDocument As XmlDocument
    parameters: []
    return:
      type: System.Xml.XmlDocument
      description: An XML document to which this node belongs.
  overridden: System.Xml.XmlNode.OwnerDocument
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.XmlAttribute.OwnerElement
  commentId: P:System.Xml.XmlAttribute.OwnerElement
  id: OwnerElement
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: OwnerElement
  fullName: System.Xml.XmlAttribute.OwnerElement
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OwnerElement
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 302
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the <xref href="System.Xml.XmlElement" data-throw-if-not-resolved="false"></xref> to which the attribute belongs.
  syntax:
    content: public virtual XmlElement OwnerElement { get; }
    content.vb: Public Overridable ReadOnly Property OwnerElement As XmlElement
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: The XmlElement that the attribute belongs to or null if this attribute is not part of an XmlElement.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlAttribute.ParentNode
  commentId: P:System.Xml.XmlAttribute.ParentNode
  id: ParentNode
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: ParentNode
  fullName: System.Xml.XmlAttribute.ParentNode
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParentNode
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 57
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the parent of this node. For XmlAttribute nodes, this property always returns null.
  syntax:
    content: public override XmlNode ParentNode { get; }
    content.vb: Public Overrides ReadOnly Property ParentNode As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
      description: For XmlAttribute nodes, this property always returns null.
  overridden: System.Xml.XmlNode.ParentNode
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.XmlAttribute.Prefix
  commentId: P:System.Xml.XmlAttribute.Prefix
  id: Prefix
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: Prefix
  fullName: System.Xml.XmlAttribute.Prefix
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Prefix
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 81
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets or sets the namespace prefix of this node.
  syntax:
    content: public override string Prefix { get; set; }
    content.vb: Public Overrides Property Prefix As String
    parameters: []
    return:
      type: System.String
      description: The namespace prefix of this node. If there is no prefix, this property returns String.Empty.
  overridden: System.Xml.XmlNode.Prefix
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: This node is read-only.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The specified prefix contains an invalid character.The specified prefix is malformed.The namespaceURI of this node is null.The specified prefix is "xml", and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".This node is an attribute, the specified prefix is "xmlns", and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/".This node is an attribute, and the qualifiedName of this node is "xmlns" [Namespaces].
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlAttribute.Specified
  commentId: P:System.Xml.XmlAttribute.Specified
  id: Specified
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: Specified
  fullName: System.Xml.XmlAttribute.Specified
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Specified
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 198
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets a value indicating whether the attribute value was explicitly set.
  syntax:
    content: public virtual bool Specified { get; }
    content.vb: Public Overridable ReadOnly Property Specified As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this attribute was explicitly given a value in the original instance document; otherwise, false. A value of false indicates that the value of the attribute came from the DTD.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlAttribute.Value
  commentId: P:System.Xml.XmlAttribute.Value
  id: Value
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Xml.XmlAttribute.Value
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 103
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets or sets the value of the node.
  syntax:
    content: public override string Value { get; set; }
    content.vb: Public Overrides Property Value As String
    parameters: []
    return:
      type: System.String
      description: The value returned depends on the <xref href="System.Xml.XmlNode.NodeType" data-throw-if-not-resolved="false"></xref> of the node. For XmlAttribute nodes, this property is the value of attribute.
  overridden: System.Xml.XmlNode.Value
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The node is read-only and a set operation is called.
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  id: AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: AppendChild(XmlNode)
  fullName: System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AppendChild
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 283
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Adds the specified node to the end of the list of child nodes, of this node.
  syntax:
    content: public override XmlNode AppendChild(XmlNode newChild)
    content.vb: Public Overrides Function AppendChild(newChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> to add.
    return:
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> added.
  overridden: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This node is of a type that does not allow child nodes of the type of the <em>newChild</em> node.The <em>newChild</em> is an ancestor of this node.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <em>newChild</em> was created from a different document than the one that created this node.This node is read-only.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlAttribute.CloneNode(System.Boolean)
  commentId: M:System.Xml.XmlAttribute.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: CloneNode(Boolean)
  fullName: System.Xml.XmlAttribute.CloneNode(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloneNode
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 46
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Creates a duplicate of this node.
  syntax:
    content: public override XmlNode CloneNode(bool deep)
    content.vb: Public Overrides Function CloneNode(deep As Boolean) As XmlNode
    parameters:
    - id: deep
      type: System.Boolean
      description: 'true to recursively clone the subtree under the specified node; false to clone only the node itself '
    return:
      type: System.Xml.XmlNode
      description: The duplicate node.
  overridden: System.Xml.XmlNode.CloneNode(System.Boolean)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: InsertAfter(XmlNode, XmlNode)
  fullName: System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertAfter
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 219
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Inserts the specified node immediately after the specified reference node.
  syntax:
    content: public override XmlNode InsertAfter(XmlNode newChild, XmlNode refChild)
    content.vb: Public Overrides Function InsertAfter(newChild As XmlNode, refChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> to insert.
    - id: refChild
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> that is the reference node. The <em>newChild</em> is placed after the <em>refChild</em>.
    return:
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> inserted.
  overridden: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This node is of a type that does not allow child nodes of the type of the <em>newChild</em> node.The <em>newChild</em> is an ancestor of this node.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <em>newChild</em> was created from a different document than the one that created this node.The <em>refChild</em> is not a child of this node.This node is read-only.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: InsertBefore(XmlNode, XmlNode)
  fullName: System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertBefore
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 203
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Inserts the specified node immediately before the specified reference node.
  syntax:
    content: public override XmlNode InsertBefore(XmlNode newChild, XmlNode refChild)
    content.vb: Public Overrides Function InsertBefore(newChild As XmlNode, refChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> to insert.
    - id: refChild
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> that is the reference node. The <em>newChild</em> is placed before this node.
    return:
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> inserted.
  overridden: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current node is of a type that does not allow child nodes of the type of the <em>newChild</em> node.The <em>newChild</em> is an ancestor of this node.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <em>newChild</em> was created from a different document than the one that created this node.The <em>refChild</em> is not a child of this node.This node is read-only.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  id: PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: PrependChild(XmlNode)
  fullName: System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PrependChild
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 267
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Adds the specified node to the beginning of the list of child nodes for this node.
  syntax:
    content: public override XmlNode PrependChild(XmlNode newChild)
    content.vb: Public Overrides Function PrependChild(newChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> to add. If it is an <xref href="System.Xml.XmlDocumentFragment" data-throw-if-not-resolved="false"></xref>, the entire contents of the document fragment are moved into the child list of this node.
    return:
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> added.
  overridden: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This node is of a type that does not allow child nodes of the type of the <em>newChild</em> node.The <em>newChild</em> is an ancestor of this node.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <em>newChild</em> was created from a different document than the one that created this node.This node is read-only.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  id: RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: RemoveChild(XmlNode)
  fullName: System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveChild
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 251
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Removes the specified child node.
  syntax:
    content: public override XmlNode RemoveChild(XmlNode oldChild)
    content.vb: Public Overrides Function RemoveChild(oldChild As XmlNode) As XmlNode
    parameters:
    - id: oldChild
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> to remove.
    return:
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> removed.
  overridden: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <em>oldChild</em> is not a child of this node. Or this node is read-only.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  id: ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: ReplaceChild(XmlNode, XmlNode)
  fullName: System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReplaceChild
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlAttribute.cs
    startLine: 235
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Replaces the child node specified with the new child node specified.
  syntax:
    content: public override XmlNode ReplaceChild(XmlNode newChild, XmlNode oldChild)
    content.vb: Public Overrides Function ReplaceChild(newChild As XmlNode, oldChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: The new child <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref>.
    - id: oldChild
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> to replace.
    return:
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> replaced.
  overridden: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This node is of a type that does not allow child nodes of the type of the <em>newChild</em> node.The <em>newChild</em> is an ancestor of this node.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <em>newChild</em> was created from a different document than the one that created this node.This node is read-only.The <em>oldChild</em> is not a child of this node.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteContentTo
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 33
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Saves all the children of the node to the specified <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override void WriteContentTo(XmlWriter w)
    content.vb: Public Overrides Sub WriteContentTo(w As XmlWriter)
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: The XmlWriter to which you want to save.
  overridden: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteTo
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 34
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Saves the node to the specified <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override void WriteTo(XmlWriter w)
    content.vb: Public Overrides Sub WriteTo(w As XmlWriter)
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: The XmlWriter to which you want to save.
  overridden: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.XmlNode.Attributes
  parent: System.Xml.XmlNode
  isExternal: false
  name: Attributes
  fullName: System.Xml.XmlNode.Attributes
- uid: System.Xml.XmlNode.ChildNodes
  parent: System.Xml.XmlNode
  isExternal: false
  name: ChildNodes
  fullName: System.Xml.XmlNode.ChildNodes
- uid: System.Xml.XmlNode.FirstChild
  parent: System.Xml.XmlNode
  isExternal: false
  name: FirstChild
  fullName: System.Xml.XmlNode.FirstChild
- uid: System.Xml.XmlNode.HasChildNodes
  parent: System.Xml.XmlNode
  isExternal: false
  name: HasChildNodes
  fullName: System.Xml.XmlNode.HasChildNodes
- uid: System.Xml.XmlNode.IsReadOnly
  parent: System.Xml.XmlNode
  isExternal: false
  name: IsReadOnly
  fullName: System.Xml.XmlNode.IsReadOnly
- uid: System.Xml.XmlNode.Item(System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: Item[String]
  fullName: System.Xml.XmlNode.Item[System.String]
  fullname.vb: System.Xml.XmlNode.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Xml.XmlNode.Item(System.String)
    name: Item
    fullName: System.Xml.XmlNode.Item
  - name: '['
    fullName: '['
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Xml.XmlNode.Item(System.String)
    name: Item
    fullName: System.Xml.XmlNode.Item
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.Item(System.String,System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: Item[String, String]
  fullName: System.Xml.XmlNode.Item[System.String, System.String]
  fullname.vb: System.Xml.XmlNode.Item(System.String, System.String)
  name.vb: Item(String, String)
  spec.csharp:
  - uid: System.Xml.XmlNode.Item(System.String,System.String)
    name: Item
    fullName: System.Xml.XmlNode.Item
  - name: '['
    fullName: '['
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Xml.XmlNode.Item(System.String,System.String)
    name: Item
    fullName: System.Xml.XmlNode.Item
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.LastChild
  parent: System.Xml.XmlNode
  isExternal: false
  name: LastChild
  fullName: System.Xml.XmlNode.LastChild
- uid: System.Xml.XmlNode.NextSibling
  parent: System.Xml.XmlNode
  isExternal: false
  name: NextSibling
  fullName: System.Xml.XmlNode.NextSibling
- uid: System.Xml.XmlNode.OuterXml
  parent: System.Xml.XmlNode
  isExternal: false
  name: OuterXml
  fullName: System.Xml.XmlNode.OuterXml
- uid: System.Xml.XmlNode.PreviousSibling
  parent: System.Xml.XmlNode
  isExternal: false
  name: PreviousSibling
  fullName: System.Xml.XmlNode.PreviousSibling
- uid: System.Xml.XmlNode.PreviousText
  parent: System.Xml.XmlNode
  isExternal: false
  name: PreviousText
  fullName: System.Xml.XmlNode.PreviousText
- uid: System.Xml.XmlNode.GetEnumerator
  parent: System.Xml.XmlNode
  isExternal: false
  name: GetEnumerator()
  fullName: System.Xml.XmlNode.GetEnumerator()
  spec.csharp:
  - uid: System.Xml.XmlNode.GetEnumerator
    name: GetEnumerator
    fullName: System.Xml.XmlNode.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.GetEnumerator
    name: GetEnumerator
    fullName: System.Xml.XmlNode.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: GetNamespaceOfPrefix(String)
  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  spec.csharp:
  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
    name: GetNamespaceOfPrefix
    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
    name: GetNamespaceOfPrefix
    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: GetPrefixOfNamespace(String)
  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  spec.csharp:
  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
    name: GetPrefixOfNamespace
    fullName: System.Xml.XmlNode.GetPrefixOfNamespace
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
    name: GetPrefixOfNamespace
    fullName: System.Xml.XmlNode.GetPrefixOfNamespace
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.Normalize
  parent: System.Xml.XmlNode
  isExternal: false
  name: Normalize()
  fullName: System.Xml.XmlNode.Normalize()
  spec.csharp:
  - uid: System.Xml.XmlNode.Normalize
    name: Normalize
    fullName: System.Xml.XmlNode.Normalize
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.Normalize
    name: Normalize
    fullName: System.Xml.XmlNode.Normalize
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.RemoveAll
  parent: System.Xml.XmlNode
  isExternal: false
  name: RemoveAll()
  fullName: System.Xml.XmlNode.RemoveAll()
  spec.csharp:
  - uid: System.Xml.XmlNode.RemoveAll
    name: RemoveAll
    fullName: System.Xml.XmlNode.RemoveAll
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.RemoveAll
    name: RemoveAll
    fullName: System.Xml.XmlNode.RemoveAll
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.Supports(System.String,System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: Supports(String, String)
  fullName: System.Xml.XmlNode.Supports(System.String, System.String)
  spec.csharp:
  - uid: System.Xml.XmlNode.Supports(System.String,System.String)
    name: Supports
    fullName: System.Xml.XmlNode.Supports
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.Supports(System.String,System.String)
    name: Supports
    fullName: System.Xml.XmlNode.Supports
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlNode.BaseURI
  parent: System.Xml.XmlNode
  isExternal: false
  name: BaseURI
  fullName: System.Xml.XmlNode.BaseURI
- uid: System.Xml.XmlNode.InnerText
  parent: System.Xml.XmlNode
  isExternal: false
  name: InnerText
  fullName: System.Xml.XmlNode.InnerText
- uid: System.Xml.XmlNode.InnerXml
  parent: System.Xml.XmlNode
  isExternal: false
  name: InnerXml
  fullName: System.Xml.XmlNode.InnerXml
- uid: System.Xml.XmlNode.LocalName
  parent: System.Xml.XmlNode
  isExternal: false
  name: LocalName
  fullName: System.Xml.XmlNode.LocalName
- uid: System.Xml.XmlNode.Name
  parent: System.Xml.XmlNode
  isExternal: false
  name: Name
  fullName: System.Xml.XmlNode.Name
- uid: System.Xml.XmlNode.NamespaceURI
  parent: System.Xml.XmlNode
  isExternal: false
  name: NamespaceURI
  fullName: System.Xml.XmlNode.NamespaceURI
- uid: System.Xml.XmlNode.NodeType
  parent: System.Xml.XmlNode
  isExternal: false
  name: NodeType
  fullName: System.Xml.XmlNode.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlNode.OwnerDocument
  parent: System.Xml.XmlNode
  isExternal: false
  name: OwnerDocument
  fullName: System.Xml.XmlNode.OwnerDocument
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.XmlNode.ParentNode
  parent: System.Xml.XmlNode
  isExternal: false
  name: ParentNode
  fullName: System.Xml.XmlNode.ParentNode
- uid: System.Xml.XmlNode.Prefix
  parent: System.Xml.XmlNode
  isExternal: false
  name: Prefix
  fullName: System.Xml.XmlNode.Prefix
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlNode.Value
  parent: System.Xml.XmlNode
  isExternal: false
  name: Value
  fullName: System.Xml.XmlNode.Value
- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: AppendChild(XmlNode)
  fullName: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
    name: AppendChild
    fullName: System.Xml.XmlNode.AppendChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
    name: AppendChild
    fullName: System.Xml.XmlNode.AppendChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.CloneNode(System.Boolean)
  parent: System.Xml.XmlNode
  isExternal: true
  name: CloneNode(Boolean)
  fullName: System.Xml.XmlNode.CloneNode(System.Boolean)
  spec.csharp:
  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)
    name: CloneNode
    fullName: System.Xml.XmlNode.CloneNode
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)
    name: CloneNode
    fullName: System.Xml.XmlNode.CloneNode
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: InsertAfter(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertAfter
    fullName: System.Xml.XmlNode.InsertAfter
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertAfter
    fullName: System.Xml.XmlNode.InsertAfter
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: InsertBefore(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertBefore
    fullName: System.Xml.XmlNode.InsertBefore
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertBefore
    fullName: System.Xml.XmlNode.InsertBefore
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: PrependChild(XmlNode)
  fullName: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
    name: PrependChild
    fullName: System.Xml.XmlNode.PrependChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
    name: PrependChild
    fullName: System.Xml.XmlNode.PrependChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: RemoveChild(XmlNode)
  fullName: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
    name: RemoveChild
    fullName: System.Xml.XmlNode.RemoveChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
    name: RemoveChild
    fullName: System.Xml.XmlNode.RemoveChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: ReplaceChild(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
    name: ReplaceChild
    fullName: System.Xml.XmlNode.ReplaceChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
    name: ReplaceChild
    fullName: System.Xml.XmlNode.ReplaceChild
  - name: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    fullName: )
- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlNode
  isExternal: true
  name: WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
    name: WriteContentTo
    fullName: System.Xml.XmlNode.WriteContentTo
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
    name: WriteContentTo
    fullName: System.Xml.XmlNode.WriteContentTo
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlNode
  isExternal: true
  name: WriteTo(XmlWriter)
  fullName: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
    name: WriteTo
    fullName: System.Xml.XmlNode.WriteTo
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
    name: WriteTo
    fullName: System.Xml.XmlNode.WriteTo
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlException
  isExternal: false
  name: XmlException
  fullName: System.Xml.XmlException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
