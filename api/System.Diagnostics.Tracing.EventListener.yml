items:
- uid: System.Diagnostics.Tracing.EventListener
  commentId: T:System.Diagnostics.Tracing.EventListener
  id: EventListener
  parent: System.Diagnostics.Tracing
  children:
  - System.Diagnostics.Tracing.EventListener.#ctor
  - System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  - System.Diagnostics.Tracing.EventListener.Dispose
  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  - System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  - System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  langs:
  - csharp
  - vb
  name: EventListener
  fullName: System.Diagnostics.Tracing.EventListener
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventListener
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4214
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Provides methods for enabling and disabling events from event sources.
  syntax:
    content: 'public abstract class EventListener : IDisposable'
    content.vb: >-
      Public MustInherit Class EventListener
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Diagnostics.Tracing.EventListener.#ctor
  commentId: M:System.Diagnostics.Tracing.EventListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  - vb
  name: EventListener()
  fullName: System.Diagnostics.Tracing.EventListener.EventListener()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4254
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Creates a new instance of the <xref href="System.Diagnostics.Tracing.EventListener" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected EventListener()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  commentId: M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  id: DisableEvents(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  - vb
  name: DisableEvents(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DisableEvents
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4364
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Disables all events for the specified event source.
  syntax:
    content: public void DisableEvents(EventSource eventSource)
    content.vb: Public Sub DisableEvents(eventSource As EventSource)
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: The event source to disable events for.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Tracing.EventListener.Dispose
  commentId: M:System.Diagnostics.Tracing.EventListener.Dispose
  id: Dispose
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Diagnostics.Tracing.EventListener.Dispose()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4269
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Releases the resources used by the current instance of the <xref href="System.Diagnostics.Tracing.EventListener" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  commentId: M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  id: EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  - vb
  name: EnableEvents(EventSource, EventLevel)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EnableEvents
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4318
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Enables events for the specified event source that has the specified verbosity level or lower.
  syntax:
    content: public void EnableEvents(EventSource eventSource, EventLevel level)
    content.vb: Public Sub EnableEvents(eventSource As EventSource, level As EventLevel)
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: The event source to enable events for.
    - id: level
      type: System.Diagnostics.Tracing.EventLevel
      description: The level of events to enable.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  commentId: M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  id: EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  - vb
  name: EnableEvents(EventSource, EventLevel, EventKeywords)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EnableEvents
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4333
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Enables events for the specified event source that has the specified verbosity level or lower, and matching keyword flags.
  syntax:
    content: public void EnableEvents(EventSource eventSource, EventLevel level, EventKeywords matchAnyKeyword)
    content.vb: Public Sub EnableEvents(eventSource As EventSource, level As EventLevel, matchAnyKeyword As EventKeywords)
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: The event source to enable events for.
    - id: level
      type: System.Diagnostics.Tracing.EventLevel
      description: The level of events to enable.
    - id: matchAnyKeyword
      type: System.Diagnostics.Tracing.EventKeywords
      description: The keyword flags necessary to enable the events.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  id: EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  - vb
  name: EnableEvents(EventSource, EventLevel, EventKeywords, Collections.Generic.IDictionary<String, String>)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EnableEvents
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4349
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Enables events for the specified event source that has the specified verbosity level or lower, matching event keyword flag, and matching arguments.
  syntax:
    content: public void EnableEvents(EventSource eventSource, EventLevel level, EventKeywords matchAnyKeyword, Collections.Generic.IDictionary<string, string> arguments)
    content.vb: Public Sub EnableEvents(eventSource As EventSource, level As EventLevel, matchAnyKeyword As EventKeywords, arguments As Collections.Generic.IDictionary(Of String, String))
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: The event source to enable events for.
    - id: level
      type: System.Diagnostics.Tracing.EventLevel
      description: The level of events to enable.
    - id: matchAnyKeyword
      type: System.Diagnostics.Tracing.EventKeywords
      description: The keyword flags necessary to enable the events.
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: The arguments to be matched to enable the events.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: EnableEvents(EventSource, EventLevel, EventKeywords, Collections.Generic.IDictionary(Of String, String))
- uid: System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  commentId: M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  id: EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  - vb
  name: EventSourceIndex(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventSourceIndex
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4382
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Gets a small non-negative number that represents the specified event source.
  syntax:
    content: protected static int EventSourceIndex(EventSource eventSource)
    content.vb: Protected Shared Function EventSourceIndex(eventSource As EventSource) As Integer
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: The event source to find the index for.
    return:
      type: System.Int32
      description: A small non-negative number that represents the specified event source.
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  commentId: M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  id: OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  - vb
  name: OnEventSourceCreated(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OnEventSourceCreated
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4397
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Called for all existing event sources when the event listener is created and when a new event source is attached to the listener.
  syntax:
    content: protected virtual void OnEventSourceCreated(EventSource eventSource)
    content.vb: Protected Overridable Sub OnEventSourceCreated(eventSource As EventSource)
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: The event source.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  commentId: M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  id: OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  - vb
  name: OnEventWritten(EventWrittenEventArgs)
  fullName: System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OnEventWritten
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4413
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: Called whenever an event has been written by an event source for which the event listener has enabled events.
  syntax:
    content: protected abstract void OnEventWritten(EventWrittenEventArgs eventData)
    content.vb: Protected MustOverride Sub OnEventWritten(eventData As EventWrittenEventArgs)
    parameters:
    - id: eventData
      type: System.Diagnostics.Tracing.EventWrittenEventArgs
      description: The event arguments that describe the event.
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: System.Diagnostics.Tracing
  isExternal: false
  name: System.Diagnostics.Tracing
  fullName: System.Diagnostics.Tracing
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Diagnostics.Tracing.EventSource
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventSource
  fullName: System.Diagnostics.Tracing.EventSource
- uid: System.Diagnostics.Tracing.EventLevel
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventLevel
  fullName: System.Diagnostics.Tracing.EventLevel
- uid: System.Diagnostics.Tracing.EventKeywords
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventKeywords
  fullName: System.Diagnostics.Tracing.EventKeywords
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  definition: System.Collections.Generic.IDictionary`2
  name: Collections.Generic.IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: Collections.Generic.IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  name: Generic.IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  fullname.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventWrittenEventArgs
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs
